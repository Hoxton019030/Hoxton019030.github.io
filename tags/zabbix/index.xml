<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Zabbix on Hoxton</title><link>https://hoxtonhsu.com/tags/zabbix/</link><description>Recent content in Zabbix on Hoxton</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Thu, 16 Mar 2023 06:41:23 +0000</lastBuildDate><atom:link href="https://hoxtonhsu.com/tags/zabbix/index.xml" rel="self" type="application/rss+xml"/><item><title>使用Docker在window會出現的File Not Found問題</title><link>https://hoxtonhsu.com/p/%E4%BD%BF%E7%94%A8docker%E5%9C%A8window%E6%9C%83%E5%87%BA%E7%8F%BE%E7%9A%84file-not-found%E5%95%8F%E9%A1%8C/</link><pubDate>Thu, 16 Mar 2023 06:41:23 +0000</pubDate><guid>https://hoxtonhsu.com/p/%E4%BD%BF%E7%94%A8docker%E5%9C%A8window%E6%9C%83%E5%87%BA%E7%8F%BE%E7%9A%84file-not-found%E5%95%8F%E9%A1%8C/</guid><description>&lt;img src="https://i.imgur.com/AP3wJLN.png" alt="Featured image of post 使用Docker在window會出現的File Not Found問題" />&lt;h1 id="前情提要">前情提要&lt;/h1>
&lt;p>最近在學習zabbix時，安裝在Linux系統下時，透過Postman是可以正常取得資料的&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/DX2FgEJ.png"
loading="lazy"
>&lt;/p>
&lt;p>但是當我用Docker把Zabbix架設在Window環境下時卻一直出現&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">File not found.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>的錯誤&lt;/p>
&lt;h1 id="發現錯誤">發現錯誤&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/GNtvhd5.png"
loading="lazy"
>&lt;/p>
&lt;p>兩邊的版本、設置、Server Port都一樣，完全不知道到底發生了什麼問題，後來是透過網頁的開發人員工具才發現一小處的不同&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/W3r8xcI.png"
loading="lazy"
>&lt;/p>
&lt;p>這是Linux環境下的API請求&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Y2XdCFb.png"
loading="lazy"
>
這是Window下的API請求&lt;/p>
&lt;p>聰明的你一定發現了，*&lt;strong>肏你媽的這兩個API請求的URL完全不一樣啊，幹你媽的&lt;/strong>&lt;/p>
&lt;h1 id="解決方法">解決方法&lt;/h1>
&lt;p>我個人猜應該是Docker在部屬的時候，不知道為什麼裡面檔案的結構層級直接跳過了\zabbix這一層，直接變成&lt;code>http://localhost/api_jsonrpc.php&lt;/code>的路徑。&lt;/p>
&lt;p>將URL改成正確地之後就能正常訪問了&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/1OlT37p.gif"
loading="lazy"
>&lt;/p></description></item><item><title>Zabbix的一些筆記</title><link>https://hoxtonhsu.com/p/zabbix%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AD%86%E8%A8%98/</link><pubDate>Mon, 13 Mar 2023 05:40:02 +0000</pubDate><guid>https://hoxtonhsu.com/p/zabbix%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AD%86%E8%A8%98/</guid><description>&lt;img src="https://i.imgur.com/7g77ZiN.png" alt="Featured image of post Zabbix的一些筆記" />&lt;p>參考網址：&lt;a class="link" href="https://ithelp.ithome.com.tw/articles/10263907" target="_blank" rel="noopener"
>監控大挑戰 - 以 Zabbix 為例&lt;/a>&lt;/p>
&lt;h1 id="zabbix是什麼">Zabbix是什麼&lt;/h1>
&lt;p>Zabbix是一種開源的網絡監視和警報系統，用於監視各種網絡設備，包括服務器、網絡設備和應用程序等。Zabbix提供了一個可擴展的架構，可用於監視多個位置的數千個設備。&lt;/p>
&lt;p>Zabbix支持各種監視方式，包括SNMP、JMX、IPMI和VMware監視，還可以通過自定義監視腳本進行擴展。Zabbix還提供了一個強大的報警系統，可以通過電子郵件、SMS和其他方式發送警報，以便快速解決問題。&lt;/p>
&lt;p>Zabbix還提供了一個用戶友好的Web界面，可以輕鬆設置監視器和警報。Zabbix的開源設計使其成為一個非常有用的監視解決方案，可以滿足各種規模的企業和組織的需求&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/f9AxFB5.png"
loading="lazy"
alt="image-20230313142828806"
>&lt;/p>
&lt;h1 id="zabbix術語">Zabbix術語&lt;/h1>
&lt;p>Zabbix Server&lt;/p>
&lt;ul>
&lt;li>Zabbix server是agent程序報告系統可用性、系統完整性和統計數據的核心組件，是所有配置訊息、統計訊息和操作數據的核心儲存器&lt;/li>
&lt;/ul>
&lt;p>Zabbix資料庫存取&lt;/p>
&lt;ul>
&lt;li>所有配置訊息和Zabbix收集到的數據都被儲存在資料庫中&lt;/li>
&lt;/ul>
&lt;p>Zabbix Web介面&lt;/p>
&lt;ul>
&lt;li>為了從任何地方和任何平台都可以輕鬆地訪問Zabbix，我們提供基於Web的Zabbix介面，該介面是Zabbix Server的一部分，通常(但不一定)跟Zabbix Server運行在同一台物理主機上&lt;/li>
&lt;/ul>
&lt;p>Zabbix Proxy 代理服務器&lt;/p>
&lt;ul>
&lt;li>Zabbix Proxy可以替Zabbix Server收集性能和可用性數據。Proxy代理服務器是Zabbix軟體可選擇部屬的一部分，當然，Proxy代理服務器可以幫助單台Zabbix Server分擔負載壓力&lt;/li>
&lt;/ul>
&lt;p>Zabbix Agent 監控代理&lt;/p>
&lt;ul>
&lt;li>Zabbix agent 監控代理，部屬在監控目標上，能夠主動間空本地資源和應用程序，並將收集到的數據報告給Zabbix Server&lt;/li>
&lt;/ul>
&lt;p>Zabbix數據流&lt;/p>
&lt;ul>
&lt;li>監控方面，為了創造一個監控項(item)用於採集數據，必須先創建一個主機(host)&lt;/li>
&lt;li>告警方面，在監控項裡面創造觸發器(trigger)，通過觸發器(trigger)來觸發告警動作(action)。因此如果你想收到Server XCPU負載過高的告警，必須滿足&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>為Server X創建一個Host並關聯一個用對CPU進行監控的監控項(item)&lt;/li>
&lt;li>創建一個Trigger，設置成當CPU負載過高時會觸發&lt;/li>
&lt;li>Trigger被觸發，發送告警郵件&lt;/li>
&lt;/ol>
&lt;p>雖然看起來有很多步驟，但是使用模板的話操作起來其實非常簡單，Zabbix這樣的設計使得配置機制非常靈活易用&lt;/p>
&lt;p>主機(Host)&lt;/p>
&lt;ul>
&lt;li>一台你想監控的網路設備，用IP和域名表示&lt;/li>
&lt;/ul>
&lt;p>主機組(host Group)&lt;/p>
&lt;ul>
&lt;li>主機的邏輯組；包含了主機和模板。一個主機裡的主機和模板之間並沒有任何直接的關聯，通常在給不同用戶組的主機分配權限時，使用主機組&lt;/li>
&lt;/ul>
&lt;p>監控項(item)&lt;/p>
&lt;ul>
&lt;li>你想要接收的主機的特定數據，一個度量數據&lt;/li>
&lt;/ul>
&lt;p>觸發器(Trigger)&lt;/p>
&lt;ul>
&lt;li>一個被用於定義問題閾值和&amp;quot;評估&amp;quot;監控項接受到的數據的邏輯表達式，當接收到的數據高於閾值時，觸發器從OK變成Problem狀態。當接收到的數據低於閾值時，觸發器保留/返回一個OK的狀態&lt;/li>
&lt;/ul>
&lt;p>事件(Event)&lt;/p>
&lt;ul>
&lt;li>單次發生的需要注意的事情，例如觸發器狀態改變，或是發現有監控代理自動註冊&lt;/li>
&lt;/ul>
&lt;p>異常(Problem)&lt;/p>
&lt;ul>
&lt;li>一個處在&lt;strong>異常&lt;/strong>狀態的觸發器&lt;/li>
&lt;/ul>
&lt;p>動作(Action)&lt;/p>
&lt;ul>
&lt;li>一個對事件做出反應的預定義的操作&lt;/li>
&lt;li>一個動作由操作(例如發出通知)和條件(當時操作正在發生)組成&lt;/li>
&lt;/ul>
&lt;p>升級(Escalation)&lt;/p>
&lt;ul>
&lt;li>一個在動作內執行操作的自定義場景；發生通知／執行遠程命令的序列&lt;/li>
&lt;/ul>
&lt;p>媒介(Media)&lt;/p>
&lt;ul>
&lt;li>發送告警通知的手段；告警通知的途徑&lt;/li>
&lt;/ul>
&lt;p>通知(Notification)&lt;/p>
&lt;ul>
&lt;li>利用已選擇的媒體途徑把跟事件相關的訊息發送給用戶&lt;/li>
&lt;/ul>
&lt;p>遠程命令(remote command)&lt;/p>
&lt;ul>
&lt;li>一個預定義好的，滿足一些條件的情況下，可以在被監控主機上自動執行的命令&lt;/li>
&lt;/ul>
&lt;p>模板(template)&lt;/p>
&lt;ul>
&lt;li>一組可以被應用到一個或多個主機上的實體(監控項、觸發器、圖形、聚合圖形、應用、LLD、Web場景)的集合&lt;/li>
&lt;li>模板的任務就是加快對主機監控任務的實施；也可以使監控任務的批量修改更簡單。模板是直接關連到每台單獨的主機上&lt;/li>
&lt;/ul>
&lt;p>應用(Application)&lt;/p>
&lt;ul>
&lt;li>一組監控項組成的邏輯分組&lt;/li>
&lt;/ul>
&lt;p>Web場景(Web Scenario)&lt;/p>
&lt;ul>
&lt;li>利用一個或多個HTTP請求來檢查網站的可用性&lt;/li>
&lt;/ul>
&lt;p>前端(FrontEnd)&lt;/p>
&lt;ul>
&lt;li>Zabbix提供的Web介面&lt;/li>
&lt;/ul>
&lt;p>Zabbix API&lt;/p>
&lt;ul>
&lt;li>Zabbix API允許你使用JSON RPC協議(是一個無狀態且輕量級的遠程過程調用&lt;code>Remote Procedure Call &lt;/code>傳送協議，其傳遞內容透過JSON為主)來創建、更新和獲取Zabbix對象(如主機、監控項、圖形和其他)信息或者執行任何其他的字定義的任務&lt;/li>
&lt;/ul>
&lt;p>Zabbix Server&lt;/p>
&lt;ul>
&lt;li>Zabbix軟件實現監控的核心程序，主要功能是與Zabbix proxies和Agents進行交互、觸發器計算、發送告警通知、並將資料集中保存&lt;/li>
&lt;/ul>
&lt;p>Zabbix Agent&lt;/p>
&lt;ul>
&lt;li>一個部屬在監控對象上的，能夠主動監控本地資源和應用的程序&lt;/li>
&lt;li>Zabbix Agent部屬在監控的目標上，主動監測本地的資源和應用(硬體驅動、記憶體、處理器統計等等)&lt;/li>
&lt;li>Zabbix Agent收集本地的操作訊息並將資料報告給Zabbix Server用於進一步處理。一旦出現異常(比如硬碟空間已滿或者有崩潰的服務器Process)，Zabbix Server會主動警告管理員指定機器上的異常。Zabbix Agents的極端高校源於他可以利用本地系統調用來完成統計數據的收集&lt;/li>
&lt;/ul>
&lt;p>被動(Passive) 和 主動(Active)檢查&lt;/p>
&lt;ul>
&lt;li>Zabbix Agent可以執行被動和主動兩種檢查方式&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>被動檢查(Passive Check)模式中Agent應答數據請求，Zabbix Server(或者Proxy)詢問Agent資料，如CPU負仔狀況，然後Zabbix Agent回傳結果&lt;/li>
&lt;li>主動檢查(Active Checks) 處理過程將相對複雜。Agent必須首先從Zabbix server索取監控項列表以進行獨立處理，然後週期性的發送新的值給Server&lt;/li>
&lt;/ol>
&lt;p>執行被動或主動檢查是通過選擇相應的監測項目類型來配置的。Item Type. Zabbix Agent處理監控項類型有Zabbix agent和 Zabbix Agent(Active)&lt;/p>
&lt;p>Zabbix Proxy&lt;/p>
&lt;ul>
&lt;li>一個幫助Zabbix server收集數據，分擔Zabbix Server負擔的程式&lt;/li>
&lt;li>Zabbix Proxy是一個可以從一個或多個受監控設備收集監控數據，並將訊息結果發送到Zabbix Server的Process，基本上是代表Server工作的。所有收集的數據都在本地進行快取，然後傳送到Proxy所屬的Zabbix Server。&lt;/li>
&lt;li>部屬Proxy是可選的，但是可能會非常有益於分散單個Zabbix Sever的負載，如果只有Proxy收集數據，Server上的進程就會減少，CPU消耗和磁碟I/O負載&lt;/li>
&lt;li>Zabbix Proxy是完成遠端區域，分支機構，沒有本地管理員的網路集中監控的理想解決方案&lt;/li>
&lt;li>Zabbix Proxy需要使用獨立的資料庫&lt;/li>
&lt;/ul>
&lt;h1 id="使用docker安裝-zabbix">使用Docker安裝 Zabbix&lt;/h1>
&lt;p>首先先點到下列網站
&lt;a href="https://www.zabbix.com/documentation/5.0/en/manual/installation/containers">https://www.zabbix.com/documentation/5.0/en/manual/installation/containers&lt;/a>&lt;/p>
&lt;p>並在這邊選擇要使用的版本
&lt;img src="https://i.imgur.com/WNJujBy.png"
loading="lazy"
>&lt;/p>
&lt;p>這次是使用官網提供的，也就是用mysql當database的版本&lt;/p>
&lt;p>並按照下列的cmd指令輸入，下面的參數，若有需要變可以在自行修改&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker network create --subnet 172.20.0.0/16 --ip-range 172.20.240.0/20 zabbix-net
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --name postgres-server -t -e &lt;span class="nv">POSTGRES_USER&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix_pwd&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_DB&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> --network&lt;span class="o">=&lt;/span>zabbix-net --restart unless-stopped -d postgres:latest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --name zabbix-snmptraps -t -v /zbx_instance/snmptraps:/var/lib/zabbix/snmptraps:rw -v /var/lib/zabbix/mibs:/usr/share/snmp/mibs:ro --network&lt;span class="o">=&lt;/span>zabbix-net -p 162:1162/udp --restart unless-stopped -d zabbix/zabbix-snmptraps:alpine-5.0-latest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">ddocker run --name zabbix-server-pgsql -t -e &lt;span class="nv">DB_SERVER_HOST&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgres-server&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_USER&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix_pwd&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_DB&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> -e &lt;span class="nv">ZBX_ENABLE_SNMP_TRAPS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span> --network&lt;span class="o">=&lt;/span>zabbix-net -p 10051:10051 --volumes-from zabbix-snmptraps --restart unless-stopped -d zabbix/zabbix-server-pgsql:alpine-5.0-latest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --name zabbix-web-nginx-pgsql -t -e &lt;span class="nv">ZBX_SERVER_HOST&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix-server-pgsql&amp;#34;&lt;/span> -e &lt;span class="nv">DB_SERVER_HOST&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgres-server&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_USER&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix_pwd&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_DB&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> --network&lt;span class="o">=&lt;/span>zabbix-net -p 443:8443 -p 80:8080 -v /etc/ssl/nginx:/etc/ssl/nginx:ro --restart unless-stopped -d zabbix/zabbix-web-nginx-pgsql:alpine-5.0-latest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>當全部都設置好後&lt;/p>
&lt;p>訪問 http://localohst/ 即可訪問Zabbix頁面&lt;/p>
&lt;p>帳號：Admin
密碼：zabbix&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/T8tGvQQ.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="使用docker安裝可能導致api路徑不正確">使用Docker安裝，可能導致API路徑不正確&lt;/h1>
&lt;p>最近在學習zabbix時，安裝在Linux系統下時，透過Postman是可以正常取得資料的&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/DX2FgEJ.png"
loading="lazy"
>&lt;/p>
&lt;p>但是當我用Docker把Zabbix架設在Window環境下時卻一直出現&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">File not found.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>的錯誤&lt;/p>
&lt;h2 id="發現錯誤">發現錯誤&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/GNtvhd5.png"
loading="lazy"
>&lt;/p>
&lt;p>兩邊的版本、設置、Server Port都一樣，完全不知道到底發生了什麼問題，後來是透過網頁的開發人員工具才發現一小處的不同&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/W3r8xcI.png"
loading="lazy"
>&lt;/p>
&lt;p>這是Linux環境下的API請求&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Y2XdCFb.png"
loading="lazy"
>
這是Window下的API請求&lt;/p>
&lt;p>聰明的你一定發現了，肏你媽的這兩個API請求的URL完全不一樣啊，幹你媽的&lt;/p>
&lt;h2 id="解決方法">解決方法&lt;/h2>
&lt;p>我個人猜應該是Docker在部屬的時候，不知道為什麼裡面檔案的結構層級直接跳過了\zabbix這一層，直接變成&lt;code>http://localhost/api_jsonrpc.php&lt;/code>的路徑。&lt;/p>
&lt;p>將URL改成正確地之後就能正常訪問了&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/1OlT37p.gif"
loading="lazy"
>&lt;/p></description></item></channel></rss>