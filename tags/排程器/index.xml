<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>排程器 on Hoxton</title><link>https://hoxtoncraft.com/tags/%E6%8E%92%E7%A8%8B%E5%99%A8/</link><description>Recent content in 排程器 on Hoxton</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Thu, 06 Oct 2022 23:14:21 +0800</lastBuildDate><atom:link href="https://hoxtoncraft.com/tags/%E6%8E%92%E7%A8%8B%E5%99%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>Java內的排程器介紹</title><link>https://hoxtoncraft.com/p/java%E5%85%A7%E7%9A%84%E6%8E%92%E7%A8%8B%E5%99%A8%E4%BB%8B%E7%B4%B9/</link><pubDate>Thu, 06 Oct 2022 23:14:21 +0800</pubDate><guid>https://hoxtoncraft.com/p/java%E5%85%A7%E7%9A%84%E6%8E%92%E7%A8%8B%E5%99%A8%E4%BB%8B%E7%B4%B9/</guid><description>&lt;img src="https://i.imgur.com/9or5BzU.png" alt="Featured image of post Java內的排程器介紹" />&lt;h1 id="springboot-scheduling">SpringBoot-Scheduling&lt;/h1>
&lt;p>用來做定期任務的東西，有兩種&lt;/p>
&lt;ul>
&lt;li>Spring schedule：只適合處理簡單的計畫任務，不能處理分散式的任務，當任務太多時，可能出現阻塞、崩潰、延遲啟動等問題&lt;/li>
&lt;li>Quartz：更強大的一個排程器，能夠配置上百甚至上千的事務。&lt;/li>
&lt;/ul>
&lt;h1 id="spring-schedule">Spring Schedule&lt;/h1>
&lt;h2 id="步驟">步驟&lt;/h2>
&lt;ol>
&lt;li>在啟動類上加上@EnableScheduling&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@SpringBootApplication&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="nd">@EnableScheduling&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Application&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>在方法上加上@Scheduled&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Task&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Scheduled&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fixedDelay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">100&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">printLocalTime&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">LocalTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/RJ1HtHT.png"
loading="lazy"
alt="image-20220914144530121"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="nd">@Scheduled&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">cron&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;1 * * * * ?&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">zone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Asia/Taipei&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">printPer5second&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;cron&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/AATFHO2.png"
loading="lazy"
alt="image-20220914145339544"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Scheduled&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">cron&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;0/1 * * * * ?&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">zone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Asia/Taipei&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">printPer5second&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;cron&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/Kby8DZf.png"
loading="lazy"
alt="image-20220914145730980"
>&lt;/p>
&lt;h2 id="cron表達式七子表達式">Cron表達式(七子表達式)&lt;/h2>
&lt;p>&lt;a class="link" href="https://cron.qqe2.com/" target="_blank" rel="noopener"
>表達式生成工具&lt;/a>&lt;/p>
&lt;p>Cron語源來自Chronos，是希臘神話中掌管時間的神柯羅諾斯(Chronos)。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>秒&lt;/th>
&lt;th>分&lt;/th>
&lt;th>時&lt;/th>
&lt;th>日&lt;/th>
&lt;th>月&lt;/th>
&lt;th>周&lt;/th>
&lt;th>年(可選)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>?&lt;/td>
&lt;td>?&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>秒：0-59&lt;/li>
&lt;li>分：0-59&lt;/li>
&lt;li>時 ：0-23&lt;/li>
&lt;li>日：1-31&lt;/li>
&lt;li>月：0-11或&amp;quot;JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC&amp;quot;&lt;/li>
&lt;li>周：1-7或SUN, MON, TUE, WED, THU, FRI,SAT&lt;/li>
&lt;li>年&lt;/li>
&lt;/ul>
&lt;p>想像一個時鐘&amp;hellip;&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>當每次秒針指向一秒時&lt;/th>
&lt;th>1 * * * * ?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>當每次時針指向12時&lt;/td>
&lt;td>* * 12 * * ?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>每個月 1 號中午 12 點&lt;/td>
&lt;td>0 0 12 1 * ?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1 月每天中午 12 點，每 5 秒&lt;/td>
&lt;td>0/5 0 12 * 1 ?&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">字元&lt;/th>
&lt;th style="text-align:left">意義&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;code>*&lt;/code>&lt;/td>
&lt;td style="text-align:left">表達任意值，所有值都可以匹配&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>?&lt;/code>&lt;/td>
&lt;td style="text-align:left">只用在 &lt;code>日&lt;/code> 跟 &lt;code>周&lt;/code> 的值域，有點表達 don’t care 的概念，無所謂，不關心到底是什麼值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>-&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定範圍，前後接數字: 10-12&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>,&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定離散的選項: 1,5,6,8，或者的概念&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>/&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定增量，表達 &lt;code>每&lt;/code> 的概念: 0/5 意旨從 0 開始每 5 單位&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>L&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在 &lt;code>月&lt;/code> 跟 &lt;code>周&lt;/code> 的值域。在月的話表達最後一天，在周的話前面可以加上數字 3L 表示該月最後一個星期二&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>W&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>的值域表示距離最近的該月工作日: 15W，距離 15 號最近的工作日，可能往前也可能往後&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>LW&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>的值域，表示最後一周的工作日&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>#&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>周&lt;/code>的值域，指定特定周的特定日: “4#2” 表示第二周的星期三&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>C&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>跟&lt;code>周&lt;/code>的值域，指某特定個日期的後一天: 在&lt;code>日&lt;/code>中寫 3C 指該月 3 號的後一天，在&lt;code>周&lt;/code>中寫 2C 指該周星期一的後一天&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="quartz">Quartz&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/C8FFRz9.png"
loading="lazy"
alt="image-20220916143034403"
>&lt;/p>
&lt;p>是一個開源的任務排程器，幾乎可以整合到任何Java應用程式中。&lt;/p>
&lt;p>它可以用來&lt;/p>
&lt;ul>
&lt;li>安排每個晚上把資料庫內容轉存到檔案&lt;/li>
&lt;li>提供定時提醒服務&lt;/li>
&lt;li>族繁不及備載&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h3 id="底層數據結構--堆">底層數據結構- 堆&lt;/h3>
&lt;h4 id="介紹">介紹&lt;/h4>
&lt;p>堆是一種特殊的樹，滿足下面兩個條件，就是一個&lt;strong>堆&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>堆是一顆完全二元樹&lt;code>完整二元樹：除了最後一層以外，其他層的節點數需要達到最大(1,2,4,8. ..)&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.imgur.com/GYIKgRe.png"
loading="lazy"
alt="image-20220916103657827"
>&lt;/p>
&lt;ol start="2">
&lt;li>每個節點所儲存的值，必須要大於&lt;code>小頂堆&lt;/code>或小於&lt;code>大頂堆&lt;/code>父節點的值&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.imgur.com/t5Aeict.png"
loading="lazy"
alt="image-20220916104946559"
>&lt;/p>
&lt;blockquote>
&lt;p>小頂堆&lt;/p>
&lt;/blockquote>
&lt;p>完整二元樹的一些特性：快速定位父節點&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/F9btok2.png"
loading="lazy"
alt="image-20220916105634080"
>&lt;/p>
&lt;p>&lt;strong>在排程器的框架中，每一個節點就是一個Job，越頻繁的Job會被放置在越上層的節點&lt;/strong>&lt;/p>
&lt;h4 id="如何插入元素">如何插入元素&lt;/h4>
&lt;p>尾插法，在尾部插入一個新的元素，然後上浮，浮到符合定義&lt;/p>
&lt;ol>
&lt;li>除了最後一層以外，其他層的節點數需要達到最大(1,2,4,8. ..)，且最後一層節點都靠左排列&lt;/li>
&lt;li>每個節點所儲存的值，必須要大於&lt;code>小頂堆&lt;/code>或小於&lt;code>大頂堆&lt;/code>父節點的值&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.imgur.com/kGnnrnf.png"
loading="lazy"
alt="image-20220916110137933"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/YjWGVYi.png"
loading="lazy"
alt="image-20220916110150486"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/pqhvAgT.png"
loading="lazy"
alt="image-20220916110656733"
>&lt;/p>
&lt;h4 id="如何刪除元素">如何刪除元素&lt;/h4>
&lt;p>將尾部(最後一個節點)放置到堆頂，然後下沉&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/vM6IFnf.png"
loading="lazy"
alt="image-20220916111249806"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/ltoSIL1.png"
loading="lazy"
alt="image-20220916111306206"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/spOXHoC.png"
loading="lazy"
alt="image-20220916111330270"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/giEhi6Y.png"
loading="lazy"
alt="image-20220916111958376"
>&lt;/p>
&lt;h3 id="時間輪算法time-wheel">時間輪算法(Time Wheel)&lt;/h3>
&lt;p>&lt;img src="https://i.imgur.com/FGlGv1M.png"
loading="lazy"
alt="image-20220916114613849"
>&lt;/p>
&lt;p>再刪除元素的時候都需要下沉，當節點數很多時會造成性能延宕&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/djp3Uq4.png"
loading="lazy"
alt="image-20220916113838923"
>&lt;/p>
&lt;h4 id="round-型的時間輪">round 型的時間輪&lt;/h4>
&lt;p>任務上記錄一個round，遍歷到了就將round減一，為0時取出來執行&lt;/p>
&lt;h4 id="分層時間輪">分層時間輪&lt;/h4>
&lt;p>Cron表達式以及其他排程器所採用的底層架構，分成秒輪、分輪、小時輪、日輪、周輪、月輪、年輪&amp;hellip;，月輪迭代到了，就將任務取出放到天輪中執行&amp;hellip;，以此類推&lt;/p>
&lt;h2 id="cron表達式七子表達式-1">Cron表達式(七子表達式)&lt;/h2>
&lt;p>&lt;a class="link" href="https://cron.qqe2.com/" target="_blank" rel="noopener"
>表達式生成工具&lt;/a>&lt;/p>
&lt;p>Cron語源來自Chronos，是希臘神話中掌管時間的神柯羅諾斯(Chronos)。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>秒&lt;/th>
&lt;th>分&lt;/th>
&lt;th>時&lt;/th>
&lt;th>日&lt;/th>
&lt;th>月&lt;/th>
&lt;th>周&lt;/th>
&lt;th>年(可選)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>?&lt;/td>
&lt;td>?&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>秒：0-59&lt;/li>
&lt;li>分：0-59&lt;/li>
&lt;li>時 ：0-23&lt;/li>
&lt;li>日：1-31&lt;/li>
&lt;li>月：0-11或&amp;quot;JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC&amp;quot;&lt;/li>
&lt;li>周：1-7或SUN, MON, TUE, WED, THU, FRI,SAT&lt;/li>
&lt;li>年&lt;/li>
&lt;/ul>
&lt;p>想像一個時鐘&amp;hellip;&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>當每次秒針指向一秒時&lt;/th>
&lt;th>1 * * * * ?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>當每次時針指向12時&lt;/td>
&lt;td>* * 12 * * ?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>每個月 1 號中午 12 點&lt;/td>
&lt;td>0 0 12 1 * ?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1 月每天中午 12 點，每 5 秒&lt;/td>
&lt;td>0/5 0 12 * 1 ?&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">字元&lt;/th>
&lt;th style="text-align:left">意義&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;code>*&lt;/code>&lt;/td>
&lt;td style="text-align:left">表達任意值，所有值都可以匹配&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>?&lt;/code>&lt;/td>
&lt;td style="text-align:left">只用在 &lt;code>日&lt;/code> 跟 &lt;code>周&lt;/code> 的值域，有點表達 don’t care 的概念，無所謂，不關心到底是什麼值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>-&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定範圍，前後接數字: 10-12&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>,&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定離散的選項: 1,5,6,8，或者的概念&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>/&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定增量，表達 &lt;code>每&lt;/code> 的概念: 0/5 意旨從 0 開始每 5 單位&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>L&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在 &lt;code>月&lt;/code> 跟 &lt;code>周&lt;/code> 的值域。在月的話表達最後一天，在周的話前面可以加上數字 3L 表示該月最後一個星期二&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>W&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>的值域表示距離最近的該月工作日: 15W，距離 15 號最近的工作日，可能往前也可能往後&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>LW&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>的值域，表示最後一周的工作日&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>#&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>周&lt;/code>的值域，指定特定周的特定日: “4#2” 表示第二周的星期三&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>C&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>跟&lt;code>周&lt;/code>的值域，指某特定個日期的後一天: 在&lt;code>日&lt;/code>中寫 3C 指該月 3 號的後一天，在&lt;code>周&lt;/code>中寫 2C 指該周星期一的後一天&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>​&lt;/p>
&lt;h2 id="重要api及概念">重要API及概念&lt;/h2>
&lt;blockquote>
&lt;p>記得Job類一定要是&lt;strong>public class&lt;/strong>，不然Scheduler會讀不到&lt;/p>
&lt;/blockquote>
&lt;p>釋例一：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Quartz&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">MyJob&lt;/span> &lt;span class="n">myJob&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">MyJob&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JobBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MyJob&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;job1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">Trigger&lt;/span> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TriggerBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;trigger1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">startNow&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SimpleScheduleBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">simpleSchedule&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withIntervalInSeconds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">repeatForever&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Scheduler&lt;/span> &lt;span class="n">scheduler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">StdSchedulerFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDefaultScheduler&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">scheduleJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jobDetail&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">trigger&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">SchedulerException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MyJob&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Job&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JobExecutionContext&lt;/span> &lt;span class="n">jobExecutionContext&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">JobExecutionException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;MyJob execute:&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Date&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>釋例二&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HelloJob&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Scheduler&lt;/span> &lt;span class="n">scheduler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">StdSchedulerFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDefaultScheduler&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JobBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SayHello&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;job1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">//Job1是名字，具有唯一性，group1是這個Job屬於哪一組，同一組的Job可以共享相同的邏輯來處理Job。需要name與Job才可以組成一個JobKey
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">usingJobData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Hoxton&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">usingJobData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;age&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;20&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withDescription&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;desc-demo&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">SimpleTrigger&lt;/span> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TriggerBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">startNow&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SimpleScheduleBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">simpleSchedule&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withIntervalInSeconds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">repeatForever&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">scheduleJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jobDetail&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">trigger&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">// scheduler.shutdown();
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">SchedulerException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Slf4j&lt;/span>
&lt;span class="nd">@NoArgsConstructor&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SayHello&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Job&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JobExecutionContext&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">JobExecutionException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJobDetail&lt;/span>&lt;span class="o">();&lt;/span>&lt;span class="c1">//從context中獲取屬性
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">JobKey&lt;/span> &lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDetail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;?&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">Job&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">jobClass&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDetail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJobClass&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">description&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDetail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDescription&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">JobDataMap&lt;/span> &lt;span class="n">jobDataMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDetail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJobDataMap&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDataMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDataMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getIntValue&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;age&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;\nJobKey : {},\n JobClass : {},\n JobDesc : {},\n username : {},\n age : {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">key&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">jobClass&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="o">(),&lt;/span> &lt;span class="n">description&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="scheduler">Scheduler&lt;/h3>
&lt;p>生命週期由ScheduleFactory建立開始，呼叫shutdown方法結束。&lt;/p>
&lt;p>當Schduler建立，任何關於Schduling相關的事情，都由它控制&lt;/p>
&lt;ul>
&lt;li>新增&lt;/li>
&lt;li>刪除&lt;/li>
&lt;li>列出所有Job&lt;/li>
&lt;li>暫停觸發器&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>在Start之前不會做任何事情&lt;/strong>&lt;/p>
&lt;h3 id="job">Job&lt;/h3>
&lt;p>你希望被排程器排程的任務元件介面，定義如何執行，是正在執行的作業例項，一個Job可以建立多個JobDetail，擁有不同的JobDataMap。本身implement了Job類&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">graph TD;
Job ---&amp;gt; JodDetail1 &amp;amp; JodDetail2 &amp;amp; JodDetail3 &amp;amp; JodDetail...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SendEmail&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Job&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JobExecutionContext&lt;/span> &lt;span class="n">jobExecutionContext&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">JobExecutionException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;SendEmail&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>當Job的觸發器觸發時，排程程式的工作執行將呼叫excute()方法&lt;/li>
&lt;li>該方法接收一個&lt;code>JobExcutionContext&lt;/code>物件，為Job提供了豐富的執行時環境，比如&lt;code>schduler&lt;/code>,&lt;code>trigger&lt;/code>,&lt;code>jobDataMap&lt;/code>,&lt;code>job&lt;/code>,&lt;code>calender&lt;/code>,&lt;code>time&lt;/code>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>何謂Context(上下文)&lt;/p>
&lt;p>可以理解為環境、容器的意思會比上下文更具體一點，它提供了一個程式中全域性的資訊。&lt;/p>
&lt;/blockquote>
&lt;h3 id="jobdetail">JobDetail&lt;/h3>
&lt;p>用於定義Job的各種屬性、各種任務，還可以用來為Job儲存狀態資訊的JobDataMap，是將Job加入scheduler時，所需要創建的一個物件，它包含了各種屬性設置，以及用於存取job實例狀態訊息的JobDataMap，在創建JobDetail時，需要將欲執行的類名傳遞給JobDetail，這樣schedule就知道要執行何種類型的job。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">JobBulider&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Job&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">bulid&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="jobdatamap">JobDataMap&lt;/h3>
&lt;p>實作Map介面，因此具有Key-Value，儲存可序列化資料，供Job在執行時使用。也可以使用&lt;code>usingJobData(key,value)&lt;/code>在建構JobDetail的時候傳入資料，使用JobDetail.getDataMap()獲取Map。可以再透過jobDataMap取出裡面的數據&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">JobDetail&lt;/span> &lt;span class="n">job&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JobBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HelloJob&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;helloJob&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="c1">//給job命名並分組
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">usingJobData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;jobdd&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;hello job&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="c1">//通過JobBuilder的usingJobData方法給JobDataMap中塞入數據
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HelloJob&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Job&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JobExecutionContext&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">JobExecutionException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJobDetail&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">());&lt;/span>&lt;span class="c1">// JobDetail的key又他的name和group組成
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTrigger&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">());&lt;/span>&lt;span class="c1">// Trigger的key又他的name和group組成
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJobDetail&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getJobDataMap&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;jobdd&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hello,quartz&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>會輸出&lt;/p>
&lt;p>`hello.helloJob&lt;/p>
&lt;p>hello.helloTrigger&lt;/p>
&lt;p>hello job&lt;/p>
&lt;p>hello, quartz&lt;/p>
&lt;h3 id="trigger">Trigger&lt;/h3>
&lt;p>觸發任務執行，觸發器可能具有與Job有關的JobDataMap，以便將觸發器觸發的引數傳遞給Job，Quartz本身提供了幾種觸發器&lt;code>SimpleTrigger&lt;/code>和&lt;code>CronTrigger&lt;/code>是最常用到的。&lt;/p>
&lt;h4 id="simpletriger">&lt;strong>SimpleTriger&lt;/strong>&lt;/h4>
&lt;p>用於一次性執行作業或需要在給定的時間觸發一個作業並重複執行N次，且兩次執行時間有Delay。用在具體的時間點，並已指定的間隔時間重複執行若干次，它包含了幾種屬性：&lt;/p>
&lt;ol>
&lt;li>開始時間&lt;/li>
&lt;li>結束時間&lt;/li>
&lt;li>重複次數&lt;/li>
&lt;li>重複間隔&lt;/li>
&lt;/ol>
&lt;p>釋例一：立刻觸發一次，然後停止&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">Date&lt;/span> &lt;span class="n">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Date&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">Trigger&lt;/span> &lt;span class="n">trigger1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TriggerBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">startAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>釋例二：指定時間觸發，每隔十秒執行一次，重複10次&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger3&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">startAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">myTimeToStartFiring&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// if a start time is not given (if this line were omitted), &amp;#34;now&amp;#34; is implied
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">simpleSchedule&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIntervalInSeconds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withRepeatCount&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="c1">// note that 10 repeats will give a total of 11 firings
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">forJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">myJob&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// identify job with handle to its JobDetail itself
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>釋例三：5分鐘以後開始觸發，僅執行一次&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">SimpleTrigger&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger5&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">startAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">futureDate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">IntervalUnit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">MINUTE&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="c1">// use DateBuilder to create a date in the future
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">forJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">myJobKey&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// identify job with its JobKey
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>釋例四：立即觸發，每個5分鐘執行一次，直到22:00：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger7&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">simpleSchedule&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIntervalInMinutes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">repeatForever&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">endAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">dateOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">22&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>釋例五：在下一小時整點觸發，每個2小時執行一次，一直重複：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger8&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// because group is not specified, &amp;#34;trigger8&amp;#34; will be in the default group
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">startAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">evenHourDate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="c1">// get the next even-hour (minutes and seconds zero (&amp;#34;00:00&amp;#34;))
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">simpleSchedule&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIntervalInHours&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">repeatForever&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="c1">// note that in this example, &amp;#39;forJob(..)&amp;#39; is not called which is valid
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// if the trigger is passed to the scheduler along with the job
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">scheduleJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">trigger&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">job&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="crontrigger">&lt;strong>CronTrigger&lt;/strong>&lt;/h4>
&lt;p>希望以日期作為觸發任務的板機，就用CronTriger，&lt;strong>實務上比較常用這個&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">CronTrigger&lt;/span> &lt;span class="n">trigger2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TriggerBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger3&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">CronScheduleBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">cronSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;0/2 * * * * ?&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.how2java&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.quartz.CronScheduleBuilder.cronSchedule&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.quartz.JobBuilder.newJob&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.quartz.TriggerBuilder.newTrigger&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.quartz.SimpleScheduleBuilder.simpleSchedule&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.Date&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.CronTrigger&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.DateBuilder&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.JobDetail&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.Scheduler&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.SimpleTrigger&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.impl.StdSchedulerFactory&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TestQuartz&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span>&lt;span class="o">{&lt;/span>
&lt;span class="n">Scheduler&lt;/span> &lt;span class="n">scheduler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">StdSchedulerFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDefaultScheduler&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">Date&lt;/span> &lt;span class="n">startTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DateBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">nextGivenSecondDate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">8&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">job&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MailJob&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;mailJob&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;mailGroup&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">CronTrigger&lt;/span> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newTrigger&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">cronSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;0/2 * * * * ?&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">// schedule it to run!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Date&lt;/span> &lt;span class="n">ft&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">scheduleJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">job&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">trigger&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;使用的Cron表达式是：&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">trigger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getCronExpression&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="c1">// System.out.printf(&amp;#34;%s 这个任务会在 %s 准时开始运行，累计运行%d次，间隔时间是%d毫秒%n&amp;#34;, job.getKey(), ft.toLocaleString(), trigger.getRepeatCount()+1, trigger.getRepeatInterval());
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">//等待200秒，让前面的任务都执行完了之后，再关闭调度器
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Thread&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">200000&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">shutdown&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="jobbulider">JobBulider&lt;/h3>
&lt;p>用來建立&lt;a class="link" href="#JobDetail" >JobDetail&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JobBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">某個繼承了Job的類&lt;/span>&lt;span class="o">)...&lt;/span>
&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JobBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SayHello&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;job1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">usingJobData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Hoxton&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">usingJobData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;age&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;20&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withDescription&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;desc-demo&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>TriggerBulider&lt;/p>
&lt;p>用於建立&lt;a class="link" href="#Trigger" >Trigger&lt;/a>&lt;/p>
&lt;h3 id="identity">Identity&lt;/h3>
&lt;p>當Job和Trgger在Quartz排程程式中註冊時，會獲得標示鍵，&lt;code>JobKey&lt;/code>和&lt;code>TriggerKey&lt;/code>置入group中，易於組織管理，其中name與group必須&lt;strong>唯一&lt;/strong>&lt;/p>
&lt;h3 id="為何要將job和trigger分開來">為何要將Job和Trigger分開來?&lt;/h3>
&lt;blockquote>
&lt;p>While developing Quartz, we decided that it made sense to create a separation between the schedule and the work to be performed on that schedule. This has (in our opinion) many benefits.&lt;/p>
&lt;p>For example, Jobs can be created and stored in the job scheduler independent of a trigger, and many triggers can be associated with the same job. Another benefit of this loose-coupling is the ability to configure jobs that remain in the scheduler after their associated triggers have expired, so that that it can be rescheduled later, without having to re-define it. It also allows you to modify or replace a trigger without having to re-define its associated job.&lt;/p>
&lt;/blockquote>
&lt;h2 id="job與jobdetail的一些說明">Job與JobDetail的一些說明&lt;/h2>
&lt;ul>
&lt;li>Job是正在執行的作業，JobDetail則是作業的定義&lt;/li>
&lt;li>一個Job可以創建多個JobDetail，擁有不同的JobDataMap&lt;/li>
&lt;/ul>
&lt;p>舉例來說，今天寫了一個定時寄送信件的Job，叫做SendEmailJob，我們希望這個Job可以寄給客戶，然後在cc給你的主管，所以需要創建兩個不同的JobDetail，比如說SendEmailToClient、SendEmailToAdministor，並透過JobDataMap綁定參數傳遞至JobDetail中，這兩個JobDetail擁有各自獨立的JobDataMap，實現起來會更靈活。&lt;/p>
&lt;h1 id="參考">參考&lt;/h1>
&lt;p>&lt;a class="link" href="http://www.quartz-scheduler.org/documentation/quartz-2.3.0/quick-start.html" target="_blank" rel="noopener"
>官方文檔&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://iter01.com/575275.html" target="_blank" rel="noopener"
>任務排程框架Quartz快速入門&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.1ju.org/quartz/index" target="_blank" rel="noopener"
>Quartz教學基礎&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.796t.com/content/1545519797.html" target="_blank" rel="noopener"
>觸發器詳細定義&lt;/a>&lt;/p></description></item></channel></rss>