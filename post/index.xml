<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hoxton</title><link>https://hoxtonhsu.com/post/</link><description>Recent content in Posts on Hoxton</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Thu, 15 Jun 2023 16:32:19 +0800</lastBuildDate><atom:link href="https://hoxtonhsu.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>如何讓Iterm2擁有如Window Terminal般的絲滑體驗</title><link>https://hoxtonhsu.com/p/%E5%A6%82%E4%BD%95%E8%AE%93iterm2%E6%93%81%E6%9C%89%E5%A6%82window-terminal%E8%88%AC%E7%9A%84%E7%B5%B2%E6%BB%91%E9%AB%94%E9%A9%97/</link><pubDate>Thu, 15 Jun 2023 16:32:19 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%A6%82%E4%BD%95%E8%AE%93iterm2%E6%93%81%E6%9C%89%E5%A6%82window-terminal%E8%88%AC%E7%9A%84%E7%B5%B2%E6%BB%91%E9%AB%94%E9%A9%97/</guid><description>&lt;img src="https://i.imgur.com/w12QKbR.png" alt="Featured image of post 如何讓Iterm2擁有如Window Terminal般的絲滑體驗" />&lt;h1 id="前言">前言&lt;/h1>
&lt;p>前一陣子花了65,000買了一台Macbook，不得不說，使用體驗還是覺得像一坨答辯一樣，很多東西都要自己來。用了快一個月左右，還是有很多地方不適應，最直觀的體驗就是Terinal吧，Windows有一個非常強的Termianl介面叫做Window Termianl，它的畫面設計還有使用體驗，海放了Iterm不知道幾條街吧，尤其是window鍵+`，快速開啟Terminal的功能至今讓我難以忘懷。換到Mac上，我試著熟悉左右切換視窗的方式來模擬那熟悉的感覺，但切換的動畫的那一秒還是讓我煩躁不已。於是搜尋了一下，發現Iterm本身就有內建如同Window Terminal快速開啟Terminal的方式。｀&lt;/p>
&lt;h1 id="設定">設定&lt;/h1>
&lt;p>將Exculde from Dock&amp;hellip;的設定打開&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/LRZ2yjB.png"
loading="lazy"
>&lt;/p>
&lt;p>再將A hotkey opens a dedicated window &amp;hellip;打開&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/QmYN0Hx.png"
loading="lazy"
alt="image-20230615163929697"
>&lt;/p>
&lt;p>設定你自己想要的快捷鍵，我就設成跟window一樣的設定了&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/kRGPX4U.png"
loading="lazy"
alt="image-20230615164011470"
>&lt;/p></description></item><item><title>如何為Mac設定環境變數</title><link>https://hoxtonhsu.com/p/%E5%A6%82%E4%BD%95%E7%82%BAmac%E8%A8%AD%E5%AE%9A%E7%92%B0%E5%A2%83%E8%AE%8A%E6%95%B8/</link><pubDate>Wed, 14 Jun 2023 15:34:15 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%A6%82%E4%BD%95%E7%82%BAmac%E8%A8%AD%E5%AE%9A%E7%92%B0%E5%A2%83%E8%AE%8A%E6%95%B8/</guid><description>&lt;img src="https://i.imgur.com/O9emCTx.png" alt="Featured image of post 如何為Mac設定環境變數" />&lt;h1 id="教學">教學&lt;/h1>
&lt;p>可以先輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">env
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來查看自己目前的環境變數有什麼&lt;/p>
&lt;p>再來透過&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">vim ~/.bash_profile
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來編輯bash_profile，編輯裡面的內容&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DESKTOP&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$HOME&lt;/span>&lt;span class="s2">/Desktop&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/FFL4JEh.png"
loading="lazy"
alt="image-20230614153700891"
>&lt;/p>
&lt;p>之後再輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">source&lt;/span> ~/.bash_profile
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣就可以囉！&lt;/p>
&lt;p>之後可以再輸入一次env，來確認環境變數有被加入到系統中&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/vmFlZhA.png"
loading="lazy"
alt="image-20230614153937948"
>&lt;/p>
&lt;h1 id="結果展示">結果展示&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/IP6jUjW.gif"
loading="lazy"
alt="demo"
>&lt;/p></description></item><item><title>將Linux的Port打開，讓外部可以訪問</title><link>https://hoxtonhsu.com/p/%E5%B0%87linux%E7%9A%84port%E6%89%93%E9%96%8B%E8%AE%93%E5%A4%96%E9%83%A8%E5%8F%AF%E4%BB%A5%E8%A8%AA%E5%95%8F/</link><pubDate>Sat, 20 May 2023 11:40:25 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%B0%87linux%E7%9A%84port%E6%89%93%E9%96%8B%E8%AE%93%E5%A4%96%E9%83%A8%E5%8F%AF%E4%BB%A5%E8%A8%AA%E5%95%8F/</guid><description>&lt;img src="https://i.imgur.com/qKt7ANw.png" alt="Featured image of post 將Linux的Port打開，讓外部可以訪問" />&lt;p>在遠端的電腦上輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo ufw allow &lt;span class="m">8081&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>將8081 Port曝露出來&lt;/p>
&lt;p>這樣外部就可以透過&lt;/p>
&lt;p>http://{ip-address}:8081/&lt;/p>
&lt;p>來訪問網站了&lt;/p></description></item><item><title>Windows系統中，使用Terminal開啟IntelliJ</title><link>https://hoxtonhsu.com/p/windows%E7%B3%BB%E7%B5%B1%E4%B8%AD%E4%BD%BF%E7%94%A8terminal%E9%96%8B%E5%95%9Fintellij/</link><pubDate>Fri, 19 May 2023 20:56:38 +0800</pubDate><guid>https://hoxtonhsu.com/p/windows%E7%B3%BB%E7%B5%B1%E4%B8%AD%E4%BD%BF%E7%94%A8terminal%E9%96%8B%E5%95%9Fintellij/</guid><description>&lt;img src="https://i.imgur.com/fkzGuEX.jpg" alt="Featured image of post Windows系統中，使用Terminal開啟IntelliJ" />&lt;p>前一陣子買了Mac，讓Mac可以用Terminal開啟IntelliJ，關於Mac的設定可以查看&lt;a class="link" href="https://hoxtonhsu.com/p/%E5%9C%A8macbook-m1%E7%92%B0%E5%A2%83%E4%B8%8B%E4%BD%BF%E7%94%A8terimnal%E9%96%8B%E5%95%9Fintellij/" target="_blank" rel="noopener"
>這篇文章&lt;/a>，但這是一直遲遲沒有把windows也設定起來，但今天它來啦！&lt;/p>
&lt;h1 id="實際演示">實際演示&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/ds4v65X.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;h1 id="教學">教學&lt;/h1>
&lt;ol>
&lt;li>將IntelliJ的bin加到Path中&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>PATH是一個包含多個路徑的環境變數，系統使用它來尋找執行檔案。當你在命令提示字元或終端中輸入一個命令時，系統會檢查這些路徑，看是否有包含該命令的可執行檔案。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">setx PATH &lt;span class="s2">&amp;#34;%PATH%;C:\Program Files\JetBrains\IntelliJ IDEA 2023.1.2\bin&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>切到IntelliJ的資料夾中&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> C:&lt;span class="se">\P&lt;/span>rogram Files&lt;span class="se">\J&lt;/span>etBrains&lt;span class="se">\I&lt;/span>ntelliJ IDEA 2023.1.2&lt;span class="se">\b&lt;/span>in
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>​ 其實做到這邊就差不多了，你已經可以使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">idea .
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>​ 來開啟檔案了，但如果這樣子你會發現你的termianl在啟動專案的時候就 被佔用了，原因是因為這個指令是在用\bin底下的idea.bat啟動，於是我 們要改成用idea64.exe的方式來開啟檔案，需要做以下的步驟&lt;/p>
&lt;ol start="3">
&lt;li>將名稱為idea的bat檔命名為idea64&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.imgur.com/wzE767g.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;blockquote>
&lt;p>其實要命名成什麼都沒差，不要再叫idea就好&lt;/p>
&lt;/blockquote>
&lt;ol start="4">
&lt;li>將idea64.exe的檔案命名為idea&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.imgur.com/1P8PfIH.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;ol start="5">
&lt;li>將idea64.exe.vmoptions命名為idea.exe.vmoptions&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.imgur.com/w4CORSE.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;blockquote>
&lt;p>如果不改的話，會出現找不到intelliJ 找不到vm option的問題&lt;/p>
&lt;/blockquote>
&lt;p>這樣就可以用idea .來 開啟檔案了&lt;/p>
&lt;h1 id="注意事項">注意事項&lt;/h1>
&lt;p>這樣的修改會導致桌面的捷徑出現問題，因為我們把啟動的程式從idea64.exe重新命名成idea.exe了，所以需要重新建立一個新的桌面捷徑&lt;/p></description></item><item><title>使用shellScript讀取資料夾中的檔案個數</title><link>https://hoxtonhsu.com/p/%E4%BD%BF%E7%94%A8shellscript%E8%AE%80%E5%8F%96%E8%B3%87%E6%96%99%E5%A4%BE%E4%B8%AD%E7%9A%84%E6%AA%94%E6%A1%88%E5%80%8B%E6%95%B8/</link><pubDate>Fri, 19 May 2023 15:06:55 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E4%BD%BF%E7%94%A8shellscript%E8%AE%80%E5%8F%96%E8%B3%87%E6%96%99%E5%A4%BE%E4%B8%AD%E7%9A%84%E6%AA%94%E6%A1%88%E5%80%8B%E6%95%B8/</guid><description>&lt;img src="https://i.imgur.com/mdbKbaT.png" alt="Featured image of post 使用shellScript讀取資料夾中的檔案個數" />&lt;p>&lt;img src="https://i.imgur.com/8Z4DzGb.jpg"
loading="lazy"
alt="image-20230612100152377"
>&lt;/p>
&lt;h1 id="前言">前言&lt;/h1>
&lt;p>一直以來都覺得要在資料夾內搜尋是一件很麻煩的事情，原因是這樣的，我文章的資料夾長這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/c8GWeMt.png"
loading="lazy"
alt="image-20230611150948901"
>&lt;/p>
&lt;p>他的排序基本上就是依照英文字母(或ASCII)的方式排序，但我更希望的是他可依照我創建的時間排序。我是可以在windons總管和Finder內指定想要的排序方式，但我在線上的Github.dev不能，於是我就想讓我的每篇文章在創建的時後，能夠在前面的資料夾內加上排序，最早創立的是1，其次是2，以此類推&amp;hellip;&lt;/p>
&lt;h1 id="實際操作">實際操作&lt;/h1>
&lt;p>詳細的shellscript語法如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;請輸入文章標題&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> title
&lt;span class="c1"># cd content/post/$title&lt;/span>
&lt;span class="c1"># 讀取資料夾內的檔案數量，為文章資料夾命名&lt;/span>
&lt;span class="nv">file_count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>ls -1 content/post&lt;span class="p">|&lt;/span> wc -l&lt;span class="k">)&lt;/span>
&lt;span class="nv">file_count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">file_count&lt;/span>&lt;span class="p">// /&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="c1"># 去除file_count包含的空白&lt;/span>
&lt;span class="nv">titleWithNumber&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$file_count&lt;/span>-&lt;span class="nv">$title&lt;/span>
hugo new post/&lt;span class="nv">$titleWithNumber&lt;/span>/index.md
&lt;span class="nb">cd&lt;/span> content/post/&lt;span class="nv">$titleWithNumber&lt;/span>
open index.md
&lt;span class="nb">cd&lt;/span> ../../..
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>需要關注的就是那個file_count，那段就是去讀資料夾內當前的檔案數並回報，值得注意的是他取出來的值前面是會帶一個空白的，比如說&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="m">51&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣子，所以需要再把它的空白去掉，這樣就可以在後面以字串串接的方式將文章的標題自動帶上編號了&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/tEKouqD.png"
loading="lazy"
alt="image-20230611151534546"
>&lt;/p></description></item><item><title>在MacBook M1環境下使用Terimnal開啟</title><link>https://hoxtonhsu.com/p/%E5%9C%A8macbook-m1%E7%92%B0%E5%A2%83%E4%B8%8B%E4%BD%BF%E7%94%A8terimnal%E9%96%8B%E5%95%9F/</link><pubDate>Thu, 18 May 2023 21:22:51 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%9C%A8macbook-m1%E7%92%B0%E5%A2%83%E4%B8%8B%E4%BD%BF%E7%94%A8terimnal%E9%96%8B%E5%95%9F/</guid><description>&lt;img src="https://i.imgur.com/AEhodYS.png" alt="Featured image of post 在MacBook M1環境下使用Terimnal開啟" />&lt;h1 id="前言">前言&lt;/h1>
&lt;p>前陣子買了Mac，影響我最大的應該就是不能再像Window一樣，使用右鍵開啟專案了！因為公司的產品有兩個專案，我也常常把專案砍掉重抓，如果不能用右鍵開啟，那就得從中手動匯入，這樣子一來一往真的是靠北麻煩。&lt;/p>
&lt;h1 id="如何使用terminal開啟">如何使用Terminal開啟&lt;/h1>
&lt;p>其實網路上我看了很多教學，大概看了4、5天吧，到最後我才發現其實官網就有寫了，原來幸福的青鳥一直就在身邊，唉垃圾Mac&lt;/p>
&lt;p>&lt;a href="https://www.jetbrains.com/help/idea/working-with-the-ide-features-from-command-line.html">https://www.jetbrains.com/help/idea/working-with-the-ide-features-from-command-line.html&lt;/a>&lt;/p>
&lt;h2 id="切換至usrlocalbin">切換至/usr/local/bin/&lt;/h2>
&lt;p>首先先切換至&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /usr/local/bin/
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="創建idea檔案">創建idea檔案&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">touch idea
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="編輯idea檔案中的內容">編輯idea檔案中的內容&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/sh
&lt;/span>&lt;span class="cp">&lt;/span>
open -na &lt;span class="s2">&amp;#34; IDEA.app&amp;#34;&lt;/span> --args &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/uvt1d2m.png"
loading="lazy"
>&lt;/p>
&lt;p>這一步我個人覺得算是「寫一個script腳本」然後讓terminal去運行，可以輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">env
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/GueLdrH.png"
loading="lazy"
>&lt;/p>
&lt;p>發現我們的PATH變數中有包含&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">/usr/local/bin
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也就是我們idea腳本所儲存的位置&lt;/p>
&lt;h2 id="存擋後使用chmod調整權限">存擋後使用Chmod調整權限&lt;/h2>
&lt;p>輸入指令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">chmod &lt;span class="m">755&lt;/span> idea
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&amp;ldquo;chmod 755&amp;rdquo; 是一個用於設置檔案或目錄權限的命令。在 Linux 和其他類 Unix 系統中，&amp;ldquo;chmod&amp;rdquo; 是改變檔案權限的指令，而 &amp;ldquo;755&amp;rdquo; 是一個表示權限的數字。&lt;/p>
&lt;p>在 &amp;ldquo;chmod 755&amp;rdquo; 中，&amp;ldquo;755&amp;rdquo; 是由三個數字組成的權限表示法。每個數字代表了不同的使用者類別和他們對檔案的權限。&lt;/p>
&lt;p>第一個數字（7）表示檔案所有者的權限。在這種情況下，7 表示所有者具有讀取、寫入和執行的權限（4 + 2 + 1）。
第二個數字（5）表示檔案所屬群組的權限。在這種情況下，5 表示群組具有讀取和執行的權限，但沒有寫入的權限（4 + 1）。
第三個數字（5）表示其他使用者（非所有者且非群組成員）的權限。在這種情況下，5 表示其他使用者具有讀取和執行的權限，但沒有寫入的權限（4 + 1）。
因此，&amp;ldquo;chmod 755&amp;rdquo; 的含義是將檔案設置為擁有者具有讀取、寫入和執行權限，群組成員和其他使用者具有讀取和執行權限，但不具有寫入權限。&lt;/p>
&lt;h2 id="刷新頁面">刷新頁面&lt;/h2>
&lt;p>確認mac os的檔案icon是否有更改成exec&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/24ushKG.png"
loading="lazy"
>&lt;/p>
&lt;p>如果更改成功，就可以透過&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">idea .
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用開啟檔案了 ！&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/bWPg1Kj.gif"
loading="lazy"
>&lt;/p>
&lt;h1 id="以下內容作廢請勿參考這是我錯的紀錄">以下內容作廢，請勿參考，這是我錯的紀錄&lt;/h1>
&lt;p>如何在Mac中設置環境變數開啟IDEA&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/lUFkVtz.png"
loading="lazy"
alt="image-20230518212755943"
>&lt;/p>
&lt;p>在Terminal中輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">vim ~/.bash_profile
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>進入輸入畫面後，輸入以下資訊&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/Applications/ IDEA.app/Contents/MacOS:&lt;/span>&lt;span class="nv">$PATH&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/lpQPUO3.png"
loading="lazy"
alt="image-20230518213215354"
>&lt;/p>
&lt;p>儲存後退出，並輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">source&lt;/span> ~/.bash_profile
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>即可使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">idea .
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>用Idea開啟當前目錄&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/bWPg1Kj.gif"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/JWV7cRS.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>也可在terminal輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">env
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來查看目前的環境變數，確定是否有加入PATH中&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/YWKWBgv.png"
loading="lazy"
alt="image-20230518213418418"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">open -na &lt;span class="s2">&amp;#34; IDEA.app&amp;#34;&lt;/span> --args &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>ARM架構與x86架構下，Docker啟動問題</title><link>https://hoxtonhsu.com/p/arm%E6%9E%B6%E6%A7%8B%E8%88%87x86%E6%9E%B6%E6%A7%8B%E4%B8%8Bdocker%E5%95%9F%E5%8B%95%E5%95%8F%E9%A1%8C/</link><pubDate>Sat, 13 May 2023 19:09:41 +0800</pubDate><guid>https://hoxtonhsu.com/p/arm%E6%9E%B6%E6%A7%8B%E8%88%87x86%E6%9E%B6%E6%A7%8B%E4%B8%8Bdocker%E5%95%9F%E5%8B%95%E5%95%8F%E9%A1%8C/</guid><description>&lt;img src="https://i.imgur.com/8XJ9XWE.png" alt="Featured image of post ARM架構與x86架構下，Docker啟動問題" />&lt;h1 id="導因">導因&lt;/h1>
&lt;p>M1的CPU是使用ARM架構，而有些電腦則是使用x86架構，並且因Docker是Run在OS上方，所以在執行Image時也要考慮作業系統的問題&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">The requested image&lt;span class="err">&amp;#39;&lt;/span>s platform &lt;span class="o">(&lt;/span>linux/amd64&lt;span class="o">)&lt;/span> does not match the detected host platform &lt;span class="o">(&lt;/span>linux/arm64/v8&lt;span class="o">)&lt;/span> and no specific platform was requested
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="解決方法">解決方法&lt;/h1>
&lt;p>在docker run啟動參數後加上&lt;code>--platform linux/amd64&lt;/code>即可解決這個問題&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --platform linux/amd64 -p 8080:8080 fe744192d855
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="解決方法二">解決方法二&lt;/h1>
&lt;p>幹你媽的，我發現run的時候還是不行，還是要在build就控制它的架構&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker build . --platform linux/x86_64
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>如何更改Mac terminal的預設路徑</title><link>https://hoxtonhsu.com/p/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%94%B9mac-terminal%E7%9A%84%E9%A0%90%E8%A8%AD%E8%B7%AF%E5%BE%91/</link><pubDate>Sat, 13 May 2023 17:44:38 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%94%B9mac-terminal%E7%9A%84%E9%A0%90%E8%A8%AD%E8%B7%AF%E5%BE%91/</guid><description>&lt;img src="https://i.imgur.com/ieJ6kkK.png" alt="Featured image of post 如何更改Mac terminal的預設路徑" />&lt;h1 id="簡介">簡介&lt;/h1>
&lt;p>最近要換新工作了，正好新工作的公司有電腦補助，就趁這個機會把Macbook也買了，一拿到手之後發現超級難用，難用到靠北，真的不懂為什麼一堆人說好用。&lt;/p>
&lt;h1 id="如何更改termial預設路徑">如何更改Termial預設路徑&lt;/h1>
&lt;p>預設情況下，Terminal路徑都是&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">/Users/&lt;span class="o">[&lt;/span>使用者名稱&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但我希望他開啟的路徑是&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">/Users/&lt;span class="o">[&lt;/span>使用者名稱&lt;span class="o">]&lt;/span>/Desktop
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>因此要到.zshrc去更改&lt;/p>
&lt;p>通常這個檔案都會放在&lt;/p>
&lt;p>/Users/[使用者名稱]底下，如果沒有的話可以自己創一個就好&lt;/p>
&lt;p>然後編輯裡面的內容，加上這段&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /Users/hoxtonashes/Desktop
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/C4yevFm.png"
loading="lazy"
alt="image-20230513180010374"
>&lt;/p>
&lt;p>這樣下次開啟的時候，預設的Terminal路徑就會是Desktop了&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Q14Iy0n.gif"
loading="lazy"
alt="demo"
>&lt;/p></description></item><item><title>在IntelliJ中設定Class模板</title><link>https://hoxtonhsu.com/p/%E5%9C%A8intellij%E4%B8%AD%E8%A8%AD%E5%AE%9Aclass%E6%A8%A1%E6%9D%BF/</link><pubDate>Fri, 12 May 2023 15:41:07 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%9C%A8intellij%E4%B8%AD%E8%A8%AD%E5%AE%9Aclass%E6%A8%A1%E6%9D%BF/</guid><description>&lt;img src="https://i.imgur.com/dEvsZm3.png" alt="Featured image of post 在IntelliJ中設定Class模板" />&lt;p>在IntelliJ開啟以下的路徑&lt;/p>
&lt;p>&lt;code>Setting &amp;gt; Editor &amp;gt; File and Code Templates &amp;gt; Includes &amp;gt; File Header&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/sOjF3Yb.png"
loading="lazy"
alt="image-20230512154419942"
>&lt;/p>
&lt;p>即可在這邊編輯創建Class的模板，一旦設定好後，當你創建一個新的Class時，IntelliJ就會在你的Class上插入這些資訊&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/TWmvl80.png"
loading="lazy"
alt="image-20230512154507522"
>&lt;/p></description></item><item><title>Git-rerere之介紹</title><link>https://hoxtonhsu.com/p/git-rerere%E4%B9%8B%E4%BB%8B%E7%B4%B9/</link><pubDate>Fri, 12 May 2023 11:05:10 +0800</pubDate><guid>https://hoxtonhsu.com/p/git-rerere%E4%B9%8B%E4%BB%8B%E7%B4%B9/</guid><description>&lt;img src="https://i.imgur.com/FJcgPVI.png" alt="Featured image of post Git-rerere之介紹" />&lt;h1 id="介紹">介紹&lt;/h1>
&lt;p>最近公司提倡使用rebase而非merge來合併分支，但在rebase的情況下，常常出現多種commit會有重複confict的情形發生，往往可能要解個2,30個conflict，一來一往可能會耗費許多時間，於是上網查了一下，發現有&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git rerere
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這種神奇的指令&lt;/p>
&lt;p>這是由3個單字縮寫所組成的指令，分別是reuse、recorded 與 resolution。git rerere有點像是一個記憶吐司的概念，能夠記錄你之前解Conflict的方式，然後自動幫你套用到相同的地方。&lt;/p>
&lt;p>而這個rerere的行為預設是關閉的，想要打開的話可以輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git config --global rerere.enabled &lt;span class="nb">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來啟用，若不想要使用的話可以輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git config --global --unset rerere.enabled
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Maven詳細研究</title><link>https://hoxtonhsu.com/p/maven%E8%A9%B3%E7%B4%B0%E7%A0%94%E7%A9%B6/</link><pubDate>Tue, 09 May 2023 09:47:13 +0800</pubDate><guid>https://hoxtonhsu.com/p/maven%E8%A9%B3%E7%B4%B0%E7%A0%94%E7%A9%B6/</guid><description>&lt;img src="https://i.imgur.com/VcZp2b7.png" alt="Featured image of post Maven詳細研究" />&lt;p>最近換了一份新工作，發現我一直以來平淡無情的Maven原來也是有很多細節的（我一直以為就只是一個拿來自動下載Jar的無情機器而已），其實Maven的pom.xml的名稱其實就已經隱含了它的功能&lt;/p>
&lt;p>&lt;span style="color:yellow">P&lt;/span>roject &lt;span style="color:yellow">O&lt;/span>bject &lt;span style="color:yellow">M&lt;/span>odel（專案物件模型）&lt;/p>
&lt;p>望文生義其實也可以感受到它就是用來管理專案、或專案與專案之間關係的一個檔案，這篇文章的主題是我想要&lt;strong>了解Maven Module管理的部分&lt;/strong>&lt;/p>
&lt;h1 id="maven項目結構">Maven項目結構&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/2GGxuxP.png"
loading="lazy"
alt="image-20230529100756011"
>&lt;/p>
&lt;h1 id="超級pom">超級POM&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;span class="lnt">208
&lt;/span>&lt;span class="lnt">209
&lt;/span>&lt;span class="lnt">210
&lt;/span>&lt;span class="lnt">211
&lt;/span>&lt;span class="lnt">212
&lt;/span>&lt;span class="lnt">213
&lt;/span>&lt;span class="lnt">214
&lt;/span>&lt;span class="lnt">215
&lt;/span>&lt;span class="lnt">216
&lt;/span>&lt;span class="lnt">217
&lt;/span>&lt;span class="lnt">218
&lt;/span>&lt;span class="lnt">219
&lt;/span>&lt;span class="lnt">220
&lt;/span>&lt;span class="lnt">221
&lt;/span>&lt;span class="lnt">222
&lt;/span>&lt;span class="lnt">223
&lt;/span>&lt;span class="lnt">224
&lt;/span>&lt;span class="lnt">225
&lt;/span>&lt;span class="lnt">226
&lt;/span>&lt;span class="lnt">227
&lt;/span>&lt;span class="lnt">228
&lt;/span>&lt;span class="lnt">229
&lt;/span>&lt;span class="lnt">230
&lt;/span>&lt;span class="lnt">231
&lt;/span>&lt;span class="lnt">232
&lt;/span>&lt;span class="lnt">233
&lt;/span>&lt;span class="lnt">234
&lt;/span>&lt;span class="lnt">235
&lt;/span>&lt;span class="lnt">236
&lt;/span>&lt;span class="lnt">237
&lt;/span>&lt;span class="lnt">238
&lt;/span>&lt;span class="lnt">239
&lt;/span>&lt;span class="lnt">240
&lt;/span>&lt;span class="lnt">241
&lt;/span>&lt;span class="lnt">242
&lt;/span>&lt;span class="lnt">243
&lt;/span>&lt;span class="lnt">244
&lt;/span>&lt;span class="lnt">245
&lt;/span>&lt;span class="lnt">246
&lt;/span>&lt;span class="lnt">247
&lt;/span>&lt;span class="lnt">248
&lt;/span>&lt;span class="lnt">249
&lt;/span>&lt;span class="lnt">250
&lt;/span>&lt;span class="lnt">251
&lt;/span>&lt;span class="lnt">252
&lt;/span>&lt;span class="lnt">253
&lt;/span>&lt;span class="lnt">254
&lt;/span>&lt;span class="lnt">255
&lt;/span>&lt;span class="lnt">256
&lt;/span>&lt;span class="lnt">257
&lt;/span>&lt;span class="lnt">258
&lt;/span>&lt;span class="lnt">259
&lt;/span>&lt;span class="lnt">260
&lt;/span>&lt;span class="lnt">261
&lt;/span>&lt;span class="lnt">262
&lt;/span>&lt;span class="lnt">263
&lt;/span>&lt;span class="lnt">264
&lt;/span>&lt;span class="lnt">265
&lt;/span>&lt;span class="lnt">266
&lt;/span>&lt;span class="lnt">267
&lt;/span>&lt;span class="lnt">268
&lt;/span>&lt;span class="lnt">269
&lt;/span>&lt;span class="lnt">270
&lt;/span>&lt;span class="lnt">271
&lt;/span>&lt;span class="lnt">272
&lt;/span>&lt;span class="lnt">273
&lt;/span>&lt;span class="lnt">274
&lt;/span>&lt;span class="lnt">275
&lt;/span>&lt;span class="lnt">276
&lt;/span>&lt;span class="lnt">277
&lt;/span>&lt;span class="lnt">278
&lt;/span>&lt;span class="lnt">279
&lt;/span>&lt;span class="lnt">280
&lt;/span>&lt;span class="lnt">281
&lt;/span>&lt;span class="lnt">282
&lt;/span>&lt;span class="lnt">283
&lt;/span>&lt;span class="lnt">284
&lt;/span>&lt;span class="lnt">285
&lt;/span>&lt;span class="lnt">286
&lt;/span>&lt;span class="lnt">287
&lt;/span>&lt;span class="lnt">288
&lt;/span>&lt;span class="lnt">289
&lt;/span>&lt;span class="lnt">290
&lt;/span>&lt;span class="lnt">291
&lt;/span>&lt;span class="lnt">292
&lt;/span>&lt;span class="lnt">293
&lt;/span>&lt;span class="lnt">294
&lt;/span>&lt;span class="lnt">295
&lt;/span>&lt;span class="lnt">296
&lt;/span>&lt;span class="lnt">297
&lt;/span>&lt;span class="lnt">298
&lt;/span>&lt;span class="lnt">299
&lt;/span>&lt;span class="lnt">300
&lt;/span>&lt;span class="lnt">301
&lt;/span>&lt;span class="lnt">302
&lt;/span>&lt;span class="lnt">303
&lt;/span>&lt;span class="lnt">304
&lt;/span>&lt;span class="lnt">305
&lt;/span>&lt;span class="lnt">306
&lt;/span>&lt;span class="lnt">307
&lt;/span>&lt;span class="lnt">308
&lt;/span>&lt;span class="lnt">309
&lt;/span>&lt;span class="lnt">310
&lt;/span>&lt;span class="lnt">311
&lt;/span>&lt;span class="lnt">312
&lt;/span>&lt;span class="lnt">313
&lt;/span>&lt;span class="lnt">314
&lt;/span>&lt;span class="lnt">315
&lt;/span>&lt;span class="lnt">316
&lt;/span>&lt;span class="lnt">317
&lt;/span>&lt;span class="lnt">318
&lt;/span>&lt;span class="lnt">319
&lt;/span>&lt;span class="lnt">320
&lt;/span>&lt;span class="lnt">321
&lt;/span>&lt;span class="lnt">322
&lt;/span>&lt;span class="lnt">323
&lt;/span>&lt;span class="lnt">324
&lt;/span>&lt;span class="lnt">325
&lt;/span>&lt;span class="lnt">326
&lt;/span>&lt;span class="lnt">327
&lt;/span>&lt;span class="lnt">328
&lt;/span>&lt;span class="lnt">329
&lt;/span>&lt;span class="lnt">330
&lt;/span>&lt;span class="lnt">331
&lt;/span>&lt;span class="lnt">332
&lt;/span>&lt;span class="lnt">333
&lt;/span>&lt;span class="lnt">334
&lt;/span>&lt;span class="lnt">335
&lt;/span>&lt;span class="lnt">336
&lt;/span>&lt;span class="lnt">337
&lt;/span>&lt;span class="lnt">338
&lt;/span>&lt;span class="lnt">339
&lt;/span>&lt;span class="lnt">340
&lt;/span>&lt;span class="lnt">341
&lt;/span>&lt;span class="lnt">342
&lt;/span>&lt;span class="lnt">343
&lt;/span>&lt;span class="lnt">344
&lt;/span>&lt;span class="lnt">345
&lt;/span>&lt;span class="lnt">346
&lt;/span>&lt;span class="lnt">347
&lt;/span>&lt;span class="lnt">348
&lt;/span>&lt;span class="lnt">349
&lt;/span>&lt;span class="lnt">350
&lt;/span>&lt;span class="lnt">351
&lt;/span>&lt;span class="lnt">352
&lt;/span>&lt;span class="lnt">353
&lt;/span>&lt;span class="lnt">354
&lt;/span>&lt;span class="lnt">355
&lt;/span>&lt;span class="lnt">356
&lt;/span>&lt;span class="lnt">357
&lt;/span>&lt;span class="lnt">358
&lt;/span>&lt;span class="lnt">359
&lt;/span>&lt;span class="lnt">360
&lt;/span>&lt;span class="lnt">361
&lt;/span>&lt;span class="lnt">362
&lt;/span>&lt;span class="lnt">363
&lt;/span>&lt;span class="lnt">364
&lt;/span>&lt;span class="lnt">365
&lt;/span>&lt;span class="lnt">366
&lt;/span>&lt;span class="lnt">367
&lt;/span>&lt;span class="lnt">368
&lt;/span>&lt;span class="lnt">369
&lt;/span>&lt;span class="lnt">370
&lt;/span>&lt;span class="lnt">371
&lt;/span>&lt;span class="lnt">372
&lt;/span>&lt;span class="lnt">373
&lt;/span>&lt;span class="lnt">374
&lt;/span>&lt;span class="lnt">375
&lt;/span>&lt;span class="lnt">376
&lt;/span>&lt;span class="lnt">377
&lt;/span>&lt;span class="lnt">378
&lt;/span>&lt;span class="lnt">379
&lt;/span>&lt;span class="lnt">380
&lt;/span>&lt;span class="lnt">381
&lt;/span>&lt;span class="lnt">382
&lt;/span>&lt;span class="lnt">383
&lt;/span>&lt;span class="lnt">384
&lt;/span>&lt;span class="lnt">385
&lt;/span>&lt;span class="lnt">386
&lt;/span>&lt;span class="lnt">387
&lt;/span>&lt;span class="lnt">388
&lt;/span>&lt;span class="lnt">389
&lt;/span>&lt;span class="lnt">390
&lt;/span>&lt;span class="lnt">391
&lt;/span>&lt;span class="lnt">392
&lt;/span>&lt;span class="lnt">393
&lt;/span>&lt;span class="lnt">394
&lt;/span>&lt;span class="lnt">395
&lt;/span>&lt;span class="lnt">396
&lt;/span>&lt;span class="lnt">397
&lt;/span>&lt;span class="lnt">398
&lt;/span>&lt;span class="lnt">399
&lt;/span>&lt;span class="lnt">400
&lt;/span>&lt;span class="lnt">401
&lt;/span>&lt;span class="lnt">402
&lt;/span>&lt;span class="lnt">403
&lt;/span>&lt;span class="lnt">404
&lt;/span>&lt;span class="lnt">405
&lt;/span>&lt;span class="lnt">406
&lt;/span>&lt;span class="lnt">407
&lt;/span>&lt;span class="lnt">408
&lt;/span>&lt;span class="lnt">409
&lt;/span>&lt;span class="lnt">410
&lt;/span>&lt;span class="lnt">411
&lt;/span>&lt;span class="lnt">412
&lt;/span>&lt;span class="lnt">413
&lt;/span>&lt;span class="lnt">414
&lt;/span>&lt;span class="lnt">415
&lt;/span>&lt;span class="lnt">416
&lt;/span>&lt;span class="lnt">417
&lt;/span>&lt;span class="lnt">418
&lt;/span>&lt;span class="lnt">419
&lt;/span>&lt;span class="lnt">420
&lt;/span>&lt;span class="lnt">421
&lt;/span>&lt;span class="lnt">422
&lt;/span>&lt;span class="lnt">423
&lt;/span>&lt;span class="lnt">424
&lt;/span>&lt;span class="lnt">425
&lt;/span>&lt;span class="lnt">426
&lt;/span>&lt;span class="lnt">427
&lt;/span>&lt;span class="lnt">428
&lt;/span>&lt;span class="lnt">429
&lt;/span>&lt;span class="lnt">430
&lt;/span>&lt;span class="lnt">431
&lt;/span>&lt;span class="lnt">432
&lt;/span>&lt;span class="lnt">433
&lt;/span>&lt;span class="lnt">434
&lt;/span>&lt;span class="lnt">435
&lt;/span>&lt;span class="lnt">436
&lt;/span>&lt;span class="lnt">437
&lt;/span>&lt;span class="lnt">438
&lt;/span>&lt;span class="lnt">439
&lt;/span>&lt;span class="lnt">440
&lt;/span>&lt;span class="lnt">441
&lt;/span>&lt;span class="lnt">442
&lt;/span>&lt;span class="lnt">443
&lt;/span>&lt;span class="lnt">444
&lt;/span>&lt;span class="lnt">445
&lt;/span>&lt;span class="lnt">446
&lt;/span>&lt;span class="lnt">447
&lt;/span>&lt;span class="lnt">448
&lt;/span>&lt;span class="lnt">449
&lt;/span>&lt;span class="lnt">450
&lt;/span>&lt;span class="lnt">451
&lt;/span>&lt;span class="lnt">452
&lt;/span>&lt;span class="lnt">453
&lt;/span>&lt;span class="lnt">454
&lt;/span>&lt;span class="lnt">455
&lt;/span>&lt;span class="lnt">456
&lt;/span>&lt;span class="lnt">457
&lt;/span>&lt;span class="lnt">458
&lt;/span>&lt;span class="lnt">459
&lt;/span>&lt;span class="lnt">460
&lt;/span>&lt;span class="lnt">461
&lt;/span>&lt;span class="lnt">462
&lt;/span>&lt;span class="lnt">463
&lt;/span>&lt;span class="lnt">464
&lt;/span>&lt;span class="lnt">465
&lt;/span>&lt;span class="lnt">466
&lt;/span>&lt;span class="lnt">467
&lt;/span>&lt;span class="lnt">468
&lt;/span>&lt;span class="lnt">469
&lt;/span>&lt;span class="lnt">470
&lt;/span>&lt;span class="lnt">471
&lt;/span>&lt;span class="lnt">472
&lt;/span>&lt;span class="lnt">473
&lt;/span>&lt;span class="lnt">474
&lt;/span>&lt;span class="lnt">475
&lt;/span>&lt;span class="lnt">476
&lt;/span>&lt;span class="lnt">477
&lt;/span>&lt;span class="lnt">478
&lt;/span>&lt;span class="lnt">479
&lt;/span>&lt;span class="lnt">480
&lt;/span>&lt;span class="lnt">481
&lt;/span>&lt;span class="lnt">482
&lt;/span>&lt;span class="lnt">483
&lt;/span>&lt;span class="lnt">484
&lt;/span>&lt;span class="lnt">485
&lt;/span>&lt;span class="lnt">486
&lt;/span>&lt;span class="lnt">487
&lt;/span>&lt;span class="lnt">488
&lt;/span>&lt;span class="lnt">489
&lt;/span>&lt;span class="lnt">490
&lt;/span>&lt;span class="lnt">491
&lt;/span>&lt;span class="lnt">492
&lt;/span>&lt;span class="lnt">493
&lt;/span>&lt;span class="lnt">494
&lt;/span>&lt;span class="lnt">495
&lt;/span>&lt;span class="lnt">496
&lt;/span>&lt;span class="lnt">497
&lt;/span>&lt;span class="lnt">498
&lt;/span>&lt;span class="lnt">499
&lt;/span>&lt;span class="lnt">500
&lt;/span>&lt;span class="lnt">501
&lt;/span>&lt;span class="lnt">502
&lt;/span>&lt;span class="lnt">503
&lt;/span>&lt;span class="lnt">504
&lt;/span>&lt;span class="lnt">505
&lt;/span>&lt;span class="lnt">506
&lt;/span>&lt;span class="lnt">507
&lt;/span>&lt;span class="lnt">508
&lt;/span>&lt;span class="lnt">509
&lt;/span>&lt;span class="lnt">510
&lt;/span>&lt;span class="lnt">511
&lt;/span>&lt;span class="lnt">512
&lt;/span>&lt;span class="lnt">513
&lt;/span>&lt;span class="lnt">514
&lt;/span>&lt;span class="lnt">515
&lt;/span>&lt;span class="lnt">516
&lt;/span>&lt;span class="lnt">517
&lt;/span>&lt;span class="lnt">518
&lt;/span>&lt;span class="lnt">519
&lt;/span>&lt;span class="lnt">520
&lt;/span>&lt;span class="lnt">521
&lt;/span>&lt;span class="lnt">522
&lt;/span>&lt;span class="lnt">523
&lt;/span>&lt;span class="lnt">524
&lt;/span>&lt;span class="lnt">525
&lt;/span>&lt;span class="lnt">526
&lt;/span>&lt;span class="lnt">527
&lt;/span>&lt;span class="lnt">528
&lt;/span>&lt;span class="lnt">529
&lt;/span>&lt;span class="lnt">530
&lt;/span>&lt;span class="lnt">531
&lt;/span>&lt;span class="lnt">532
&lt;/span>&lt;span class="lnt">533
&lt;/span>&lt;span class="lnt">534
&lt;/span>&lt;span class="lnt">535
&lt;/span>&lt;span class="lnt">536
&lt;/span>&lt;span class="lnt">537
&lt;/span>&lt;span class="lnt">538
&lt;/span>&lt;span class="lnt">539
&lt;/span>&lt;span class="lnt">540
&lt;/span>&lt;span class="lnt">541
&lt;/span>&lt;span class="lnt">542
&lt;/span>&lt;span class="lnt">543
&lt;/span>&lt;span class="lnt">544
&lt;/span>&lt;span class="lnt">545
&lt;/span>&lt;span class="lnt">546
&lt;/span>&lt;span class="lnt">547
&lt;/span>&lt;span class="lnt">548
&lt;/span>&lt;span class="lnt">549
&lt;/span>&lt;span class="lnt">550
&lt;/span>&lt;span class="lnt">551
&lt;/span>&lt;span class="lnt">552
&lt;/span>&lt;span class="lnt">553
&lt;/span>&lt;span class="lnt">554
&lt;/span>&lt;span class="lnt">555
&lt;/span>&lt;span class="lnt">556
&lt;/span>&lt;span class="lnt">557
&lt;/span>&lt;span class="lnt">558
&lt;/span>&lt;span class="lnt">559
&lt;/span>&lt;span class="lnt">560
&lt;/span>&lt;span class="lnt">561
&lt;/span>&lt;span class="lnt">562
&lt;/span>&lt;span class="lnt">563
&lt;/span>&lt;span class="lnt">564
&lt;/span>&lt;span class="lnt">565
&lt;/span>&lt;span class="lnt">566
&lt;/span>&lt;span class="lnt">567
&lt;/span>&lt;span class="lnt">568
&lt;/span>&lt;span class="lnt">569
&lt;/span>&lt;span class="lnt">570
&lt;/span>&lt;span class="lnt">571
&lt;/span>&lt;span class="lnt">572
&lt;/span>&lt;span class="lnt">573
&lt;/span>&lt;span class="lnt">574
&lt;/span>&lt;span class="lnt">575
&lt;/span>&lt;span class="lnt">576
&lt;/span>&lt;span class="lnt">577
&lt;/span>&lt;span class="lnt">578
&lt;/span>&lt;span class="lnt">579
&lt;/span>&lt;span class="lnt">580
&lt;/span>&lt;span class="lnt">581
&lt;/span>&lt;span class="lnt">582
&lt;/span>&lt;span class="lnt">583
&lt;/span>&lt;span class="lnt">584
&lt;/span>&lt;span class="lnt">585
&lt;/span>&lt;span class="lnt">586
&lt;/span>&lt;span class="lnt">587
&lt;/span>&lt;span class="lnt">588
&lt;/span>&lt;span class="lnt">589
&lt;/span>&lt;span class="lnt">590
&lt;/span>&lt;span class="lnt">591
&lt;/span>&lt;span class="lnt">592
&lt;/span>&lt;span class="lnt">593
&lt;/span>&lt;span class="lnt">594
&lt;/span>&lt;span class="lnt">595
&lt;/span>&lt;span class="lnt">596
&lt;/span>&lt;span class="lnt">597
&lt;/span>&lt;span class="lnt">598
&lt;/span>&lt;span class="lnt">599
&lt;/span>&lt;span class="lnt">600
&lt;/span>&lt;span class="lnt">601
&lt;/span>&lt;span class="lnt">602
&lt;/span>&lt;span class="lnt">603
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">pom作为项目对象模型。通过xml表示maven项目，使用pom.xml来实现。
主要描述了项目：包括配置文件；开发者需要遵循的规则，缺陷管理系统，组织和licenses，项目的url，项目的依赖性，以及其他所有的项目相关因素。
&lt;span class="nt">&amp;lt;project&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span>
&lt;span class="na">xmlns:xsi=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;span class="na">xsi:schemaLocation=&lt;/span>&lt;span class="s">&amp;#34;http://maven.apache.org/POM/4.0.0http://maven.apache.org/maven-v4_0_0.xsd&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;parent&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--被继承的父项目的构件标识符--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--被继承的父项目的全球唯一标识符--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--被继承的父项目的版本--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项 目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;relativePath/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/parent&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;modelVersion&amp;gt;&lt;/span>4.0.0&lt;span class="nt">&amp;lt;/modelVersion&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， 如com.mycompany.app生成的相对路径为：/com/mycompany/app--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>asia.banseon&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID和groupID；在某个 特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源 码，二进制发布和WARs等。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>banseon-maven2&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;packaging&amp;gt;&lt;/span>jar&lt;span class="nt">&amp;lt;/packaging&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0-SNAPSHOT&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目的名称, Maven产生的文档用--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>banseon-maven&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目主页的URL, Maven产生的文档用--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>http://www.baidu.com/banseon&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 项目的详细描述, Maven 产生的文档用。 当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标 签）， 不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;description&amp;gt;&lt;/span>A maven project to study maven.&lt;span class="nt">&amp;lt;/description&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--描述了这个项目构建环境中的前提条件。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;prerequisites&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建该项目或使用该插件所需要的Maven的最低版本--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;maven/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/prerequisites&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目的问题管理系统(Bugzilla, Jira, Scarab,或任何你喜欢的问题管理系统)的名称和URL，本例为 jira--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;issueManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--问题管理系统（例如jira）的名字，--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;system&amp;gt;&lt;/span>jira&lt;span class="nt">&amp;lt;/system&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该项目使用的问题管理系统的URL--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>http://jira.baidu.com/banseon&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/issueManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目持续集成信息--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;ciManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--持续集成系统的名字，例如continuum--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;system/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告）--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;notifiers&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--配置一种方式，当构建中断时，以该方式通知用户/开发者--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;notifier&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--传送通知的途径--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;type/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--发生错误时是否通知--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;sendOnError/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建失败时是否通知--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;sendOnFailure/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建成功时是否通知--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;sendOnSuccess/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--发生警告时是否通知--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;sendOnWarning/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--不赞成使用。通知发送到哪里--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;address/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--扩展配置项--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/notifier&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/notifiers&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/ciManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目创建年份，4位数字。当产生版权信息时需要使用这个值。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;inceptionYear/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目相关邮件列表信息--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;mailingLists&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;mailingList&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--邮件的名称--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>Demo&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;post&amp;gt;&lt;/span>banseon@126.com&lt;span class="nt">&amp;lt;/post&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;subscribe&amp;gt;&lt;/span>banseon@126.com&lt;span class="nt">&amp;lt;/subscribe&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;unsubscribe&amp;gt;&lt;/span>banseon@126.com&lt;span class="nt">&amp;lt;/unsubscribe&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--你可以浏览邮件信息的URL--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;archive&amp;gt;&lt;/span>http:/hi.baidu.com/banseon/demo/dev/&lt;span class="nt">&amp;lt;/archive&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/mailingList&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/mailingLists&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目开发者列表--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;developers&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--某个项目开发者的信息--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;developer&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--SCM里项目开发者的唯一标识符--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>HELLO WORLD&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目开发者的全名--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>banseon&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目开发者的email--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;email&amp;gt;&lt;/span>banseon@126.com&lt;span class="nt">&amp;lt;/email&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目开发者的主页的URL--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目开发者在项目中扮演的角色，角色元素描述了各种角色--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;roles&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;role&amp;gt;&lt;/span>Project Manager&lt;span class="nt">&amp;lt;/role&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;role&amp;gt;&lt;/span>Architect&lt;span class="nt">&amp;lt;/role&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/roles&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目开发者所属组织--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;organization&amp;gt;&lt;/span>demo&lt;span class="nt">&amp;lt;/organization&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目开发者所属组织的URL--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;organizationUrl&amp;gt;&lt;/span>http://hi.baidu.com/banseon&lt;span class="nt">&amp;lt;/organizationUrl&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目开发者属性，如即时消息如何处理等--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dept&amp;gt;&lt;/span>No&lt;span class="nt">&amp;lt;/dept&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目开发者所在时区， -11到12范围内的整数。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;timezone&amp;gt;&lt;/span>-5&lt;span class="nt">&amp;lt;/timezone&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/developer&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/developers&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目的其他贡献者列表--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;contributors&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目的其他贡献者。参见developers/developer元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;contributor&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name/&amp;gt;&amp;lt;email/&amp;gt;&amp;lt;url/&amp;gt;&amp;lt;organization/&amp;gt;&amp;lt;organizationUrl/&amp;gt;&amp;lt;roles/&amp;gt;&amp;lt;timezone/&amp;gt;&amp;lt;properties/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/contributor&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/contributors&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。如果列出多个license，用户可以选择它们中的一个而不是接受所有license。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;licenses&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;license&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--license用于法律上的名称--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>Apache 2&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--官方的license正文页面的URL--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>http://www.baidu.com/banseon/LICENSE-2.0.txt&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目分发的主要方式：
&lt;/span>&lt;span class="c"> repo，可以从Maven库下载
&lt;/span>&lt;span class="c"> manual， 用户必须手动下载和安装依赖--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;distribution&amp;gt;&lt;/span>repo&lt;span class="nt">&amp;lt;/distribution&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--关于license的补充信息--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;comments&amp;gt;&lt;/span>A business-friendly OSS license&lt;span class="nt">&amp;lt;/comments&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/license&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/licenses&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;scm&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;connection&amp;gt;&lt;/span>
scm:svn:http://svn.baidu.com/banseon/maven/banseon/banseon-maven2-trunk(dao-trunk)
&lt;span class="nt">&amp;lt;/connection&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--给开发者使用的，类似connection元素。即该连接不仅仅只读--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;developerConnection&amp;gt;&lt;/span>
scm:svn:http://svn.baidu.com/banseon/maven/banseon/dao-trunk
&lt;span class="nt">&amp;lt;/developerConnection&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--当前代码的标签，在开发阶段默认为HEAD--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;tag/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>http://svn.baidu.com/banseon&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/scm&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--描述项目所属组织的各种属性。Maven产生的文档用--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;organization&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--组织的全名--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>demo&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--组织主页的URL--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>http://www.baidu.com/banseon&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/organization&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建项目需要的信息--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;build&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;sourceDirectory/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容 会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;scriptSourceDirectory/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;testSourceDirectory/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--被编译过的应用程序class文件存放的目录。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;outputDirectory/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--被编译过的测试class文件存放的目录。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;testOutputDirectory/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--使用来自该项目的一系列构建扩展--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;extensions&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--描述使用到的构建扩展。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;extension&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建扩展的groupId--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建扩展的artifactId--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建扩展的版本--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/extension&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/extensions&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--当项目没有规定目标（Maven2 叫做阶段）时的默认值--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;defaultGoal/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;resources&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--这个元素描述了项目相关或测试相关的所有资源路径--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;resource&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 描述了资源的目标路径。该路径相对target/classes目录（例如${project.build.outputDirectory}）。举个例 子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为org/apache/maven /messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;targetPath/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;filtering/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--描述存放资源的目录，该路径相对POM路径--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;directory/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--包含的模式列表，例如**/*.xml.--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;includes/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--排除的模式列表，例如**/*.xml--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;excludes/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/resource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/resources&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;testResources&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--这个元素描述了测试相关的所有资源路径，参见build/resources/resource元素的说明--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;testResource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;targetPath/&amp;gt;&amp;lt;filtering/&amp;gt;&amp;lt;directory/&amp;gt;&amp;lt;includes/&amp;gt;&amp;lt;excludes/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/testResource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/testResources&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建产生的所有文件存放的目录--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;directory/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--产生的构件的文件名，默认值是${artifactId}-${version}。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;finalName/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--当filtering开关打开时，使用到的过滤器属性文件列表--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;filters/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;pluginManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--使用的插件列表 。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--plugin元素包含描述插件所需要的信息。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--插件在仓库里的group ID--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--插件在仓库里的artifact ID--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--被使用的插件的版本（或版本范围）--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;extensions/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;executions&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--execution元素包含了插件执行需要的信息--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;execution&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;phase/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--配置的执行目标--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;goals/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--配置是否被传播到子POM--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;inherited/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--作为DOM对象的配置--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/execution&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/executions&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目引入插件所需要的额外依赖--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见dependencies/dependency元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
......
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--任何配置是否被传播到子项目--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;inherited/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--作为DOM对象的配置--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/pluginManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--使用的插件列表--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见build/pluginManagement/plugins/plugin元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId/&amp;gt;&amp;lt;artifactId/&amp;gt;&amp;lt;version/&amp;gt;&amp;lt;extensions/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;executions&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;execution&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id/&amp;gt;&amp;lt;phase/&amp;gt;&amp;lt;goals/&amp;gt;&amp;lt;inherited/&amp;gt;&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/execution&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/executions&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见dependencies/dependency元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
......
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;goals/&amp;gt;&amp;lt;inherited/&amp;gt;&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/build&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--在列的项目构建profile，如果被激活，会修改构建处理--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profiles&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--根据环境参数或命令行参数激活某个构建处理--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profile&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它
&lt;/span>&lt;span class="c"> 能够在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元素并不是激活profile的唯一方式。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;activation&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--profile默认是否激活的标志--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;activeByDefault/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本不是以1.4开头的JDK。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;jdk/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;os&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--激活profile的操作系统的名字--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>Windows XP&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--激活profile的操作系统所属家族(如 &amp;#39;windows&amp;#39;)--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;family&amp;gt;&lt;/span>Windows&lt;span class="nt">&amp;lt;/family&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--激活profile的操作系统体系结构 --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;arch&amp;gt;&lt;/span>x86&lt;span class="nt">&amp;lt;/arch&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--激活profile的操作系统版本--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>5.1.2600&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/os&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--如果Maven检测到某一个属性（其值可以在POM中通过${名称}引用），其拥有对应的名称和值，Profile就会被激活。如果值
&lt;/span>&lt;span class="c"> 字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹配属性值字段--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;property&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--激活profile的属性的名称--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>mavenVersion&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--激活profile的属性的值--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;value&amp;gt;&lt;/span>2.0.3&lt;span class="nt">&amp;lt;/value&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/property&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活
&lt;/span>&lt;span class="c"> profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;file&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--如果指定的文件存在，则激活profile。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;exists&amp;gt;&lt;/span>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/&lt;span class="nt">&amp;lt;/exists&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--如果指定的文件不存在，则激活profile。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;missing&amp;gt;&lt;/span>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/&lt;span class="nt">&amp;lt;/missing&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/file&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/activation&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构建项目所需要的信息。参见build元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;build&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;defaultGoal/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;resources&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;resource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;targetPath/&amp;gt;&amp;lt;filtering/&amp;gt;&amp;lt;directory/&amp;gt;&amp;lt;includes/&amp;gt;&amp;lt;excludes/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/resource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/resources&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;testResources&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;testResource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;targetPath/&amp;gt;&amp;lt;filtering/&amp;gt;&amp;lt;directory/&amp;gt;&amp;lt;includes/&amp;gt;&amp;lt;excludes/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/testResource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/testResources&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;directory/&amp;gt;&amp;lt;finalName/&amp;gt;&amp;lt;filters/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;pluginManagement&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见build/pluginManagement/plugins/plugin元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId/&amp;gt;&amp;lt;artifactId/&amp;gt;&amp;lt;version/&amp;gt;&amp;lt;extensions/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;executions&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;execution&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id/&amp;gt;&amp;lt;phase/&amp;gt;&amp;lt;goals/&amp;gt;&amp;lt;inherited/&amp;gt;&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/execution&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/executions&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见dependencies/dependency元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
......
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;goals/&amp;gt;&amp;lt;inherited/&amp;gt;&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/pluginManagement&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见build/pluginManagement/plugins/plugin元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId/&amp;gt;&amp;lt;artifactId/&amp;gt;&amp;lt;version/&amp;gt;&amp;lt;extensions/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;executions&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;execution&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id/&amp;gt;&amp;lt;phase/&amp;gt;&amp;lt;goals/&amp;gt;&amp;lt;inherited/&amp;gt;&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/execution&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/executions&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见dependencies/dependency元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
......
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;goals/&amp;gt;&amp;lt;inherited/&amp;gt;&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/build&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;modules/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--发现依赖和扩展的远程仓库列表。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;repositories&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见repositories/repository元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;repository&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;releases&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;enabled/&amp;gt;&amp;lt;updatePolicy/&amp;gt;&amp;lt;checksumPolicy/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/releases&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;snapshots&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;enabled/&amp;gt;&amp;lt;updatePolicy/&amp;gt;&amp;lt;checksumPolicy/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/snapshots&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id/&amp;gt;&amp;lt;name/&amp;gt;&amp;lt;url/&amp;gt;&amp;lt;layout/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/repository&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/repositories&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;pluginRepositories&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;pluginRepository&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;releases&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;enabled/&amp;gt;&amp;lt;updatePolicy/&amp;gt;&amp;lt;checksumPolicy/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/releases&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;snapshots&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;enabled/&amp;gt;&amp;lt;updatePolicy/&amp;gt;&amp;lt;checksumPolicy/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/snapshots&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id/&amp;gt;&amp;lt;name/&amp;gt;&amp;lt;url/&amp;gt;&amp;lt;layout/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/pluginRepository&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/pluginRepositories&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见dependencies/dependency元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
......
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--不赞成使用. 现在Maven忽略该元素.--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;reports/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。参见reporting元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;reporting&amp;gt;&lt;/span>
......
&lt;span class="nt">&amp;lt;/reporting&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见dependencyManagement元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencyManagement&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见dependencies/dependency元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
......
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencyManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见distributionManagement元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;distributionManagement&amp;gt;&lt;/span>
......
&lt;span class="nt">&amp;lt;/distributionManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见properties元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;properties/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/profiles&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;modules/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--发现依赖和扩展的远程仓库列表。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;repositories&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--包含需要连接到远程仓库的信息--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;repository&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--如何处理远程仓库里发布版本的下载--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;releases&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;enabled/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;updatePolicy/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;checksumPolicy/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/releases&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的 策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 --&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;snapshots&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;enabled/&amp;gt;&amp;lt;updatePolicy/&amp;gt;&amp;lt;checksumPolicy/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/snapshots&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>banseon-repository-proxy&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--远程仓库名称--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>banseon-repository-proxy&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--远程仓库URL，按protocol://hostname/path形式--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>http://192.168.1.169:9999/repository/&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然 而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;layout&amp;gt;&lt;/span>default&lt;span class="nt">&amp;lt;/layout&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/repository&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/repositories&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;pluginRepositories&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;pluginRepository&amp;gt;&lt;/span>
......
&lt;span class="nt">&amp;lt;/pluginRepository&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/pluginRepositories&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--依赖的group ID--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.maven&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--依赖的artifact ID--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>maven-artifact&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.8.1&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应， 尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为 true，就可以在 plugin里定义新的类型。所以前面的类型的例子不完整。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;type&amp;gt;&lt;/span>jar&lt;span class="nt">&amp;lt;/type&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成 JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生成两个单独的JAR构件。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;classifier&amp;gt;&amp;lt;/classifier&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。
&lt;/span>&lt;span class="c"> - compile ：默认范围，用于编译
&lt;/span>&lt;span class="c"> - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath
&lt;/span>&lt;span class="c"> - runtime: 在执行时需要使用
&lt;/span>&lt;span class="c"> - test: 用于test任务时使用
&lt;/span>&lt;span class="c"> - system: 需要外在提供相应的元素。通过systemPath来取得
&lt;/span>&lt;span class="c"> - systemPath: 仅用于范围为system。提供相应的路径
&lt;/span>&lt;span class="c"> - optional: 当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span class="nt">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;systemPath&amp;gt;&amp;lt;/systemPath&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;exclusions&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;exclusion&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-core&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/exclusion&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/exclusions&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;optional&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/optional&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--不赞成使用. 现在Maven忽略该元素.--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;reports&amp;gt;&amp;lt;/reports&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;reporting&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;excludeDefaults/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--所有产生的报表存放到哪里。默认值是${project.build.directory}/site。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;outputDirectory/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--使用的报表插件和他们的配置。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--plugin元素包含描述报表插件需要的信息--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--报表插件在仓库里的group ID--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--报表插件在仓库里的artifact ID--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--被使用的报表插件的版本（或版本范围）--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--任何配置是否被传播到子项目--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;inherited/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--报表插件的配置--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报表集，对应另一个执行目标--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;reportSets&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--表示报表的一个集合，以及产生该集合的配置--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;reportSet&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--报表集合的唯一标识符，POM继承时用到--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--产生报表集合时，被使用的报表的配置--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;configuration/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--配置是否被继承到子POMs--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;inherited/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--这个集合里使用到哪些报表--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;reports/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/reportSet&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/reportSets&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/reporting&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述group ID和 artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID 匹配到这里的依赖，并使用这里的依赖信息。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencyManagement&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--参见dependencies/dependency元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
......
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencyManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;distributionManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--部署项目产生的构件到远程仓库需要的信息--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;repository&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;uniqueVersion/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>banseon-maven2&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>banseon maven2&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>file://${basedir}/target/deploy&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;layout/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/repository&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;snapshotRepository&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;uniqueVersion/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>banseon-maven2&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>Banseon-maven2 Snapshot Repository&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>scp://svn.baidu.com/banseon:/usr/local/maven-snapshot&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;layout/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/snapshotRepository&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--部署项目的网站需要的信息--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;site&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>banseon-site&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--部署位置的名称--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>business api website&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--部署位置的URL，按protocol://hostname/path形式--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>
scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web
&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/site&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;downloadUrl/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;relocation&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构件新的group ID--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构件新的artifact ID--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--构件新的版本号--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--显示给用户的，关于移动的额外信息，例如原因。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;message/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/relocation&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），converted（仓库管理员从 Maven 1 POM转换过来），partner（直接从伙伴Maven 2仓库同步过来），deployed（从Maven 2实例部 署），verified（被核实时正确的和最终的）。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;status/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/distributionManagement&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里activation元素的说明）。格式是&amp;lt;name&amp;gt;value&amp;lt;/name&amp;gt;。--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;properties/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/project&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="常用指令">常用指令&lt;/h1>
&lt;ol start="0">
&lt;li>顯示版本訊息&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">mvn -version
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>編譯Source Code&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">mvn compile
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>清除編譯完文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">mvn clean
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>打包成jar, war&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">mvn pakage
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>執行測試&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">mvn test
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>將打包的jar, war放到本地的repository,供其他項目使用&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">mvn install
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="6">
&lt;li>查看啟用的profile&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mvn help:active-profiles
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/rOmmWm8.png"
loading="lazy"
alt="image-20230529104953877"
>&lt;/p>
&lt;h1 id="maven-命令參數">Maven 命令參數&lt;/h1>
&lt;h2 id="-d-傳入屬性參數">-D 傳入屬性參數&lt;/h2>
&lt;h3 id="跳過單元測試">跳過單元測試&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">mvn pakage -Dmaven.test.skip=true
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="-p-使用指定的profile配置">-P 使用指定的Profile配置&lt;/h2>
&lt;p>詳細請參考此影片&lt;/p>
&lt;p>&lt;a href="https://www.bilibili.com/video/BV1Fz4y167p5?p=6&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=422eafa6570139128e44a83238959fa0">https://www.bilibili.com/video/BV1Fz4y167p5?p=6&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=422eafa6570139128e44a83238959fa0&lt;/a>&lt;/p>
&lt;p>在POM裡面定義了這些東西&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;profiles&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profile&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--不同环境Profile的唯一id--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>dev&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;properties&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--profiles.active是自定义的字段（名字随便起），自定义字段可以有多个--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profiles.active&amp;gt;&lt;/span>dev&lt;span class="nt">&amp;lt;/profiles.active&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>prod&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profiles.active&amp;gt;&lt;/span>prod&lt;span class="nt">&amp;lt;/profiles.active&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;activation&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;activeByDefault&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/activeByDefault&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/activation&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>test&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profiles.active&amp;gt;&lt;/span>test&lt;span class="nt">&amp;lt;/profiles.active&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/profiles&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">server.port=8080
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.sql.init.mode=always
spring.datasource.url=jdbc:h2:~/dev;AUTO_SERVER=true
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在編譯project時&lt;/p>
&lt;p>使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">mvn clean package -Pdev
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>則可使用dev環境的properties來打包專案&lt;/p>
&lt;p>不需要再手動在application.properties中修改&lt;/p>
&lt;h1 id="配置multimodule-">配置MultiModule ☆☆☆☆☆&lt;/h1>
&lt;p>可參考至此Repository&lt;/p>
&lt;p>&lt;a href="https://github.com/Hoxton019030/SpringBoot-MultiModule-MVC-Structure/tree/main">https://github.com/Hoxton019030/SpringBoot-MultiModule-MVC-Structure/tree/main&lt;/a>&lt;/p>
&lt;p>在原有的專案中新增Module&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/eNMiOCn.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>根目錄的POM檔就會有相應的Module引入&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/m0vpb4Q.png"
loading="lazy"
alt="image-20230529183210234"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">...
&lt;span class="nt">&amp;lt;modules&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;module&amp;gt;&lt;/span>service&lt;span class="nt">&amp;lt;/module&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;module&amp;gt;&lt;/span>dao&lt;span class="nt">&amp;lt;/module&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;module&amp;gt;&lt;/span>controller&lt;span class="nt">&amp;lt;/module&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/modules&amp;gt;&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>而子模塊的POM檔會紀錄副模塊的資訊&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/uwqeM8W.png"
loading="lazy"
alt="image-20230529183352977"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">...
&lt;span class="nt">&amp;lt;parent&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.example&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>Maven_MultiModulePractice&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>0.0.1-SNAPSHOT&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/parent&amp;gt;&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果不特別設置的話，Parent的dependency會被child-module的project給繼承使用，所以例如Lombok這種東西就可以配置在parent module中，而gson這種東西，就可以專門配置在service-module中，避免POM檔無限制的增長&lt;/p>
&lt;h1 id="指定不同開發環境">指定不同開發環境&lt;/h1>
&lt;p>&lt;a href="https://github.com/Hoxton019030/SpringBoot-MultiModule-MVC-Structure">https://github.com/Hoxton019030/SpringBoot-MultiModule-MVC-Structure&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/sfieONT.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>在開發中，常常會需要不同的開發環境，比如說本地開發時，可能會連接本地的Database，當上線到雲端後，可能會需要連接雲端的VM，於是就可以在POM裡面去指定不同的環境、不同的情況、不同的作業系統會執行不同的application.properties，相關的配置如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;project&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span>
&lt;span class="na">xmlns:xsi=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;span class="na">xsi:schemaLocation=&lt;/span>&lt;span class="s">&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;modelVersion&amp;gt;&lt;/span>4.0.0&lt;span class="nt">&amp;lt;/modelVersion&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;parent&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>hoxton.multimodule&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>major&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0-SNAPSHOT&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/parent&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;build&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;resources&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;resource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;directory&amp;gt;&lt;/span>src/main/resources/resource-${env}&lt;span class="nt">&amp;lt;/directory&amp;gt;&lt;/span> &lt;span class="c">&amp;lt;!-- 這邊的env對應到(1)--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/resource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/resources&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/build&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profiles&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>dev&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;env&amp;gt;&lt;/span>dev&lt;span class="nt">&amp;lt;/env&amp;gt;&lt;/span> &lt;span class="c">&amp;lt;!--(1)--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>local&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;env&amp;gt;&lt;/span>local&lt;span class="nt">&amp;lt;/env&amp;gt;&lt;/span> &lt;span class="c">&amp;lt;!--(1)--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>prod&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;env&amp;gt;&lt;/span>prod&lt;span class="nt">&amp;lt;/env&amp;gt;&lt;/span> &lt;span class="c">&amp;lt;!--(1)--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;activation&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--這邊還有更多設定可以設定，比如說指定JDK版本、OS等等，但我現在懶得研究了--&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;activeByDefault&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/activeByDefault&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/activation&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/profile&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/profiles&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>application&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;maven.compiler.source&amp;gt;&lt;/span>11&lt;span class="nt">&amp;lt;/maven.compiler.source&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;maven.compiler.target&amp;gt;&lt;/span>11&lt;span class="nt">&amp;lt;/maven.compiler.target&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span>UTF-8&lt;span class="nt">&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>hoxton.multimodule&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>controller&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0-SNAPSHOT&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/project&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接著就可以用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mvn clean package -Pdev
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mvn clean package -Pprod
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mvn clean package -Plocal
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來打包成不同的jar了&lt;/p></description></item><item><title>H2Database之配置檔紀錄</title><link>https://hoxtonhsu.com/p/h2database%E4%B9%8B%E9%85%8D%E7%BD%AE%E6%AA%94%E7%B4%80%E9%8C%84/</link><pubDate>Sat, 06 May 2023 00:13:33 +0800</pubDate><guid>https://hoxtonhsu.com/p/h2database%E4%B9%8B%E9%85%8D%E7%BD%AE%E6%AA%94%E7%B4%80%E9%8C%84/</guid><description>&lt;img src="https://i.imgur.com/xYmsInY.png" alt="Featured image of post H2Database之配置檔紀錄" />&lt;p>依賴如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml"> &lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.h2database&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>h2&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;scope&amp;gt;&lt;/span>runtime&lt;span class="nt">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">server.port=8080
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.sql.init.mode=always
spring.datasource.url=jdbc:h2:~/dev;AUTO_SERVER=true
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spring&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">console&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/h2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">sql&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">init&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">datasource&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">jdbc:h2:~/test;AUTO_SERVER=true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># ??????C/user/userName?????&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">driver-class-name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">org.h2.Driver&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#??driver&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">sa&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">sa&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">jpa&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">database-platform&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">org.hibernate.dialect.H2Dialect&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hibernate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ddl-auto&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">update&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>在IntelliJ設定環境變數，並讓Application.properties讀取</title><link>https://hoxtonhsu.com/p/%E5%9C%A8intellij%E8%A8%AD%E5%AE%9A%E7%92%B0%E5%A2%83%E8%AE%8A%E6%95%B8%E4%B8%A6%E8%AE%93application.properties%E8%AE%80%E5%8F%96/</link><pubDate>Sat, 06 May 2023 00:07:44 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%9C%A8intellij%E8%A8%AD%E5%AE%9A%E7%92%B0%E5%A2%83%E8%AE%8A%E6%95%B8%E4%B8%A6%E8%AE%93application.properties%E8%AE%80%E5%8F%96/</guid><description>&lt;img src="https://i.imgur.com/lRrDIvY.png" alt="Featured image of post 在IntelliJ設定環境變數，並讓Application.properties讀取" />&lt;h1 id="設定環境變數">設定環境變數&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/tmeUJwW.png"
loading="lazy"
alt="image-20230506000906709"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/RwbyefI.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>可以在此配置環境變數&lt;/p>
&lt;p>格式如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nv">username&lt;/span>&lt;span class="o">=&lt;/span>sa&lt;span class="p">;&lt;/span>&lt;span class="nv">password&lt;/span>&lt;span class="o">=&lt;/span>sa
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="applicationproperties之設置">Application.properties之設置&lt;/h1>
&lt;p>使用${username}來獲取環境變數&lt;/p>
&lt;p>如下&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/8QE1k4Q.png"
loading="lazy"
alt="image-20230506001229397"
>&lt;/p>
&lt;p>即可在專案中配置環境變數，並讓配置檔讀取&lt;/p></description></item><item><title>MacOS如何終止port,process</title><link>https://hoxtonhsu.com/p/macos%E5%A6%82%E4%BD%95%E7%B5%82%E6%AD%A2portprocess/</link><pubDate>Wed, 03 May 2023 16:25:22 +0800</pubDate><guid>https://hoxtonhsu.com/p/macos%E5%A6%82%E4%BD%95%E7%B5%82%E6%AD%A2portprocess/</guid><description>&lt;img src="https://i.imgur.com/m3Lr6uG.png" alt="Featured image of post MacOS如何終止port,process" />&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo lsof -i:8080
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然後找到它的PID&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/xMEP2Qf.png"
loading="lazy"
alt="image-20230530162755091"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">kill&lt;/span> &lt;span class="m">31128&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就可以了&lt;/p></description></item><item><title>Git筆記</title><link>https://hoxtonhsu.com/p/git%E7%AD%86%E8%A8%98/</link><pubDate>Wed, 03 May 2023 14:01:35 +0800</pubDate><guid>https://hoxtonhsu.com/p/git%E7%AD%86%E8%A8%98/</guid><description>&lt;img src="https://i.imgur.com/v0TYB05.png" alt="Featured image of post Git筆記" />&lt;ol>
&lt;li>拆掉上次Commit&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git reset HEAD^
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Dcard後端技術分享－純紀錄</title><link>https://hoxtonhsu.com/p/dcard%E5%BE%8C%E7%AB%AF%E6%8A%80%E8%A1%93%E5%88%86%E4%BA%AB%E7%B4%94%E7%B4%80%E9%8C%84/</link><pubDate>Mon, 01 May 2023 11:45:37 +0800</pubDate><guid>https://hoxtonhsu.com/p/dcard%E5%BE%8C%E7%AB%AF%E6%8A%80%E8%A1%93%E5%88%86%E4%BA%AB%E7%B4%94%E7%B4%80%E9%8C%84/</guid><description>&lt;img src="https://i.imgur.com/dqGgQLi.png" alt="Featured image of post Dcard後端技術分享－純紀錄" />&lt;p>&lt;a class="link" href="https://www.facebook.com/100083606190924/videos/956290855544266/" target="_blank" rel="noopener"
>參考影片&lt;/a>&lt;/p>
&lt;h1 id="dcard如何進行cache">Dcard如何進行Cache&lt;/h1>
&lt;p>先Pass掉，&lt;/p>
&lt;h1 id="dcard-database之選擇與調整">Dcard DataBase之選擇與調整&lt;/h1>
&lt;p>資料儲存類型、資料儲存量、資料是被大量儲存還是被修改?&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/QJ4E3mP.png"
loading="lazy"
alt="image-20230501115209551"
>&lt;/p>
&lt;p>Dcard之RDB選擇-Postgres&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/VgBuBqx.png"
loading="lazy"
alt="image-20230501115417173"
>&lt;/p>
&lt;h1 id="monggodb">MongGODB&lt;/h1>
&lt;p>Dcard的通知、愛心，運用Mogodb的Sharding功能&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Oj1pch9.png"
loading="lazy"
alt="image-20230501115432077"
>&lt;/p>
&lt;p>REDIS&lt;/p>
&lt;p>用來儲存User的Token，或是會大量被使用的資料&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/HUTKcZY.png"
loading="lazy"
alt="image-20230501115527127"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/n3YIcVB.png"
loading="lazy"
alt="image-20230501115618188"
>&lt;/p>
&lt;p>Cache實戰學習-Serving Post List&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/NdKLYeq.png"
loading="lazy"
alt="image-20230501115711896"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/XRBqDlF.png"
loading="lazy"
alt="image-20230501115809911"
>&lt;/p>
&lt;p>除了最左邊的三張表以外，其他都是Materialize View，因為在實際取用文章時，學校、系所、性別相關的資訊、以及在哪一個看板，這樣的Materilize View在遇到Migration時就會遇到很大的問題，幾乎全部都要重寫&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/vkQGcAs.png"
loading="lazy"
alt="image-20230501120457833"
>&lt;/p>
&lt;p>使用Paging Service來替代Materlize View&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/eXJmJFC.png"
loading="lazy"
alt="image-20230501120529418"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/i57iFIu.png"
loading="lazy"
alt="image-20230501120634736"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/nJ1imOQ.png"
loading="lazy"
alt="image-20230501120803941"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/LEEOTVf.png"
loading="lazy"
alt="image-20230501120945776"
>&lt;/p>
&lt;p>Case Studies Handle Reaction&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/wN4KMf9.png"
loading="lazy"
alt="image-20230501121124867"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/xdihNRA.png"
loading="lazy"
alt="image-20230501121509116"
>&lt;/p>
&lt;p>將Reaction的服務抽離出來，讓Loading降低&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/p5Ub0Rp.png"
loading="lazy"
alt="image-20230501121721679"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/mSZFYX9.png"
loading="lazy"
alt="image-20230501121727179"
>&lt;/p>
&lt;p>Q&amp;amp;A&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/ynM3ELl.png"
loading="lazy"
alt="image-20230501121828994"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/FISgzdZ.png"
loading="lazy"
alt="image-20230501121954733"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Q4bb8Jh.png"
loading="lazy"
alt="image-20230501122058594"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/5UV7A5j.png"
loading="lazy"
alt="image-20230501122159448"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/i49LVHy.png"
loading="lazy"
alt="image-20230501122255874"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/slqLIIo.png"
loading="lazy"
alt="image-20230501125330535"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/EYkshIO.png"
loading="lazy"
alt="image-20230501125444048"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/QGx8JFc.png"
loading="lazy"
alt="image-20230501131646925"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/X9Ie3gp.png"
loading="lazy"
alt="image-20230501131829190"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/j34LMzu.png"
loading="lazy"
alt="image-20230501132035733"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/eJ68wYs.png"
loading="lazy"
alt="image-20230501132208760"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/QZPgsfq.png"
loading="lazy"
alt="image-20230501132417740"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/cHMw8sL.png"
loading="lazy"
alt="image-20230501132745783"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/yku6sVb.png"
loading="lazy"
alt="image-20230501133133486"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/opDDQDd.png"
loading="lazy"
alt="image-20230501133359357"
>&lt;/p></description></item><item><title>結合Lombok寫出更整潔的程式碼</title><link>https://hoxtonhsu.com/p/%E7%B5%90%E5%90%88lombok%E5%AF%AB%E5%87%BA%E6%9B%B4%E6%95%B4%E6%BD%94%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC/</link><pubDate>Sun, 30 Apr 2023 02:39:36 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E7%B5%90%E5%90%88lombok%E5%AF%AB%E5%87%BA%E6%9B%B4%E6%95%B4%E6%BD%94%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC/</guid><description>&lt;img src="https://i.imgur.com/1OBx1AG.png" alt="Featured image of post 結合Lombok寫出更整潔的程式碼" />&lt;p>SpringBoot的Bean有三種注入方式&lt;/p>
&lt;ol>
&lt;li>@Autowired&lt;/li>
&lt;li>Constructor Injection&lt;/li>
&lt;li>Setting Injection&lt;/li>
&lt;/ol>
&lt;p>而官方推薦的是第二種的建構子注入，而Lombok有個註解叫做@RequiredArgsConstructor，它能夠產生一個只有final field的建構子&lt;/p>
&lt;p>就像這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/eeL3wWl.png"
loading="lazy"
alt="image-20230430025235556"
>&lt;/p>
&lt;p>23行的@RequiredArgsConstructor，會創建MemberController底下的final field，也就是這樣&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="nf">MemberController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MemberService&lt;/span> &lt;span class="n">memberService&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">memberService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">memberService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣一來我們的Service層跟Controller層就會更簡潔，當新的依賴進入後，不需要再重新寫一個建構子，只要將其宣告成final後，Lombok就會幫我們創建了&lt;/p></description></item><item><title>Spring中的Clean Architecture</title><link>https://hoxtonhsu.com/p/spring%E4%B8%AD%E7%9A%84clean-architecture/</link><pubDate>Tue, 25 Apr 2023 10:24:57 +0800</pubDate><guid>https://hoxtonhsu.com/p/spring%E4%B8%AD%E7%9A%84clean-architecture/</guid><description>&lt;img src="https://i.imgur.com/wlAKij1.jpg" alt="Featured image of post Spring中的Clean Architecture" />&lt;p>參考影片：&lt;a class="link" href="https://www.youtube.com/watch?v=cPH5AiqLQTo&amp;amp;ab_channel=SpringI%2FO" target="_blank" rel="noopener"
>Clean Architecture with Spring by Tom Hombergs @ Spring I/O 2019&lt;/a>&lt;/p>
&lt;h1 id="架構的目標">架構的目標&lt;/h1>
&lt;ul>
&lt;li>Facilitate Development&lt;/li>
&lt;li>Facilitate Deployment&lt;/li>
&lt;li>Facilitatte maintenance&lt;/li>
&lt;li>keep software soft&lt;/li>
&lt;li>keep frameworks of arm&amp;rsquo;s length&lt;/li>
&lt;li>keep options open&lt;/li>
&lt;/ul>
&lt;h1 id="架構的終極目標">架構的終極目標&lt;/h1>
&lt;p>&lt;strong>The Goal of software Achitecture is to minimize the lifetime cost of the software&lt;/strong>&lt;/p>
&lt;h1 id="分層式layers架構有什麼問題">分層式(Layers)架構有什麼問題？&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/nzk6jyB.png"
loading="lazy"
alt="image-20230425103609358"
>&lt;/p>
&lt;h2 id="分層架構是一種可靠的架構模式但是如果沒有額外的限制它們容易出現設計缺陷">分層架構是一種可靠的架構模式！但是如果沒有額外的限制，它們容易出現設計缺陷。&lt;/h2>
&lt;p>根據講者的經驗，我們有很多的架構是所謂的資料庫驅動設計(Database Driven design)&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/KauKKyu.png"
loading="lazy"
alt="image-20230425104040987"
>&lt;/p>
&lt;p>在我們的Domain Layer，我們有Service Layer、Persistence Layer，裡面存在著我們的Entity以及JPA相關的一些資訊&lt;/p>
&lt;h2 id="模糊的界線blurred-boundaries">模糊的界線(Blurred Boundaries)&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/iBJD4wf.png"
loading="lazy"
alt="image-20230425104746565"
>&lt;/p>
&lt;p>另一個關於Layer的議題是，我們通常會有一個工具類(utili)來封裝我們常用的一些函式庫，這些東西會在各層之間流竄，這樣會使得各層之間的關係越發模糊。&lt;/p>
&lt;h2 id="難以測試">難以測試&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/1AKqyHF.png"
loading="lazy"
alt="image-20230425105152281"
>&lt;/p>
&lt;p>需要Mock很多東西，比如說Service、Repository。&lt;/p>
&lt;h2 id="許多功能被隱藏起來了">許多功能被隱藏起來了&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/PiS69fE.png"
loading="lazy"
alt="image-20230425105419213"
>&lt;/p>
&lt;p>假使我們有一個Order的系統，那我們所有對Order的CRUD都會集中在OrderService中，一旦這個方法有很多個，那麼很多方法(Functionality)就會被埋沒起來&lt;/p>
&lt;p>那麼如何解決這些問題呢 ？&lt;/p>
&lt;h1 id="do-circles-instead">Do Circles Instead&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/ksOQDW6.png"
loading="lazy"
alt="image-20230425110140878"
>&lt;/p>
&lt;h2 id="再議solid設計模式">再議SOLID設計模式&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/tpPjn1f.png"
loading="lazy"
alt="image-20230425110249239"
>&lt;/p>
&lt;h3 id="dependency-inverision-principle">Dependency Inverision Principle&lt;/h3>
&lt;p>依賴反轉原則&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/QH9PAgx.png"
loading="lazy"
alt="image-20230425110509871"
>&lt;/p>
&lt;p>(左圖為Database Driven Development)&lt;/p>
&lt;p>&lt;a class="link" href="https://youtu.be/cPH5AiqLQTo?t=966" target="_blank" rel="noopener"
>影片戳記時間&lt;/a>&lt;/p>
&lt;p>若要執行依賴反轉原則，那麼Domain層不應該依賴Persistence層，而是反轉過來，(Use Case等同於Service層)，&lt;/p>
&lt;p>這樣做的好處是什麼？我們可以選擇任何Code的依賴方向&lt;/p>
&lt;h3 id="single-responsibility-priniciple">Single Responsibility Priniciple&lt;/h3>
&lt;p>&lt;del>一個Class或一個Module只做一件事情&lt;/del>&lt;/p>
&lt;p>一個Class或一個Module只能有一個原因被修改(Change)&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/UvVdypj.png"
loading="lazy"
alt="image-20230425115237259"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/zQdGYnL.png"
loading="lazy"
alt="image-20230425115334794"
>&lt;/p>
&lt;p>分層式架構下，若Persistence修改了，那麼Business層有很大機率也會連動修改，但在Clean Architecture的架構下，Persistence由於不處於最核心的部分(Entity)，因此不需要一起改動&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/PDigadQ.png"
loading="lazy"
alt="image-20230425115740567"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/2PYznPe.png"
loading="lazy"
alt="image-20230425132945444"
>&lt;/p>
&lt;p>假使我們有一個Order Service，其中有三個user Roles，當其中一個User Roles改變後，我們就要去改動我們的Service&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/qHqvWX2.png"
loading="lazy"
alt="image-20230425133140173"
>&lt;/p>
&lt;p>但當我們把Service分割成不同的Use Cases，每一個Cases指對應一個Use Roles，那麼&lt;strong>這個Use Case也只會有一個原因被修改&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>Service應該被切割成許多不同的Use Case(First-Class Citizens)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;span style='color:yellow;font-size:32px'>Only a Domain-Centric Architecture Allows Domian-Driven Design&lt;/span>&lt;/p>
&lt;h1 id="clean-architecture">Clean Architecture&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/RMCKijJ.png"
loading="lazy"
alt="image-20230425114053702"
>&lt;/p>
&lt;h1 id="hexagons">Hexagons&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/rhnsRLC.png"
loading="lazy"
alt="image-20230425133410510"
>&lt;/p>
&lt;p>&lt;span style='color:yellow;font-size:16px'>六角架構是Clean Architecture的具現化&lt;/span>&lt;/p>
&lt;ul>
&lt;li>Input Port：對外暴露的API&lt;/li>
&lt;/ul>
&lt;p>use case class implements an input port, the input port is just a Java interface, then the use case class modifies the domain model&lt;/p>
&lt;h1 id="問題時間這個應用程式在做什麼">問題時間：這個應用程式在做什麼？&lt;/h1>
&lt;p>分層架構下，只透過Class名稱無法獲得有用的訊息&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/FCi8jd0.png"
loading="lazy"
alt="image-20230425134701498"
>&lt;/p>
&lt;p>六角架構中，將Service拆分成不同的Use Case，所有的職責會更加一目了然&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/E6ykzXs.png"
loading="lazy"
alt="image-20230425134819273"
>&lt;/p>
&lt;h1 id="實作時間">實作時間&lt;/h1>
&lt;p>Code連結：&lt;a class="link" href="https://github.com/thombergs" target="_blank" rel="noopener"
>thombergs&lt;/a>/&lt;strong>&lt;a class="link" href="https://github.com/thombergs/buckpal" target="_blank" rel="noopener"
>buckpal&lt;/a>&lt;/strong>&lt;/p>
&lt;p>&lt;span style='color:yellow;font-size:16px'>&lt;/span>&lt;/p>
&lt;p>&lt;span style='color:yellow;font-size:16px'>&lt;/span>&lt;/p>
&lt;p>&lt;span style='color:yellow;font-size:16px'>&lt;/span>&lt;/p>
&lt;p>&lt;span style='color:yellow;font-size:16px'>&lt;/span>&lt;/p>
&lt;h1 id="summary">Summary&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/pyLQga0.png"
loading="lazy"
alt="image-20230425143339079"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Fx6tMgj.png"
loading="lazy"
alt="image-20230425143423176"
>&lt;/p>
&lt;p>如何強迫我們使用這個架構&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/y1MCBRv.png"
loading="lazy"
alt="image-20230425143656605"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/LwiBx8b.png"
loading="lazy"
alt="image-20230425143713734"
>&lt;/p></description></item><item><title>Cherry Pick的一點研究</title><link>https://hoxtonhsu.com/p/cherry-pick%E7%9A%84%E4%B8%80%E9%BB%9E%E7%A0%94%E7%A9%B6/</link><pubDate>Sun, 16 Apr 2023 17:30:28 +0800</pubDate><guid>https://hoxtonhsu.com/p/cherry-pick%E7%9A%84%E4%B8%80%E9%BB%9E%E7%A0%94%E7%A9%B6/</guid><description>&lt;img src="https://i.imgur.com/n1qX6TQ.gif" alt="Featured image of post Cherry Pick的一點研究" />&lt;p>利用一個下午，把對Cherry Pick的一些問題整理成一篇文章，並且這個指令常常與Rebase, Merge兩者來對比，目前感覺如下&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>指令&lt;/th>
&lt;th>merge&lt;/th>
&lt;th>rebase&lt;/th>
&lt;th>cherry pick&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>說明&lt;/td>
&lt;td>將一條分支合進另一條分支中。不會破壞提交歷史的完整性，但缺點是合併後的提交歷史較為混亂，有時可能會產生冗長的提交歷史。&lt;/td>
&lt;td>將當前分支與目標分支結合，並以目標分支為底(base)重新出發。將一個分支中的提交歷史應用到另一個分支上，使得目標分支中的提交歷史變得更加緊湊和簡潔&lt;/td>
&lt;td>命令可以從一個分支中選擇單個提交，並將其應用到另一個分支上，通常用於需要特定提交的情況。只想要某個分支的某些commit，不希望把整個分支搬過來&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>指令&lt;/td>
&lt;td>git merge salve&lt;/td>
&lt;td>git rebase main&lt;/td>
&lt;td>git cherry-pick c4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>圖示&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/4HirU62.gif"
loading="lazy"
alt="demo"
>&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/ZLDp19Y.gif"
loading="lazy"
alt="demo"
>&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/hYLq4Fc.gif"
loading="lazy"
alt="demo"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>優點&lt;/td>
&lt;td>簡單易操作，不破壞commit歷史&lt;/td>
&lt;td>不產生多餘commit 與分支線&lt;/td>
&lt;td>不會更動到Commit的歷史順序&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>缺點&lt;/td>
&lt;td>會產生額外的分支合成線&lt;/td>
&lt;td>不可以在共用分支上使用，否則將打斷commit順序，破壞commit完整性&lt;/td>
&lt;td>若cherry pick commit過多，易產生重複的commit紀錄&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>應用場景&lt;/td>
&lt;td>整合分支&lt;/td>
&lt;td>用以取得別的分支整個進度&lt;/td>
&lt;td>用以取得別的分支的個別進度&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="預覽">預覽&lt;/h1>
&lt;p>這是一個SpringBoot專案，Main分支目前長這樣，並且還有兩個協作者，分別是Hoxton跟Dallas&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/fU4UxrO.png"
loading="lazy"
alt="image-20230416174208891"
>&lt;/p>
&lt;p>SourceTree如下&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/dFK8O3Z.png"
loading="lazy"
alt="image-20230416174431279"
>&lt;/p>
&lt;p>Hoxton這個有四個Commit&lt;/p>
&lt;p>依序如下&lt;/p>
&lt;ol>
&lt;li>創建MemberDao　f198&lt;/li>
&lt;li>創建MemberService 185a&lt;/li>
&lt;li>創建MemberController 310a&lt;/li>
&lt;li>為MemberController新增一個方法 99b2&lt;/li>
&lt;li>刪除MemberController fd8b&lt;/li>
&lt;/ol>
&lt;p>Dallas這個分支有兩個Commit&lt;/p>
&lt;ol>
&lt;li>創建LoginContorller 7eb2&lt;/li>
&lt;li>為LogingController新增一個方法 e92a&lt;/li>
&lt;/ol>
&lt;p>Main這個分支有一個Commit&lt;/p>
&lt;ol>
&lt;li>創建README fce6&lt;/li>
&lt;/ol>
&lt;p>接下來在不同情境下，使用Cherry Pick，看看會有什麼結果與問題&lt;/p>
&lt;h1 id="實際演練">實際演練&lt;/h1>
&lt;h2 id="main需要hoxton的進度其中有包含main上未有的檔案99b2">Main需要hoxton的進度，其中有包含Main上未有的檔案(99b2)&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/FiXE5kh.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>結果：&lt;/p>
&lt;p>發生衝突，因Main上沒有MemberController。&lt;span style='color:yellow'>雖然最新的Commit 只有對MemberController更新，沒有創建MemberController的部分，但因為要Cherry Pick的關係，所以還是會把MemberController創建起來，並且其內容是最新的內容&lt;/span>至於Service、Dao則不會帶過來，因為那是屬於別的Commit的，因此最終是長這樣，&lt;span style='color:lightgreen'>綠色部分是新增的部分&lt;/span>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/OFdw53w.png"
loading="lazy"
alt="image-20230417001936376"
>&lt;/p>
&lt;blockquote>
&lt;p>hoxton-310a 創建Member Controller&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://i.imgur.com/lbKRTTw.png"
loading="lazy"
alt="image-20230416180321809"
>&lt;/p>
&lt;blockquote>
&lt;p>hoxton-99b2 在Member Controller新增方法&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://i.imgur.com/qAWo1AT.png"
loading="lazy"
alt="image-20230416180301204"
>&lt;/p>
&lt;h2 id="main只需要hoxton的幾個進度其中的commit並非連續310a-f198">Main只需要Hoxton的幾個進度，其中的commit並非連續(310a, f198)&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/tEj7v8u.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>結果：&lt;/p>
&lt;p>將MemberController與Dao創建進來，其中不包含Dao，因為Cherry-pick的部分不包含，注意到的是，因為Cherry pick時我們的指令是這樣&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git cherry-pick 310a f198
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;span style='color:yellow'>因此Commit 的順序調換了，變成先Controller在Dao&lt;/span>&lt;/p>
&lt;p>檔案長這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/zFZG77L.png"
loading="lazy"
alt="image-20230417002958197"
>&lt;/p>
&lt;h2 id="main只需要hoxton的幾個進度其中的commit並非連續f198-310a">Main只需要Hoxton的幾個進度，其中的commit並非連續(f198, 310a)&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/CAHlXtn.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>結果：&lt;/p>
&lt;p>將MemberController與Dao創建進來，其中不包含Service，因為Cherry-pick的部分不包含，注意到的是，因為我們Cherry Pick的指令如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git cherry-pick f198 310a
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;span style='color:yellow'>因此Commit 順序與hoxton上分支的順序一樣&lt;/span>&lt;/p>
&lt;p>檔案長這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/XAk8wDk.png"
loading="lazy"
alt="image-20230417003029528"
>&lt;/p>
&lt;h2 id="cherry-pick一個只有刪除檔案的commit是否能成功">Cherry-pick一個只有刪除檔案的commit，是否能成功&lt;/h2>
&lt;p>fd8b這個Commit是將MemberController刪掉，在Main上cherry Pick後會發生什麼事情呢?&lt;/p>
&lt;p>結果&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/8eCzAem.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>結果：&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/dshKQgP.png"
loading="lazy"
alt="image-20230417003832083"
>&lt;/p>
&lt;p>顯示&lt;/p>
&lt;blockquote>
&lt;p>Bad revision&lt;/p>
&lt;/blockquote>
&lt;p>直接不讓cherry-pick，&lt;span style='color:yellow'>我猜多半是因為這個Commit只有包含刪除，因此沒辦法pick&lt;/span>&lt;/p>
&lt;h2 id="cherry-pick一個範圍的commit最終的結果呈現如何">Cherry-pick一個範圍的commit，最終的結果呈現如何?&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> git cherry-pick f198 .. fd8b
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/odBYOhx.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>結果：&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Bjhzwru.png"
loading="lazy"
alt="image-20230416184130708"
>&lt;/p>
&lt;h2 id="假設現在dallas需要hoxton的commit它合進去main後會長什麼樣子呢">假設現在Dallas需要Hoxton的Commit，它合進去Main後會長什麼樣子呢?&lt;/h2>
&lt;p>如果兩邊合進Main之後會長怎麼樣呢？會不會兩邊都有重複的Commit導致畫面很亂呢?&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/jTslNLf.png"
loading="lazy"
alt="image-20230416190945774"
>&lt;/p>
&lt;p>結果：&lt;/p>
&lt;p>會，合進去後會有許多重複的commit，因為Cherry pick過去後，雖然看起來一樣，但它們的Hash Code已經有所不同，因此會有重複的情形發生&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/3K4v8s3.png"
loading="lazy"
alt="image-20230416191527528"
>&lt;/p></description></item><item><title>MyBatis學習筆記</title><link>https://hoxtonhsu.com/p/mybatis%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link><pubDate>Sun, 16 Apr 2023 16:01:05 +0800</pubDate><guid>https://hoxtonhsu.com/p/mybatis%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid><description>&lt;img src="https://i.imgur.com/wG62XWP.jpg" alt="Featured image of post MyBatis學習筆記" />&lt;p>本文參考至&lt;a class="link" href="https://www.bilibili.com/video/BV1Z3411E7QD/?spm_id_from=333.999.0.0&amp;amp;vd_source=422eafa6570139128e44a83238959fa0" target="_blank" rel="noopener"
>MyBatis入門教學&lt;/a>&lt;/p>
&lt;p>以及&lt;a class="link" href="https://mybatis.org/mybatis-3/zh/getting-started.html" target="_blank" rel="noopener"
>my-batis官方文件&lt;/a>&lt;/p>
&lt;h1 id="新增maven依賴">新增Maven依賴&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.mybatis&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>mybatis&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>3.5.13&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="xml配置內容">XML配置內容&lt;/h1>
&lt;blockquote>
&lt;p>此為預設的模板&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span>
&lt;span class="cp">&amp;lt;!DOCTYPE configuration
&lt;/span>&lt;span class="cp"> PUBLIC &amp;#34;-//mybatis.org//DTD Config 3.0//EN&amp;#34;
&lt;/span>&lt;span class="cp"> &amp;#34;https://mybatis.org/dtd/mybatis-3-config.dtd&amp;#34;&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;environments&lt;/span> &lt;span class="na">default=&lt;/span>&lt;span class="s">&amp;#34;development&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;environment&lt;/span> &lt;span class="na">id=&lt;/span>&lt;span class="s">&amp;#34;development&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;transactionManager&lt;/span> &lt;span class="na">type=&lt;/span>&lt;span class="s">&amp;#34;JDBC&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dataSource&lt;/span> &lt;span class="na">type=&lt;/span>&lt;span class="s">&amp;#34;POOLED&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;property&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;driver&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;${driver}&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;property&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;url&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;${url}&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;property&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;${username}&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;property&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;${password}&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dataSource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/environment&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/environments&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;mappers&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;mapper&lt;/span> &lt;span class="na">resource=&lt;/span>&lt;span class="s">&amp;#34;org/mybatis/example/BlogMapper.xml&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/mappers&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>檔案大概配置成這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/BYHYWUk.png"
loading="lazy"
alt="image-20230417211302504"
>&lt;/p>
&lt;h2 id="xml具體配置內容">XML具體配置內容&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span>
&lt;span class="cp">&amp;lt;!DOCTYPE configuration
&lt;/span>&lt;span class="cp"> PUBLIC &amp;#34;-//mybatis.org//DTD Config 3.0//EN&amp;#34;
&lt;/span>&lt;span class="cp"> &amp;#34;https://mybatis.org/dtd/mybatis-3-config.dtd&amp;#34;&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;environments&lt;/span> &lt;span class="na">default=&lt;/span>&lt;span class="s">&amp;#34;development&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;environment&lt;/span> &lt;span class="na">id=&lt;/span>&lt;span class="s">&amp;#34;development&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;transactionManager&lt;/span> &lt;span class="na">type=&lt;/span>&lt;span class="s">&amp;#34;JDBC&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;dataSource&lt;/span> &lt;span class="na">type=&lt;/span>&lt;span class="s">&amp;#34;POOLED&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;property&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;driver&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;org.h2.Driver&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;property&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;url&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;jdbc:h2:~/cherry;AUTO_SERVER=true&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;property&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;sa&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;property&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;sa&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/dataSource&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/environment&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/environments&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;mappers&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;mapper&lt;/span> &lt;span class="na">resource=&lt;/span>&lt;span class="s">&amp;#34;org/example/BlogMapper.xml&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/mappers&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置BlogMapper.xml 於專案中，此Xml用以儲存SQL語句&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span>
&lt;span class="cp">&amp;lt;!DOCTYPE mapper
&lt;/span>&lt;span class="cp"> PUBLIC &amp;#34;-//mybatis.org//DTD Mapper 3.0//EN&amp;#34;
&lt;/span>&lt;span class="cp"> &amp;#34;https://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;#34;&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;mapper&lt;/span> &lt;span class="na">namespace=&lt;/span>&lt;span class="s">&amp;#34;BlogMapper&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;select&lt;/span> &lt;span class="na">id=&lt;/span>&lt;span class="s">&amp;#34;selectBlog&amp;#34;&lt;/span> &lt;span class="na">resultType=&lt;/span>&lt;span class="s">&amp;#34;Blog&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
select * from Blog where id = #{id}
&lt;span class="nt">&amp;lt;/select&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/mapper&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>SpringBoot啟動時，出現Missing table hibernate sequence之解決方法</title><link>https://hoxtonhsu.com/p/springboot%E5%95%9F%E5%8B%95%E6%99%82%E5%87%BA%E7%8F%BEmissing-table-hibernate-sequence%E4%B9%8B%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95/</link><pubDate>Sun, 16 Apr 2023 03:55:44 +0800</pubDate><guid>https://hoxtonhsu.com/p/springboot%E5%95%9F%E5%8B%95%E6%99%82%E5%87%BA%E7%8F%BEmissing-table-hibernate-sequence%E4%B9%8B%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95/</guid><description>&lt;img src="https://i.imgur.com/kdTSaSC.png" alt="Featured image of post SpringBoot啟動時，出現Missing table hibernate sequence之解決方法" />&lt;h1 id="導因">導因&lt;/h1>
&lt;p>通常是因為在JPA的地方使用了&lt;code>@GeneratedValue(strategy = GenerationType.AUTO)&lt;/code>這個註解，這個註解會由資料庫自動(AUTO)去配置，如果資料庫有就沒問題，但有些資料庫可能會沒有，比如說我用的資料庫是PostgresSQL就會出現這個問題&lt;/p>
&lt;p>解決方式&lt;/p>
&lt;p>將@GeneratedValue(strategy = GenerationType.AUTO)更改，更改為@GeneratedValue(strategy = GenerationType.IDENTITY)即可&lt;/p></description></item><item><title>手把手教你寫SprintBoot框架</title><link>https://hoxtonhsu.com/p/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AF%ABsprintboot%E6%A1%86%E6%9E%B6/</link><pubDate>Sat, 01 Apr 2023 19:40:36 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%AF%ABsprintboot%E6%A1%86%E6%9E%B6/</guid><description>&lt;img src="https://i.imgur.com/1G2G1o4.png" alt="Featured image of post 手把手教你寫SprintBoot框架" />&lt;h1 id="前言">前言&lt;/h1>
&lt;p>連假實在有點無聊，打算來手寫一個SprintBoot專案，來加深自己對這種IoC框架的理解，我打算把這個框架叫做&lt;strong>Winter&lt;/strong>，象徵我每況愈下的人生，唉&lt;/p>
&lt;h1 id="sprintboot-單例池">SprintBoot 單例池&lt;/h1>
&lt;p>本章所用到的程式碼存放在這&lt;/p>
&lt;p>&lt;a href="https://github.com/Hoxton019030/Winter/tree/bean-scan-and-beandefinition">https://github.com/Hoxton019030/Winter/tree/bean-scan-and-beandefinition&lt;/a>&lt;/p>
&lt;h2 id="一切開始的地方main">一切開始的地方，Main&lt;/h2>
&lt;p>啟動類的寫法如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">WinterApplicationContext&lt;/span> &lt;span class="n">applicationContext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">WinterApplicationContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AppConfig&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這邊看到兩個陌生的Class，&lt;strong>WinterApplicationContext&lt;/strong>，以及&lt;strong>AppConfig&lt;/strong>。先講AppConfig是什麼，它是Winter的配置類，我們會在這邊去配置我們Winter Bean的位置在哪邊，所以我們要加上@ComponentScan這個註解，讓我們的Winter框架知道它要去什麼package底下找到Bean。這邊我們就先創這個Class就好，目前先不會寫到它。&lt;/p>
&lt;h2 id="appconfig">AppConfig&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * Winter的配置文件
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="nd">@ComponentScan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;org.hoxton.service&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">AppConfig&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="componentscan">@ComponentScan&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Retention&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RetentionPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RUNTIME&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TYPE&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nd">@interface&lt;/span> &lt;span class="n">ComponentScan&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="nf">value&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>用來示意我們的Winter框架，要去哪邊找到我們的Bean，我們的Bean都會寫在org.hoxton.service這個路徑下面。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/nSgswbb.png"
loading="lazy"
alt="image-20230401195655052"
>&lt;/p>
&lt;h2 id="component">@Component&lt;/h2>
&lt;p>這個大家熟的吧，將當前類變成一個Spring Bean的註解&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Retention&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RetentionPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RUNTIME&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TYPE&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nd">@interface&lt;/span> &lt;span class="n">Component&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="nf">value&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="scope">@Scope&lt;/h2>
&lt;p>標示當前類所要創建的Bean是一個單例還是一個Prototype的Bean&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Retention&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">RetentionPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">RUNTIME&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Target&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ElementType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">TYPE&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nd">@interface&lt;/span> &lt;span class="n">Scope&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="nf">value&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="userservice">UserService&lt;/h2>
&lt;p>用來假設MVC架構中的Service層&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Component&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;userService&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nd">@Scope&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;singleton&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="winterapplicationcontext">WinterApplicationContext&lt;/h2>
&lt;p>這個類就是SpringBoot框架中的容器類，我們接下來要來手寫一個容器類，首先先創這個類出來，並且它要吃一個Class參數作為Constructor&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">WinterApplicationContext&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Class&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">WinterApplicationContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">configClass&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">configClass&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下來我們寫一個方法，叫做Scan，這個Scan方法會去得到@ComponentScan這個註解的值，取得要掃描的Package路徑，取得路徑之後，會去掃描路徑底下有哪些類有被@Component這個註解所修飾，並且會去找尋@Scope這個註解，得知哪些Bean是Singleton，哪些Bean是prototype，將這些資訊放入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">private&lt;/span> &lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">BeanDefinition&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">beanDefinitionMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這個ConcurrentHashMap中&lt;/p>
&lt;h2 id="步驟">步驟&lt;/h2>
&lt;ol>
&lt;li>從Config類中取得ComponentScan註解的值，其值即為路徑&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">private&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">scan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 從Config類中取得ComponetScan註解的值，其值即為路徑
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">ComponentScan&lt;/span> &lt;span class="n">componentScanAnnotation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">ComponentScan&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAnnotation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ComponentScan&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">componentScanAnnotation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/br>
&lt;ol start="2">
&lt;li>使用類加載，讀出Class檔案的資訊&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">private&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">scan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 從Config類中取得ComponentScan註解的值，其值即為路徑
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">ComponentScan&lt;/span> &lt;span class="n">componentScanAnnotation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">ComponentScan&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAnnotation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ComponentScan&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">componentScanAnnotation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">//掃描 org.hoxton.service
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 類加載器 (Class Loader)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// Java中有三種類加載器，以及對應的加載路徑
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// BootStrap ---&amp;gt; jre/lib
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// Ext ---&amp;gt; jre/ext/lib
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// App ---&amp;gt; classpath ---&amp;gt; &amp;#34;C:\Program Files\Java\jdk-11\bin\java.exe&amp;#34; &amp;#34;-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.2\lib\idea_rt.jar=5445:C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.2\bin&amp;#34; -Dfile.encoding=UTF-8 -classpath C:\Users\hoxton\Desktop\Winter\target\classes org.hoxton.Test 編譯器顯示的資訊
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/br>
&lt;p>&lt;img src="https://i.imgur.com/olz0WaZ.png"
loading="lazy"
alt="image-20230401202057765"
>&lt;/p>
&lt;ol start="3">
&lt;li>BeanDefinition&lt;/li>
&lt;/ol>
&lt;p>我們先來討論一個東西叫做BeanDefinition，這個類用來描述一個Bean的資訊，我們目前讓這個類盡量簡單一點，我們只需要紀錄一個Bean它的類型以及它的作用範圍&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">BeanDefinition&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * 當前Bean類型
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Class&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * 當前Bean作用範圍
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">BeanDefinition&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">BeanDefinition&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">clazz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">scope&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Class&lt;/span> &lt;span class="nf">getClazz&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setClazz&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">clazz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getScope&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setScope&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">scope&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>使用類加載器，依照@ComponentScan的值，去掃描底下的Bean，&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="kd">private&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">scan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ComponentScan&lt;/span> &lt;span class="n">componentScanAnnotation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">ComponentScan&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAnnotation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ComponentScan&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">componentScanAnnotation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="c1">//掃描路徑
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">//掃描 org.hoxton.service
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 類加載器 (Class Loader)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// Java中有三種類加載器，以及對應的加載路徑
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// BootStrap ---&amp;gt; jre/lib
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// Ext ---&amp;gt; jre/ext/lib
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// App ---&amp;gt; classpath ---&amp;gt; &amp;#34;C:\Program Files\Java\jdk-11\bin\java.exe&amp;#34; &amp;#34;-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.2\lib\idea_rt.jar=5445:C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.2\bin&amp;#34; -Dfile.encoding=UTF-8 -classpath C:\Users\za546\Desktop\Winter\target\classes org.hoxton.Test 編譯器顯示的資訊
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">ClassLoader&lt;/span> &lt;span class="n">classLoader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WinterApplicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getClassLoader&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="c1">//app加載器
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">URL&lt;/span> &lt;span class="n">resource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">classLoader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getResource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;org/hoxton/service&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//使用類加載，掃苗檔案下的.class檔
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">File&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">File&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFile&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isDirectory&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">File&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">listFiles&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">File&lt;/span> &lt;span class="n">f&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">files&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">fileName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAbsolutePath&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">fileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">endsWith&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;.class&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="c1">//若檔案以.class結尾即為.class檔，則進入流程判斷
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">className&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">substring&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">indexOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;org&amp;#34;&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="n">fileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">indexOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;.class&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="n">className&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">className&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">replace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;\\&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&lt;/span> &lt;span class="n">clazz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">clazz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">classLoader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">loadClass&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">className&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">ClassNotFoundException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isAnnotationPresent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="c1">//類上若有@Component註解，代表為一個Bean
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//表示這個類是個Bean
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// ...? Class -- &amp;gt; bean ?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 解析類，判斷當前Bean是單例Bean還是Prototype的Bean，生成BeanDefinition
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">Component&lt;/span> &lt;span class="n">componentAnnotation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDeclaredAnnotation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">beanName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">componentAnnotation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="c1">//取得@Component的值(bean名)
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">//BeanDefinition- Bean定義
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">BeanDefinition&lt;/span> &lt;span class="n">beanDefinition&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">BeanDefinition&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="c1">//取得一個BeanDefinition物件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setClazz&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isAnnotationPresent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Scope&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Scope&lt;/span> &lt;span class="n">scopeAnnotation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDeclaredAnnotation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Scope&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setScope&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">scopeAnnotation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setScope&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SINGLETON&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//沒加Scope註解，預設為單例
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="n">beanDefinitionMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanName&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">// 將beanDefinition放進ConcurrentHashMap中
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>我們先來稍微預覽一下整個Class完成後會長什麼樣子，讓大家更有一個概念&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">WinterApplicationContext&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">SINGLETON&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;singleton&amp;#34;&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Class&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * 一個單例池，存放Spring Bean
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">singletonPool&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * 存放所有Spring Bean的定義
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">BeanDefinition&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">beanDefinitionMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ConcurrentHashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * @param configClass Winter的配置文件
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">WinterApplicationContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">configClass&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">//解析配置類
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// ComponentScan註解解析 -&amp;gt; 掃描路徑 -&amp;gt; 掃描 ---&amp;gt; BeanDefinition ---&amp;gt; BeanDefinitionMap
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">scan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">configClass&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">beanName&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">beanDefinitionMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">keySet&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">BeanDefinition&lt;/span> &lt;span class="n">beanDefinition&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">beanDefinitionMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanName&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">//如果bean scope是單例，則放進單例池中
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getScope&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SINGLETON&lt;/span>&lt;span class="o">)){&lt;/span>
&lt;span class="n">Object&lt;/span> &lt;span class="n">bean&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">createBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">singletonPool&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanName&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="nf">createBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">BeanDefinition&lt;/span> &lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">Class&lt;/span> &lt;span class="n">clazz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getClazz&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Object&lt;/span> &lt;span class="n">instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDeclaredConstructor&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">newInstance&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">InstantiationException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">IllegalAccessException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">InvocationTargetException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">NoSuchMethodException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">scan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ComponentScan&lt;/span> &lt;span class="n">componentScanAnnotation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">ComponentScan&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAnnotation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ComponentScan&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">componentScanAnnotation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="c1">//掃描路徑
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">//掃描 org.hoxton.service
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 類加載器 (Class Loader)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// Java中有三種類加載器，以及對應的加載路徑
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// BootStrap ---&amp;gt; jre/lib
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// Ext ---&amp;gt; jre/ext/lib
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// App ---&amp;gt; classpath ---&amp;gt; &amp;#34;C:\Program Files\Java\jdk-11\bin\java.exe&amp;#34; &amp;#34;-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.2\lib\idea_rt.jar=5445:C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.2\bin&amp;#34; -Dfile.encoding=UTF-8 -classpath C:\Users\za546\Desktop\Winter\target\classes org.hoxton.Test 編譯器顯示的資訊
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">ClassLoader&lt;/span> &lt;span class="n">classLoader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WinterApplicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getClassLoader&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="c1">//app加載器
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">URL&lt;/span> &lt;span class="n">resource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">classLoader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getResource&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;org/hoxton/service&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//使用類加載，掃苗檔案下的.class檔
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">File&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">File&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getFile&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isDirectory&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">File&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">listFiles&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">File&lt;/span> &lt;span class="n">f&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">files&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">fileName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAbsolutePath&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">fileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">endsWith&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;.class&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">className&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">substring&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">indexOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;org&amp;#34;&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="n">fileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">indexOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;.class&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="n">className&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">className&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">replace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;\\&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&lt;/span> &lt;span class="n">clazz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">clazz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">classLoader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">loadClass&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">className&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">ClassNotFoundException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isAnnotationPresent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">//表示這個類是個Bean
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// ...? Class -- &amp;gt; bean ?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 解析類，判斷當前Bean是單例Bean還是Prototype的Bean，生成BeanDefinition
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">Component&lt;/span> &lt;span class="n">componentAnnotation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDeclaredAnnotation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">beanName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">componentAnnotation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">//BeanDefinition- Bean定義
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">BeanDefinition&lt;/span> &lt;span class="n">beanDefinition&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">BeanDefinition&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setClazz&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">clazz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">isAnnotationPresent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Scope&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Scope&lt;/span> &lt;span class="n">scopeAnnotation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDeclaredAnnotation&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Scope&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setScope&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">scopeAnnotation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setScope&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SINGLETON&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">beanDefinitionMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanName&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="nf">getBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">beanName&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">// 依照beanName去判斷是單例Bean還是Prototype Bean
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">beanDefinitionMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">containsKey&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanName&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">BeanDefinition&lt;/span> &lt;span class="n">beanDefinition&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">beanDefinitionMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanName&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getScope&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SINGLETON&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Object&lt;/span> &lt;span class="n">bean&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">singletonPool&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanName&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">//創建bean對象嗎?
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">bean&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">createBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">NullPointerException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;沒有這個Bean&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="6">
&lt;li>接下來我們繼續回到WinterApplicationContext這個Constructor，我們已經把我們Package底下的Bean掃描完，放進beanDefinitionMap中，那我們接下來要依照這個Map，創建SINGLETON的bean，接著把SINGLETON的Bean放進singletonPool中，這個singletonPool也就是Spring中的&lt;strong>單例池&lt;/strong>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="nf">WinterApplicationContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Class&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">configClass&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">configClass&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">//解析配置類
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// ComponentScan註解解析 -&amp;gt; 掃描路徑 -&amp;gt; 掃描 ---&amp;gt; BeanDefinition ---&amp;gt; BeanDefinitionMap
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">scan&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">configClass&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">beanName&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">beanDefinitionMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">keySet&lt;/span>&lt;span class="o">())&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="c1">//遍整個beanDefinitionMap，找出單例的Bean，放進singletonPool中
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">BeanDefinition&lt;/span> &lt;span class="n">beanDefinition&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">beanDefinitionMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanName&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">//如果bean scope是單例，則放進單例池中
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getScope&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SINGLETON&lt;/span>&lt;span class="o">)){&lt;/span>
&lt;span class="n">Object&lt;/span> &lt;span class="n">bean&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">createBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">singletonPool&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">beanName&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="7">
&lt;li>撰寫createBean方法會吃一個BeanDefinition為參數，這個方法會用BeanDefinition的Clazz創建一個Class，接著調用class底下的&lt;code>getDeclaredConstructor()&lt;/code>取得建構子，並用&lt;code>newInstance()&lt;/code>方法創造出一個那個bean的物件出來&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="kd">public&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="nf">createBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">BeanDefinition&lt;/span> &lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">Class&lt;/span> &lt;span class="n">clazz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">beanDefinition&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getClazz&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Object&lt;/span> &lt;span class="n">instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clazz&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDeclaredConstructor&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">newInstance&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">InstantiationException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">IllegalAccessException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">InvocationTargetException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">NoSuchMethodException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="8">
&lt;li>到Main中，使用getBean來取得singletonpool中的Bean&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">WinterApplicationContext&lt;/span> &lt;span class="n">applicationContext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">WinterApplicationContext&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AppConfig&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;可以看到這三個的值是一模一樣的，代表這幾個物件都是同一個&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">applicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;userService&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">applicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;userService&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">applicationContext&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;userService&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/KfVnRwp.png"
loading="lazy"
alt="image-20230401205329971"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/5v3ykLV.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>這樣就是一個基礎的SprintBoot 單例池的創建&lt;/p>
&lt;h1 id="autowired之實現原理">Autowired之實現原理&lt;/h1>
&lt;p>To Be Continued &amp;hellip;&lt;/p></description></item><item><title>Java中回傳值前的泛型標識符是什麼意思呢</title><link>https://hoxtonhsu.com/p/java%E4%B8%AD%E5%9B%9E%E5%82%B3%E5%80%BC%E5%89%8D%E7%9A%84%E6%B3%9B%E5%9E%8B%E6%A8%99%E8%AD%98%E7%AC%A6%E6%98%AF%E4%BB%80%E9%BA%BC%E6%84%8F%E6%80%9D%E5%91%A2/</link><pubDate>Sat, 01 Apr 2023 00:03:03 +0800</pubDate><guid>https://hoxtonhsu.com/p/java%E4%B8%AD%E5%9B%9E%E5%82%B3%E5%80%BC%E5%89%8D%E7%9A%84%E6%B3%9B%E5%9E%8B%E6%A8%99%E8%AD%98%E7%AC%A6%E6%98%AF%E4%BB%80%E9%BA%BC%E6%84%8F%E6%80%9D%E5%91%A2/</guid><description>&lt;img src="https://i.imgur.com/Y9pLlYY.png" alt="Featured image of post Java中回傳值前的泛型標識符是什麼意思呢" />&lt;p>前一陣子在寫DiscordBot的時候，曾經在教學中看過這種寫法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">GymBotConfiguration&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">Event&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">GatewayDiscordClient&lt;/span> &lt;span class="nf">gatewayDiscordClient&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kd">final&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">EventListener&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">eventListeners&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="kd">final&lt;/span> &lt;span class="n">GatewayDiscordClient&lt;/span> &lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DiscordClientBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">create&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">login&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">block&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">EventListener&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">listener&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">eventListeners&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">on&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">listener&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getEventType&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">flatMap&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">listener&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">onErrorResume&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">listener&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">handleError&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">subscribe&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>對於其中&lt;T extends Event>的寫法感到非常困惑，不知道為什麼回傳值前還會有泛型符號，直到最近在研究一些OpenSource的框架時，才又更了解這件事情。&lt;/p>
&lt;h1 id="如何宣告泛型">如何宣告泛型&lt;/h1>
&lt;p>在講這件事情之前，要先有個基礎知識，就是關於Java是如何宣告一個泛型Class的，其實就是在Class後面加上&amp;lt;T&amp;gt;就可以了&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Link&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如此一來，就可以在其他地方創建一個泛型的Link類&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">Link&lt;/span> &lt;span class="n">link&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Link&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>現在我們在這個Link類裡新增一個方法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Link&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">addToList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">E&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="n">list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這個方法會把傳進來的值，包裝成一個ArrayList並回傳出去，而它參數的型別則是與Link的泛型一致，比如說&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">arg&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">Link&lt;/span> &lt;span class="n">link&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Link&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;;&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">link&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;早安&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/cpeYA8T.png"
loading="lazy"
alt="image-20230401002712243"
>&lt;/p>
&lt;p>也就是說addToList這個&lt;strong>方法的型別和Link的泛型型別是綁定在一起&lt;/strong>的。&lt;/p>
&lt;h1 id="何謂回傳型別前的泛型">何謂回傳型別前的泛型&lt;/h1>
&lt;p>承上，因為方法的參數型別與類的泛型型別基本上綁定在一起，如果我宣告了一個Link&amp;lt;Integer&amp;gt;，我的addToList就只能吃Integer的參數，那為了要解決這種問題，就有了在回傳型別前的泛型的寫法，釋例如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Link&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">addToList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">E&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="n">list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">addToList2&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">E&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="n">list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到addToList2這個方法的回傳值List&amp;lt;E&amp;gt;前，我加了一個&amp;lt;E&amp;gt;，先別管這個到底能做什麼，我們現在先使用這個方法看看&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/2kuQ8Ol.png"
loading="lazy"
alt="image-20230401003453849"
>&lt;/p>
&lt;p>這時候你發現了，addToList2能吃的參數變成Object類了，當我們輸入一個String&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/httYHD6.png"
loading="lazy"
alt="image-20230401003608198"
>&lt;/p>
&lt;p>輸入一個Double&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/1MrUXaL.png"
loading="lazy"
alt="image-20230401003718395"
>&lt;/p>
&lt;p>也可以輸入一個自定義的類&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/UV8qiDo.png"
loading="lazy"
alt="image-20230401013130560"
>&lt;/p>
&lt;p>可以感受到addToList跟addToList2的差異了嗎？沒錯，addToList2的泛型不受Link的影響，可以自己有自己的泛型&lt;/p>
&lt;h1 id="應用">應用&lt;/h1>
&lt;p>這樣的用法不只可以拿來用在泛型類裡的方法，也可以用在一個非泛型類，比如說&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Student&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Student&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">addPeopleList&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Student&lt;/span> &lt;span class="n">student&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Student&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="n">list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">student&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>今天我們希望這個addPeopleList的方法可以吃任何型別的參數，我們如果這樣寫是會報錯的&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/2VxQDBU.png"
loading="lazy"
alt="image-20230401004844813"
>&lt;/p>
&lt;p>原因就在於我們並沒有一個地方告訴編譯器，什麼是T，因為我們的Student類並不是一個泛型類，但實務上，我們又不太可能去修改原有的類，避免破壞掉一些東西，所以我們修改addPeopleList，讓它變成這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/vAcAm7y.png"
loading="lazy"
alt="image-20230401005044108"
>&lt;/p>
&lt;p>如此一來，addPeopleList就可以吃任何型別的參數了，以上就是所謂的泛型方法約束。&lt;/p></description></item><item><title>論@Value與Environment之優劣</title><link>https://hoxtonhsu.com/p/%E8%AB%96value%E8%88%87environment%E4%B9%8B%E5%84%AA%E5%8A%A3/</link><pubDate>Fri, 24 Mar 2023 01:41:57 +0000</pubDate><guid>https://hoxtonhsu.com/p/%E8%AB%96value%E8%88%87environment%E4%B9%8B%E5%84%AA%E5%8A%A3/</guid><description>&lt;img src="https://i.imgur.com/UDvSvgw.png" alt="Featured image of post 論@Value與Environment之優劣" />&lt;p>&lt;img src="https://i.imgur.com/JQHz275.png"
loading="lazy"
>&lt;/p>
&lt;p>SpringBoot中想要從Application.properties中取的值，有兩種常見的方式，其中一種是利用@Value的方式&lt;/p>
&lt;h1 id="value">@Value&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Value&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>&lt;span class="n">$&lt;/span>&lt;span class="o">{&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">version&lt;/span>&lt;span class="o">})&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">version&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="enviroment">Enviroment&lt;/h1>
&lt;p>另一種則是透過 Enviroment物件來取的&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">private&lt;/span> &lt;span class="kd">final&lt;/span> &lt;span class="n">Environment&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getAppVersion&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;app.version&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="以取值的表現形式來看">以取值的表現形式來看&lt;/h1>
&lt;p>在某些情形下，我們可能會從applicaiton.properties中取出一個陣列值，比如說&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">language=en,zh,jp
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這時如果使用Enviroment來取，取出來的值會一個String，需要再透過轉換，將它變為一個String&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">Environment&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="nf">getMyArrayProperty&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">propertyValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;my.array.property&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">propertyValue&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">propertyValue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">split&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;,&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">];&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但如果用@Value的方式來取值，則可以在宣告變數時，聲明它是一個String或是一個String[]，避免後續的轉換&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Value&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;${language}&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">myArray&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="以單元測試角度來看">以單元測試角度來看&lt;/h1>
&lt;p>這兩個表現形式幾乎一模一樣，都可以取得想要的部分，但最大差別就在單元測試時，由於@Value這個取值方式有賴將整個SpringBoot專案啟動才可以注入，在單元測試的環境下並沒有辦法做到這件事情。但相反的，由於Environment本身屬於一個外部依賴，我們可以很好的替代掉他&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Service&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">VersionService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Environment&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">VersionService&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Environment&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">environment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getEunoExAppVersion&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;eunoex.version&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@ExtendWith&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MockitoExtension&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">class&lt;/span> &lt;span class="nc">VersionServiceTest&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Mock&lt;/span>
&lt;span class="n">Environment&lt;/span> &lt;span class="n">environment&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@InjectMocks&lt;/span>
&lt;span class="n">VersionService&lt;/span> &lt;span class="n">versionService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">getAppVersion_everythingFine_returnSuccessfully&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">given&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">environment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getProperty&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="o">())).&lt;/span>&lt;span class="na">willReturn&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;v1.2.0&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">ExAppVersion&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">versionService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAppVersion&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;AppVersion = &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">AppVersion&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>大概Guy4這樣&lt;/p></description></item><item><title>在window Terminal中使用Cmder</title><link>https://hoxtonhsu.com/p/%E5%9C%A8window-terminal%E4%B8%AD%E4%BD%BF%E7%94%A8cmder/</link><pubDate>Tue, 21 Mar 2023 10:40:57 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%9C%A8window-terminal%E4%B8%AD%E4%BD%BF%E7%94%A8cmder/</guid><description>&lt;img src="https://i.imgur.com/l3t70N4.png" alt="Featured image of post 在window Terminal中使用Cmder" />&lt;h1 id="安裝window-terminal">安裝window terminal&lt;/h1>
&lt;p>至Microsoft Store安裝window terminal&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/QHkfcK2.png"
loading="lazy"
alt="image-20230321104350045"
>&lt;/p>
&lt;h1 id="安裝cmder">安裝Cmder&lt;/h1>
&lt;p>&lt;a class="link" href="https://cmder-app.translate.goog/?_x_tr_sl=en&amp;amp;_x_tr_tl=zh-TW&amp;amp;_x_tr_hl=zh-TW&amp;amp;_x_tr_pto=sc" target="_blank" rel="noopener"
>Cmder載點&lt;/a>&lt;/p>
&lt;p>並將它解壓縮後放置&lt;/p>
&lt;p>&lt;code>%USERPROFILE%/AppData/Roaming&lt;/code>&lt;/p>
&lt;p>中&lt;/p>
&lt;p>也就是&lt;/p>
&lt;p>&lt;code>C:\Users\you_userName\AppData\Roaming&lt;/code>&lt;/p>
&lt;h1 id="設定環境變數">設定環境變數&lt;/h1>
&lt;p>接著設定環境變數&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">變數名稱：CMDER_ROOT
變數值：%USERPROFILE%/AppData/Roaming/cmder
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/evCanCt.png"
loading="lazy"
alt="image-20230321104927389"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">變數名稱：ConEmuDir
變數值：%USERPROFILE%/AppData/Roaming/cmder/vendor/conemu-maximus5
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/v6v0WUg.png"
loading="lazy"
alt="image-20230321105111605"
>&lt;/p>
&lt;p>設定window Termianl&lt;/p>
&lt;p>打開設定&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/o7ga4o6.png"
loading="lazy"
alt="image-20230321105152420"
>&lt;/p>
&lt;p>按左下角的開啟JSON檔案&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/t0NQTF2.png"
loading="lazy"
alt="image-20230321105210480"
>&lt;/p>
&lt;p>將下列這段貼上至JSON檔中的這個位置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json"> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;background&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;#2E3436&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;commandline&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;cmd.exe /k %CMDER_ROOT%\\vendor\\init.bat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;font&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;face&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Cascadia Code&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">10.0&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;guid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;{6d953325-a939-475d-a151-940cbd0302fb}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;icon&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;%CMDER_ROOT%\\icons\\cmder.ico&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Cmder&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;padding&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;15&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;startingDirectory&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;%USERPROFILE%/Desktop&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就像這樣子&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/jyFYrjK.png"
loading="lazy"
alt="image-20230321105524196"
>&lt;/p>
&lt;p>接著&lt;strong>重開&lt;/strong>window terminal就可以囉~&lt;/p></description></item><item><title>使用Docker在window會出現的File Not Found問題</title><link>https://hoxtonhsu.com/p/%E4%BD%BF%E7%94%A8docker%E5%9C%A8window%E6%9C%83%E5%87%BA%E7%8F%BE%E7%9A%84file-not-found%E5%95%8F%E9%A1%8C/</link><pubDate>Thu, 16 Mar 2023 06:41:23 +0000</pubDate><guid>https://hoxtonhsu.com/p/%E4%BD%BF%E7%94%A8docker%E5%9C%A8window%E6%9C%83%E5%87%BA%E7%8F%BE%E7%9A%84file-not-found%E5%95%8F%E9%A1%8C/</guid><description>&lt;img src="https://i.imgur.com/AP3wJLN.png" alt="Featured image of post 使用Docker在window會出現的File Not Found問題" />&lt;h1 id="前情提要">前情提要&lt;/h1>
&lt;p>最近在學習zabbix時，安裝在Linux系統下時，透過Postman是可以正常取得資料的&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/DX2FgEJ.png"
loading="lazy"
>&lt;/p>
&lt;p>但是當我用Docker把Zabbix架設在Window環境下時卻一直出現&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">File not found.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>的錯誤&lt;/p>
&lt;h1 id="發現錯誤">發現錯誤&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/GNtvhd5.png"
loading="lazy"
>&lt;/p>
&lt;p>兩邊的版本、設置、Server Port都一樣，完全不知道到底發生了什麼問題，後來是透過網頁的開發人員工具才發現一小處的不同&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/W3r8xcI.png"
loading="lazy"
>&lt;/p>
&lt;p>這是Linux環境下的API請求&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Y2XdCFb.png"
loading="lazy"
>
這是Window下的API請求&lt;/p>
&lt;p>聰明的你一定發現了，&lt;strong>肏你媽的這兩個API請求的URL完全不一樣啊，幹你媽的&lt;/strong>&lt;/p>
&lt;h1 id="解決方法">解決方法&lt;/h1>
&lt;p>我個人猜應該是Docker在部屬的時候，不知道為什麼裡面檔案的結構層級直接跳過了\zabbix這一層，直接變成&lt;code>http://localhost/api_jsonrpc.php&lt;/code>的路徑。&lt;/p>
&lt;p>將URL改成正確地之後就能正常訪問了&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/1OlT37p.gif"
loading="lazy"
>&lt;/p></description></item><item><title>運用ArrayList與自動配置將Swich語法拆解</title><link>https://hoxtonhsu.com/p/%E9%81%8B%E7%94%A8arraylist%E8%88%87%E8%87%AA%E5%8B%95%E9%85%8D%E7%BD%AE%E5%B0%87swich%E8%AA%9E%E6%B3%95%E6%8B%86%E8%A7%A3/</link><pubDate>Tue, 14 Mar 2023 00:31:03 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E9%81%8B%E7%94%A8arraylist%E8%88%87%E8%87%AA%E5%8B%95%E9%85%8D%E7%BD%AE%E5%B0%87swich%E8%AA%9E%E6%B3%95%E6%8B%86%E8%A7%A3/</guid><description>&lt;img src="https://i.imgur.com/rfkvgRO.png" alt="Featured image of post 運用ArrayList與自動配置將Swich語法拆解" />&lt;p>如果依照存在即合理的說法來看，Switch的存在確實是有解決一些問題，比如說一些要依照不同情況來回傳不同結果的Function，相較於用冗長的if-else，選擇用Switch確實是個不錯的解法。但當今天的Switch Case會增長的情況，在選擇使用它就會違反了OCP(開放擴充、封閉修改)的原則，亦即每次有新的情況出現，我們就得回頭去改Switch語法，新增不同的case，一來一往增加了維護的負擔，這邊分享一個我把switch語法拆解的方式，以供紀錄這樣子。&lt;/p>
&lt;h1 id="情境">情境&lt;/h1>
&lt;p>我在設計一款可以連結不同SQL Engine的程式，當用戶選擇了不同的SQL Engine，我能夠執行不同資料庫的語法來返回結果，圖示如下&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/h00lO8z.png"
loading="lazy"
alt="image-20230314004011166"
>&lt;/p>
&lt;h1 id="修改前">修改前&lt;/h1>
&lt;p>這是我的設計&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@RestController&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DatasourceController&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">DatabaseService&lt;/span> &lt;span class="n">databaseService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">DatasourceController&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">DatabaseService&lt;/span> &lt;span class="n">databaseService&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">databaseService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">databaseService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@GetMapping&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/query&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@RequestBody&lt;/span> &lt;span class="n">QueryRequest&lt;/span> &lt;span class="n">queryRequest&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">SQLException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JsonProcessingException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ClassNotFoundException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">databaseService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">queryRequest&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Service&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DatabaseServiceImp&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">DatabaseService&lt;/span>&lt;span class="o">{&lt;/span>
&lt;span class="n">DatabaseDao&lt;/span> &lt;span class="n">databaseDao&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">DatabaseServiceImp&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">DatabaseDao&lt;/span> &lt;span class="n">databaseDao&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">databaseDao&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">databaseDao&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">QueryRequest&lt;/span> &lt;span class="n">queryRequest&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">SQLException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JsonProcessingException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ClassNotFoundException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">databaseName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queryRequest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDatabaseEngine&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">databaseDao&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getDatabaseDao&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">databaseName&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">databaseDao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">connect&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">queryRequest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getQuery&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DatabaseDao&lt;/span> &lt;span class="nf">getDatabaseDao&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">databaseName&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">switch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">databaseName&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;Postgres&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">PostgresDaoImpl&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s">&amp;#34;MsSql&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">MySQLDaoImpl&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="n">DatabaseNotFoundException&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createDatabaseNotFoundException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Not this Database&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Repository&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">DatabaseDao&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">DatabaseDao&lt;/span> &lt;span class="nf">connect&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">SQLException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ClassNotFoundException&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">close&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">SQLException&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="nf">query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">query&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">SQLException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JsonProcessingException&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我在Service層的地方會有一個method&lt;code>getDatabaseDao&lt;/code>，來依照輸入的databaseName來將不同的Dao賦值進filed中，首先這有兩個問題&lt;/p>
&lt;ol>
&lt;li>當資料庫在擴充時，必須要回頭修改&lt;code>getDatabaseDao&lt;/code>，增加修改的成本&lt;/li>
&lt;li>無法利用SpringBean的IoC，每次有新的Request近來，都會創造一個Dao的Object存在於記憶體中，造成記憶體空間的浪費&lt;/li>
&lt;/ol>
&lt;h1 id="修改後">修改後&lt;/h1>
&lt;p>因此後來的修改必須得改善上面兩點，必須要符合OCP的規則，我只要新增新的Dao，而毋需修改就有的程式碼，並且還要使用SpringBean，以下是修改後的版本&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Service&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">DatabaseServiceImp&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">DatabaseService&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">DatabaseEngineDao&lt;/span> &lt;span class="n">databaseEngineDao&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">DatabaseEngineDao&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">databaseDaoList&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">DatabaseServiceImp&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">DatabaseEngineDao&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">databaseDaoList&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">databaseDaoList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">databaseDaoList&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">QueryRequest&lt;/span> &lt;span class="n">queryRequest&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">SQLException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JsonProcessingException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ClassNotFoundException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">databaseName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queryRequest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDatabaseEngine&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">databaseEngineDao&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getDatabaseDao&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">databaseName&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">databaseEngineDao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">connect&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">queryRequest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getQuery&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">DatabaseEngineDao&lt;/span> &lt;span class="nf">getDatabaseDao&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">databaseEngine&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">DatabaseEngineDao&lt;/span> &lt;span class="n">databaseDao&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">databaseDaoList&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">databaseEngine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">databaseDao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDatabaseEngineName&lt;/span>&lt;span class="o">()))&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">databaseDao&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="n">DatabaseNotFoundException&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">createDatabaseNotFoundException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Not Found This DatabaseEngine，請檢查是否有相應的databaseEngineName在DAO中&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Repository&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">DatabaseEngineDao&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">DatabaseEngineDao&lt;/span> &lt;span class="nf">connect&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">SQLException&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">close&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">SQLException&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="nf">query&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">query&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">SQLException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">JsonProcessingException&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getDatabaseEngineName&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>將原本的&lt;code>DatabaseDao databaseDao;&lt;/code>修改為，&lt;code>List&amp;lt;DatabaseEngineDao&amp;gt; databaseDaoList;&lt;/code>，在SpringBoot啟動時，將所有的DatabaseEngineDao類配置進databaseDaoList中，讓springBoot控制object的創建，並且將&lt;code>getDatabaseDao&lt;/code>改寫，改成去for-each databaseDaoList，尋找List中是否有名稱符合的SQL Engine。並在DatabaseEngineDao Interface處新增getDatabaseEngineName，讓每個實作它的Impl都必須去完成這個method，完成了OCP的原則。&lt;/p></description></item><item><title>Zabbix的一些筆記</title><link>https://hoxtonhsu.com/p/zabbix%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AD%86%E8%A8%98/</link><pubDate>Mon, 13 Mar 2023 05:40:02 +0000</pubDate><guid>https://hoxtonhsu.com/p/zabbix%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AD%86%E8%A8%98/</guid><description>&lt;img src="https://i.imgur.com/7g77ZiN.png" alt="Featured image of post Zabbix的一些筆記" />&lt;p>參考網址：&lt;a class="link" href="https://ithelp.ithome.com.tw/articles/10263907" target="_blank" rel="noopener"
>監控大挑戰 - 以 Zabbix 為例&lt;/a>&lt;/p>
&lt;h1 id="為什麼選擇zabbix">為什麼選擇Zabbix?&lt;/h1>
&lt;p>目前常見的監控軟體有三者&lt;/p>
&lt;ol>
&lt;li>Zabbix&lt;/li>
&lt;li>Cacti&lt;/li>
&lt;li>Nagios&lt;/li>
&lt;/ol>
&lt;h2 id="nagios的介面">NagiOs的介面&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/MnINBY1.png"
loading="lazy"
alt="image-20230317110443666"
>&lt;/p>
&lt;h2 id="cacti的介面">Cacti的介面&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/quFB2i9.jpg"
loading="lazy"
alt="image-20230317110544016"
>&lt;/p>
&lt;h2 id="zabbix的介面">Zabbix的介面&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/KMZdZPE.png"
loading="lazy"
alt="image-20230317110906297"
>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>監控產品&lt;/th>
&lt;th>Zabbix&lt;/th>
&lt;th>Nagios&lt;/th>
&lt;th>Cacti&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>圖形介面&lt;/td>
&lt;td>好看&lt;/td>
&lt;td>不是特別好&lt;/td>
&lt;td>還行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>監控性能&lt;/td>
&lt;td>併發監控，對CPU要求較高&lt;/td>
&lt;td>併發監控，對CPU要求較高&lt;/td>
&lt;td>輪詢監控，效能低&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>配置難度&lt;/td>
&lt;td>較低，有圖形化介面使用&lt;/td>
&lt;td>需使用CommandLine&lt;/td>
&lt;td>需使用CommandLine&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>自動發現&lt;/td>
&lt;td>支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;td>不支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>異常通知方式&lt;/td>
&lt;td>Email,簡訊,webhook,Line&amp;hellip;&lt;/td>
&lt;td>Email,簡訊,webhook,Line&amp;hellip;&lt;/td>
&lt;td>較弱，預設只支援Email&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="zabbix是什麼">Zabbix是什麼&lt;/h1>
&lt;p>Zabbix是一種開源的網絡監視和警報系統，用於監視各種網絡設備，包括服務器、網絡設備和應用程序等。Zabbix提供了一個可擴展的架構，可用於監視多個位置的數千個設備。&lt;/p>
&lt;p>Zabbix支持各種監視方式，包括SNMP、JMX、IPMI和VMware監視，還可以通過自定義監視腳本進行擴展。Zabbix還提供了一個強大的報警系統，可以通過電子郵件、SMS和其他方式發送警報，以便快速解決問題。&lt;/p>
&lt;p>Zabbix還提供了一個用戶友好的Web界面，可以輕鬆設置監視器和警報。Zabbix的開源設計使其成為一個非常有用的監視解決方案，可以滿足各種規模的企業和組織的需求&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/f9AxFB5.png"
loading="lazy"
alt="image-20230313142828806"
>&lt;/p>
&lt;h1 id="zabbix術語">Zabbix術語&lt;/h1>
&lt;p>Zabbix Server&lt;/p>
&lt;ul>
&lt;li>Zabbix server是agent程序報告系統可用性、系統完整性和統計數據的核心組件，是所有配置訊息、統計訊息和操作數據的核心儲存器&lt;/li>
&lt;/ul>
&lt;p>Zabbix資料庫存取&lt;/p>
&lt;ul>
&lt;li>所有配置訊息和Zabbix收集到的數據都被儲存在資料庫中&lt;/li>
&lt;/ul>
&lt;p>Zabbix Web介面&lt;/p>
&lt;ul>
&lt;li>為了從任何地方和任何平台都可以輕鬆地訪問Zabbix，我們提供基於Web的Zabbix介面，該介面是Zabbix Server的一部分，通常(但不一定)跟Zabbix Server運行在同一台物理主機上&lt;/li>
&lt;/ul>
&lt;p>Zabbix Proxy 代理服務器&lt;/p>
&lt;ul>
&lt;li>Zabbix Proxy可以替Zabbix Server收集性能和可用性數據。Proxy代理服務器是Zabbix軟體可選擇部屬的一部分，當然，Proxy代理服務器可以幫助單台Zabbix Server分擔負載壓力&lt;/li>
&lt;/ul>
&lt;p>Zabbix Agent 監控代理&lt;/p>
&lt;ul>
&lt;li>Zabbix agent 監控代理，部屬在監控目標上，能夠主動間空本地資源和應用程序，並將收集到的數據報告給Zabbix Server&lt;/li>
&lt;/ul>
&lt;p>Zabbix數據流&lt;/p>
&lt;ul>
&lt;li>監控方面，為了創造一個監控項(item)用於採集數據，必須先創建一個主機(host)&lt;/li>
&lt;li>告警方面，在監控項裡面創造觸發器(trigger)，通過觸發器(trigger)來觸發告警動作(action)。因此如果你想收到Server XCPU負載過高的告警，必須滿足&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>為Server X創建一個Host並關聯一個用對CPU進行監控的監控項(item)&lt;/li>
&lt;li>創建一個Trigger，設置成當CPU負載過高時會觸發&lt;/li>
&lt;li>Trigger被觸發，發送告警郵件&lt;/li>
&lt;/ol>
&lt;p>雖然看起來有很多步驟，但是使用模板的話操作起來其實非常簡單，Zabbix這樣的設計使得配置機制非常靈活易用&lt;/p>
&lt;p>主機(Host)&lt;/p>
&lt;ul>
&lt;li>一台你想監控的網路設備，用IP和域名表示&lt;/li>
&lt;/ul>
&lt;p>主機組(host Group)&lt;/p>
&lt;ul>
&lt;li>主機的邏輯組；包含了主機和模板。一個主機裡的主機和模板之間並沒有任何直接的關聯，通常在給不同用戶組的主機分配權限時，使用主機組&lt;/li>
&lt;/ul>
&lt;p>監控項(item)&lt;/p>
&lt;ul>
&lt;li>你想要接收的主機的特定數據，一個度量數據&lt;/li>
&lt;/ul>
&lt;p>觸發器(Trigger)&lt;/p>
&lt;ul>
&lt;li>一個被用於定義問題閾值和&amp;quot;評估&amp;quot;監控項接受到的數據的邏輯表達式，當接收到的數據高於閾值時，觸發器從OK變成Problem狀態。當接收到的數據低於閾值時，觸發器保留/返回一個OK的狀態&lt;/li>
&lt;/ul>
&lt;p>事件(Event)&lt;/p>
&lt;ul>
&lt;li>單次發生的需要注意的事情，例如觸發器狀態改變，或是發現有監控代理自動註冊&lt;/li>
&lt;/ul>
&lt;p>異常(Problem)&lt;/p>
&lt;ul>
&lt;li>一個處在&lt;strong>異常&lt;/strong>狀態的觸發器&lt;/li>
&lt;/ul>
&lt;p>動作(Action)&lt;/p>
&lt;ul>
&lt;li>一個對事件做出反應的預定義的操作&lt;/li>
&lt;li>一個動作由操作(例如發出通知)和條件(當時操作正在發生)組成&lt;/li>
&lt;/ul>
&lt;p>升級(Escalation)&lt;/p>
&lt;ul>
&lt;li>一個在動作內執行操作的自定義場景；發生通知／執行遠程命令的序列&lt;/li>
&lt;/ul>
&lt;p>媒介(Media)&lt;/p>
&lt;ul>
&lt;li>發送告警通知的手段；告警通知的途徑&lt;/li>
&lt;/ul>
&lt;p>通知(Notification)&lt;/p>
&lt;ul>
&lt;li>利用已選擇的媒體途徑把跟事件相關的訊息發送給用戶&lt;/li>
&lt;/ul>
&lt;p>遠程命令(remote command)&lt;/p>
&lt;ul>
&lt;li>一個預定義好的，滿足一些條件的情況下，可以在被監控主機上自動執行的命令&lt;/li>
&lt;/ul>
&lt;p>模板(template)&lt;/p>
&lt;ul>
&lt;li>一組可以被應用到一個或多個主機上的實體(監控項、觸發器、圖形、聚合圖形、應用、LLD、Web場景)的集合&lt;/li>
&lt;li>模板的任務就是加快對主機監控任務的實施；也可以使監控任務的批量修改更簡單。模板是直接關連到每台單獨的主機上&lt;/li>
&lt;/ul>
&lt;p>應用(Application)&lt;/p>
&lt;ul>
&lt;li>一組監控項組成的邏輯分組&lt;/li>
&lt;/ul>
&lt;p>Web場景(Web Scenario)&lt;/p>
&lt;ul>
&lt;li>利用一個或多個HTTP請求來檢查網站的可用性&lt;/li>
&lt;/ul>
&lt;p>前端(FrontEnd)&lt;/p>
&lt;ul>
&lt;li>Zabbix提供的Web介面&lt;/li>
&lt;/ul>
&lt;p>Zabbix API&lt;/p>
&lt;ul>
&lt;li>Zabbix API允許你使用JSON RPC協議(是一個無狀態且輕量級的遠程過程調用&lt;code>Remote Procedure Call &lt;/code>傳送協議，其傳遞內容透過JSON為主)來創建、更新和獲取Zabbix對象(如主機、監控項、圖形和其他)信息或者執行任何其他的字定義的任務&lt;/li>
&lt;/ul>
&lt;p>Zabbix Server&lt;/p>
&lt;ul>
&lt;li>Zabbix軟件實現監控的核心程序，主要功能是與Zabbix proxies和Agents進行交互、觸發器計算、發送告警通知、並將資料集中保存&lt;/li>
&lt;/ul>
&lt;p>Zabbix Agent&lt;/p>
&lt;ul>
&lt;li>一個部屬在監控對象上的，能夠主動監控本地資源和應用的程序&lt;/li>
&lt;li>Zabbix Agent部屬在監控的目標上，主動監測本地的資源和應用(硬體驅動、記憶體、處理器統計等等)&lt;/li>
&lt;li>Zabbix Agent收集本地的操作訊息並將資料報告給Zabbix Server用於進一步處理。一旦出現異常(比如硬碟空間已滿或者有崩潰的服務器Process)，Zabbix Server會主動警告管理員指定機器上的異常。Zabbix Agents的極端高校源於他可以利用本地系統調用來完成統計數據的收集&lt;/li>
&lt;/ul>
&lt;p>被動(Passive) 和 主動(Active)檢查&lt;/p>
&lt;ul>
&lt;li>Zabbix Agent可以執行被動和主動兩種檢查方式&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>被動檢查(Passive Check)模式中Agent應答數據請求，Zabbix Server(或者Proxy)詢問Agent資料，如CPU負仔狀況，然後Zabbix Agent回傳結果&lt;/li>
&lt;li>主動檢查(Active Checks) 處理過程將相對複雜。Agent必須首先從Zabbix server索取監控項列表以進行獨立處理，然後週期性的發送新的值給Server&lt;/li>
&lt;/ol>
&lt;p>執行被動或主動檢查是通過選擇相應的監測項目類型來配置的。Item Type. Zabbix Agent處理監控項類型有Zabbix agent和 Zabbix Agent(Active)&lt;/p>
&lt;p>Zabbix Proxy&lt;/p>
&lt;ul>
&lt;li>一個幫助Zabbix server收集數據，分擔Zabbix Server負擔的程式&lt;/li>
&lt;li>Zabbix Proxy是一個可以從一個或多個受監控設備收集監控數據，並將訊息結果發送到Zabbix Server的Process，基本上是代表Server工作的。所有收集的數據都在本地進行快取，然後傳送到Proxy所屬的Zabbix Server。&lt;/li>
&lt;li>部屬Proxy是可選的，但是可能會非常有益於分散單個Zabbix Sever的負載，如果只有Proxy收集數據，Server上的進程就會減少，CPU消耗和磁碟I/O負載&lt;/li>
&lt;li>Zabbix Proxy是完成遠端區域，分支機構，沒有本地管理員的網路集中監控的理想解決方案&lt;/li>
&lt;li>Zabbix Proxy需要使用獨立的資料庫&lt;/li>
&lt;/ul>
&lt;h1 id="使用docker安裝-zabbix">使用Docker安裝 Zabbix&lt;/h1>
&lt;p>首先先點到下列網站
&lt;a href="https://www.zabbix.com/documentation/5.0/en/manual/installation/containers">https://www.zabbix.com/documentation/5.0/en/manual/installation/containers&lt;/a>&lt;/p>
&lt;p>並在這邊選擇要使用的版本
&lt;img src="https://i.imgur.com/WNJujBy.png"
loading="lazy"
>&lt;/p>
&lt;p>這次是使用官網提供的，也就是用mysql當database的版本&lt;/p>
&lt;p>並按照下列的cmd指令輸入，下面的參數，若有需要變可以在自行修改&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker network create --subnet 172.20.0.0/16 --ip-range 172.20.240.0/20 zabbix-net
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/br>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --name postgres-server -t -e &lt;span class="nv">POSTGRES_USER&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix_pwd&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_DB&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> --network&lt;span class="o">=&lt;/span>zabbix-net --restart unless-stopped -d postgres:latest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/br>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --name zabbix-snmptraps -t -v /zbx_instance/snmptraps:/var/lib/zabbix/snmptraps:rw -v /var/lib/zabbix/mibs:/usr/share/snmp/mibs:ro --network&lt;span class="o">=&lt;/span>zabbix-net -p 162:1162/udp --restart unless-stopped -d zabbix/zabbix-snmptraps:alpine-5.0-latest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/br>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --name zabbix-server-pgsql -t -e &lt;span class="nv">DB_SERVER_HOST&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgres-server&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_USER&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix_pwd&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_DB&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> -e &lt;span class="nv">ZBX_ENABLE_SNMP_TRAPS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span> --network&lt;span class="o">=&lt;/span>zabbix-net -p 10051:10051 --volumes-from zabbix-snmptraps --restart unless-stopped -d zabbix/zabbix-server-pgsql:alpine-5.0-latest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/br>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker run --name zabbix-web-nginx-pgsql -t -e &lt;span class="nv">ZBX_SERVER_HOST&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix-server-pgsql&amp;#34;&lt;/span> -e &lt;span class="nv">DB_SERVER_HOST&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;postgres-server&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_USER&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix_pwd&amp;#34;&lt;/span> -e &lt;span class="nv">POSTGRES_DB&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span> --network&lt;span class="o">=&lt;/span>zabbix-net -p 443:8443 -p 80:8080 -v /etc/ssl/nginx:/etc/ssl/nginx:ro --restart unless-stopped -d zabbix/zabbix-web-nginx-pgsql:alpine-5.0-latest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="透過termianl訪問container中的資料庫以psql為例">透過termianl訪問Container中的資料庫，以psql為例&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker &lt;span class="nb">exec&lt;/span> -it &lt;span class="o">[&lt;/span>containerId&lt;span class="o">]&lt;/span> bash
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/br>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">psql -U zabbix -h localhost zabbix
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/mVPKa6i.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>當全部都設置好後&lt;/p>
&lt;p>訪問 http://localohst/ 即可訪問Zabbix頁面&lt;/p>
&lt;p>帳號：Admin
密碼：zabbix&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/T8tGvQQ.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="在window下安裝-zabbix-agent">在Window下安裝 Zabbix Agent&lt;/h1>
&lt;p>這邊待補啦，不過先講一下Zabbix的Server端要怎麼對應&lt;/p>
&lt;p>​ &lt;img src="https://i.imgur.com/5CXeOx4.png"
loading="lazy"
alt="image-20230317111417481"
>&lt;/p>
&lt;p>Host Name：要和當初設定Agent的Name一致&lt;/p>
&lt;p>Group：Templates/Operating systems&lt;/p>
&lt;p>Agent：當Agent的那一台主機的IP&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Vre2glc.png"
loading="lazy"
alt="image-20230317111854438"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/LQ0R9rk.png"
loading="lazy"
alt="image-20230317111428373"
>&lt;/p>
&lt;p>Temlate：Template OS Windows by Zabbix agent&lt;/p>
&lt;h1 id="api的使用">API的使用&lt;/h1>
&lt;p>可以到下列的網站使用線上的Zabbix API Test&lt;/p>
&lt;p>&lt;a href="https://sbcode.net/zabbix/zabbix-api-test-form/">https://sbcode.net/zabbix/zabbix-api-test-form/&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/SNBs6Z9.png"
loading="lazy"
>&lt;/p>
&lt;p>url都是 http://localhost/api_jsonrpc.php，差別在於Body的內容&lt;/p>
&lt;h2 id="測試用api用以返回版本號">測試用API，用以返回版本號&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;apiinfo.version&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;params&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>返回的結果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;5.0.32&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="登入用的api用來取得token">登入用的API，用來取得Token&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;user.login&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;params&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Admin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;zabbix&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>返回的結果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1a6022b1a01b787b2129d011763c73e6&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>result就是Token值&lt;/p>
&lt;h2 id="返回目前存在的agent">返回目前存在的Agent&lt;/h2>
&lt;p>記得把Auth的值改成login返回的token&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;host.get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;params&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;output&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;host&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;selectInterfaces&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;interfaceid&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;ip&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1a6022b1a01b787b2129d011763c73e6&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>返回的結果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;10084&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Zabbix server&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;interfaces&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;interfaceid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;10438&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Ian&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;interfaces&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;interfaceid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;192.168.100.51&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;10440&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Bill&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;interfaces&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;interfaceid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;192.168.100.57&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;10439&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Jess&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;interfaces&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;interfaceid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;192.168.100.51&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="zabbix-api介紹">Zabbix API介紹&lt;/h2>
&lt;p>&lt;a href="https://sbcode.net/zabbix/zabbix-api-test-form/">https://sbcode.net/zabbix/zabbix-api-test-form/&lt;/a>&lt;/p>
&lt;p>在很多的API Parameter中，會常常看到&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;output&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;extend&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這段。這句話的意思是這樣的
output代表你想要返回的value值有什麼&lt;code>下面會有詳細的介紹&lt;/code>
而extend則代表「請提供給我，更多的資訊」，詳細的差異如下&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/gMtkkhr.gif"
loading="lazy"
>&lt;/p>
&lt;p>我們假設
host.get的返回值為下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;10084&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;proxy_hostid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Zabbix server&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;disable_until&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1679972679&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Get value from agent failed: cannot connect to [[127.0.0.1]:10050]: [111] Connection refused&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;available&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;errors_from&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1679019319&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;lastaccess&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ipmi_authtype&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;-1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ipmi_privilege&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ipmi_username&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ipmi_password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ipmi_disable_until&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ipmi_available&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;snmp_disable_until&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;snmp_available&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;maintenanceid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;maintenance_status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;maintenance_type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;maintenance_from&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ipmi_errors_from&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;snmp_errors_from&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ipmi_error&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;snmp_error&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;jmx_disable_until&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;jmx_available&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;jmx_errors_from&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;jmx_error&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Zabbix server&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;flags&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;templateid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;tls_connect&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;tls_accept&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;tls_issuer&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;tls_subject&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;tls_psk_identity&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;tls_psk&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;proxy_address&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auto_compress&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;inventory_mode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;-1&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但我們並不想要那麼多資訊，我們可能只想要其中幾項，比如說proxy_hostid,status而已，那我們就可以把我們Parameters的參數修改成這樣&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;output&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;proxy_hostid&amp;#34;&lt;/span>&lt;span class="p">]}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>回傳的結果就會變成這樣
&lt;img src="https://i.imgur.com/kbdlgvG.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="使用zabbix來取得cpu-utilization-in-">使用Zabbix來取得CPU Utilization (in %)&lt;/h2>
&lt;ol>
&lt;li>先使用&lt;code>host.get&lt;/code>來取得所有host資訊&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;host.get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;params&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;output&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;host&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;selectInterfaces&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;interfaceid&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;ip&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;7cdc68d62750b0ed7ae693d1d7a52466&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>返回的結果如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;10084&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Zabbix server&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;interfaces&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;interfaceid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;10438&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Ian&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;interfaces&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;interfaceid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;192.168.100.51&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;10440&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Bill&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;interfaces&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;interfaceid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;192.168.100.57&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>透過item.get取得hostId的資料&lt;/li>
&lt;/ol>
&lt;p>假設我們現在要找到hostId=10440的資料，我們的API BODY要這樣送&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;item.get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;params&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;output&amp;#34;&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;lastvalue&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;filter&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span>
&lt;span class="nt">&amp;#34;hostid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;10440&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;7cdc68d62750b0ed7ae693d1d7a52466&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中 output的值代表，只顯示name,description,lastvalue這幾個key的資料，filter則代表我只要key-value為hostid:10440的資料&lt;/p>
&lt;p>返回的結果很長，這邊講個大概就好&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;itemid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;37631&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Interface Intel(R) Ethernet Connection (14) I219-V(乙太網路): Outbound packets with errors&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;The number of outgoing packets with errors on the network interface.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;lastvalue&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;itemid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;37632&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Interface Intel(R) Ethernet Connection (14) I219-V(乙太網路): Inbound packets discarded&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;The number of incoming packets dropped on the network interface.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;lastvalue&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;itemid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;37633&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Interface Intel(R) Ethernet Connection (14) I219-V(乙太網路): Inbound packets with errors&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;The number of incoming packets with errors on the network interface.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;lastvalue&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;itemid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;37634&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Interface Intel(R) Ethernet Connection (14) I219-V(乙太網路): Bits received&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Incoming traffic on the network interface.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;lastvalue&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;6431168&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="err">...&lt;/span>
&lt;span class="err">//以下略..&lt;/span>
&lt;span class="err">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>找到CPU Utilization的資訊&lt;/li>
&lt;/ol>
&lt;p>搜尋關鍵字 CPU&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/uP21l7n.png"
loading="lazy"
>&lt;/p>
&lt;p>這邊，那個lastValue其實就是最新的CPU使用率，這樣就成功取得CPU的使用率囉！&lt;/p>
&lt;ol start="4">
&lt;li>取得CPU Utilization的使用率&lt;/li>
&lt;/ol>
&lt;p>API Body如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;history.get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;params&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;history&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;itemids&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;37631&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;output&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;extend&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;auth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;7cdc68d62750b0ed7ae693d1d7a52466&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>返回的結果如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;jsonrpc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;itemid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;37568&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;clock&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1679900528&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;5.186729&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ns&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;297585693&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;itemid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;37568&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;clock&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1679900648&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;6.917095&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;ns&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;233421931&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">...&lt;/span> &lt;span class="err">略&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="使用docker安裝可能導致api路徑不正確">使用Docker安裝，可能導致API路徑不正確&lt;/h1>
&lt;p>最近在學習zabbix時，安裝在Linux系統下時，透過Postman是可以正常取得資料的&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/DX2FgEJ.png"
loading="lazy"
>&lt;/p>
&lt;p>但是當我用Docker把Zabbix架設在Window環境下時卻一直出現&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">File not found.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>的錯誤&lt;/p>
&lt;h2 id="發現錯誤">發現錯誤&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/GNtvhd5.png"
loading="lazy"
>&lt;/p>
&lt;p>兩邊的版本、設置、Server Port都一樣，完全不知道到底發生了什麼問題，後來是透過網頁的開發人員工具才發現一小處的不同&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/W3r8xcI.png"
loading="lazy"
>&lt;/p>
&lt;p>這是Linux環境下的API請求&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Y2XdCFb.png"
loading="lazy"
>
這是Window下的API請求&lt;/p>
&lt;p>聰明的你一定發現了，肏你媽的這兩個API請求的URL完全不一樣啊，幹你媽的&lt;/p>
&lt;h2 id="解決方法">解決方法&lt;/h2>
&lt;p>我個人猜應該是Docker在部屬的時候，不知道為什麼裡面檔案的結構層級直接跳過了\zabbix這一層，直接變成&lt;code>http://localhost/api_jsonrpc.php&lt;/code>的路徑。&lt;/p>
&lt;p>將URL改成正確地之後就能正常訪問了&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/1OlT37p.gif"
loading="lazy"
>&lt;/p></description></item><item><title>只要按個鍵，圖片立刻上傳至雲端 PicGo介紹</title><link>https://hoxtonhsu.com/p/%E5%8F%AA%E8%A6%81%E6%8C%89%E5%80%8B%E9%8D%B5%E5%9C%96%E7%89%87%E7%AB%8B%E5%88%BB%E4%B8%8A%E5%82%B3%E8%87%B3%E9%9B%B2%E7%AB%AF-picgo%E4%BB%8B%E7%B4%B9/</link><pubDate>Wed, 08 Mar 2023 20:56:55 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%8F%AA%E8%A6%81%E6%8C%89%E5%80%8B%E9%8D%B5%E5%9C%96%E7%89%87%E7%AB%8B%E5%88%BB%E4%B8%8A%E5%82%B3%E8%87%B3%E9%9B%B2%E7%AB%AF-picgo%E4%BB%8B%E7%B4%B9/</guid><description>&lt;img src="https://i.imgur.com/teYQFXk.png" alt="Featured image of post 只要按個鍵，圖片立刻上傳至雲端 PicGo介紹" />&lt;h1 id="介紹">介紹&lt;/h1>
&lt;p>PicGo是個開源的圖片上傳程式(並非平台)，由於設定快速，效果簡單而深受我的喜愛，決定寫一篇文章來介紹這東西該怎麼使用&lt;/p>
&lt;h1 id="安裝">安裝&lt;/h1>
&lt;p>我們使用Choco來安裝，Choco是一個Window系統的檔案下載工具，可以做類似npm的功能，以下是它的安裝方式。&lt;/p>
&lt;p>使用&lt;strong>系統管理員&lt;/strong>執行CMD，並輸入以下的指令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">Set-ExecutionPolicy Bypass -Scope Process -Force&lt;span class="p">;&lt;/span> &lt;span class="o">[&lt;/span>System.Net.ServicePointManager&lt;span class="o">]&lt;/span>::SecurityProtocol &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>System.Net.ServicePointManager&lt;span class="o">]&lt;/span>::SecurityProtocol -bor 3072&lt;span class="p">;&lt;/span> iex &lt;span class="o">((&lt;/span>New-Object System.Net.WebClient&lt;span class="o">)&lt;/span>.DownloadString&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;https://community.chocolatey.org/install.ps1&amp;#39;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>即下載成功，若下載成功，可以輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">choco --version
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來查看是否安裝成功&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/StJyUnh.png"
loading="lazy"
alt="image-20230308210113018"
>&lt;/p>
&lt;p>若Choco安裝沒問題，則可以透過以下指令安裝picGo，若跳出什麼無法存取，則請記得要&lt;strong>使用系統管理員身分&lt;/strong>執行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">choco install picgo
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/iZGJC8G.png"
loading="lazy"
alt="image-20230308210301760"
>&lt;/p>
&lt;h1 id="使用">使用&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/Zb3DFev.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>我有點懶得打，就錄成Gif了，這邊其實就是去Imgur的&lt;/p>
&lt;p>&lt;a href="https://imgur.com/account/settings/apps">https://imgur.com/account/settings/apps&lt;/a>&lt;/p>
&lt;p>這邊，去設定你的一個ClinetId&lt;/p>
&lt;p>然後把它貼到&lt;code>設定ClinetId&lt;/code>那一欄就可以&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/IXOptVX.png"
loading="lazy"
alt="image-20230308210959190"
>&lt;/p>
&lt;p>並且我也會推薦將上傳的快捷鍵調成Ctrl+Alt+V&lt;/p>
&lt;p>這樣當你按下Win+Shift+S，截圖後，只要按下Ctrl+Alt+V，圖片就會自動幫你上傳至Imgur囉&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/UejcWoE.png"
loading="lazy"
alt="image-20230308211104660"
>&lt;/p></description></item><item><title>Git在第一次使用的credentialhelperselector該怎麼設定呢</title><link>https://hoxtonhsu.com/p/git%E5%9C%A8%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8%E7%9A%84credentialhelperselector%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%A8%AD%E5%AE%9A%E5%91%A2/</link><pubDate>Wed, 08 Mar 2023 20:48:18 +0800</pubDate><guid>https://hoxtonhsu.com/p/git%E5%9C%A8%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8%E7%9A%84credentialhelperselector%E8%A9%B2%E6%80%8E%E9%BA%BC%E8%A8%AD%E5%AE%9A%E5%91%A2/</guid><description>&lt;img src="https://i.imgur.com/PFJUZO4.png" alt="Featured image of post Git在第一次使用的credentialhelperselector該怎麼設定呢" />&lt;h1 id="前言">前言&lt;/h1>
&lt;p>每次在新電腦上使用Git的時候都會跳這個東西出來，但一直不知道這是啥，這次來研究一下&lt;/p>
&lt;h1 id="總結">總結&lt;/h1>
&lt;p>這東西其實是因為如果要推東西上去或是拉Private專案下來的話，會需要做認證(Credential)的部分，而這個視窗其實就是在問你，你所提供的這些登入資訊想存在哪邊?&lt;/p>
&lt;p>會建議就用預設的&lt;code>manager-core&lt;/code>就好，如果想存在磁碟中的話就選&lt;code>store&lt;/code>，如果想存在Cache就選&lt;code>cache&lt;/code>
這樣就可以囉&lt;/p>
&lt;p>如果已經存了，那可以輸入以下的指令來調整&lt;/p>
&lt;ul>
&lt;li>查看目前的credential.helper 是什麼&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git config credential.helper
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>將credential.helper 的設定改掉&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git config --global credential.helper manager-core
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>設定帳號密碼&lt;/li>
&lt;/ul>
&lt;p>由於自2021年後，GitHub不在提供使用帳號密碼的認證方式，要使用Token進行認證，帳號輸入自己的Github帳號，而密碼則是輸入自己的Token，這樣就設定成功囉！&lt;/p></description></item><item><title>StoreProcedure跟PSQL的筆記</title><link>https://hoxtonhsu.com/p/storeprocedure%E8%B7%9Fpsql%E7%9A%84%E7%AD%86%E8%A8%98/</link><pubDate>Wed, 01 Mar 2023 09:45:17 +0800</pubDate><guid>https://hoxtonhsu.com/p/storeprocedure%E8%B7%9Fpsql%E7%9A%84%E7%AD%86%E8%A8%98/</guid><description>&lt;img src="https://i.imgur.com/1BTtOUL.png" alt="Featured image of post StoreProcedure跟PSQL的筆記" />&lt;p>&lt;a class="link" href="https://www.youtube.com/watch?v=yLR1w4tZ36I&amp;amp;ab_channel=techTFQ" target="_blank" rel="noopener"
>參考網站&lt;/a>&lt;/p>
&lt;p>&lt;strong>這篇文章是以Postgres SQL的語法為主，其他RDB的語法略有不同&lt;/strong>&lt;/p>
&lt;h1 id="什麼是store-procedure">什麼是Store Procedure&lt;/h1>
&lt;p>預存程序（Stored Procedure）是一種資料庫對象，它是一個預編譯的SQL程式碼，可以在資料庫中存儲並重複使用。它通常由一系列SQL語句和編程邏輯組成，可以接受輸入參數、返回輸出參數和結果集。存儲過程通常由數據庫管理員或開發人員編寫和維護，並且可以在數據庫中執行。&lt;/p>
&lt;p>存儲過程有以下幾個優點：&lt;/p>
&lt;ol>
&lt;li>提高了數據庫性能：存儲過程是預編譯的，一旦編譯就會存儲在數據庫中，執行速度快。此外，存儲過程可以減少客戶端與服務器之間的通信，從而降低網絡延遲，提高數據庫性能。&lt;/li>
&lt;li>提高了數據安全性：存儲過程可以在數據庫層面上實現安全控制，可以限制某些用戶或角色的操作權限，從而保證數據的安全性。&lt;/li>
&lt;li>代碼復用：存儲過程可以被多個應用程序或者腳本重複調用，從而實現代碼復用，減少重複編寫代碼的時間和工作量。&lt;/li>
&lt;li>事務處理：存儲過程可以封裝事務處理邏輯，當多個SQL語句需要在一個事務中執行時，可以使用存儲過程將它們封裝在一個事務中，從而保證了數據的一致性和完整性。&lt;/li>
&lt;li>簡化了複雜的操作：存儲過程可以將多個SQL語句組合成一個操作，從而簡化了複雜的操作，使得應用程序更易於開發和維護。&lt;/li>
&lt;/ol>
&lt;p>存儲過程可以實現很多功能，比如：&lt;/p>
&lt;ol>
&lt;li>數據庫的備份和還原&lt;/li>
&lt;li>數據庫的複製和同步&lt;/li>
&lt;li>數據庫的日誌記錄和監控&lt;/li>
&lt;li>數據庫的查詢優化&lt;/li>
&lt;li>數據庫的數據加密和解密&lt;/li>
&lt;li>數據庫的數據清洗和轉換&lt;/li>
&lt;li>數據庫的業務邏輯實現&lt;/li>
&lt;li>數據庫的存儲和檢索過程中的錯誤處理&lt;/li>
&lt;li>數據庫的報表生成和匯出等。&lt;/li>
&lt;/ol>
&lt;h1 id="procedure與function之差異">Procedure與Function之差異&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/glkexq1.png"
loading="lazy"
alt="image-20230302110014148"
>&lt;/p>
&lt;p>在PostgreSQL中，function和procedure都是儲存運算邏輯的物件，它們在設計目的和使用方式上略有不同。&lt;/p>
&lt;p>Function主要是用於執行一個特定的計算或邏輯，返回一個單一的值或一個結果集，並且可以在SELECT語句、WHERE語句等中使用。Function可以返回一個或多個結果集，但只能返回一個值作為輸出，因此它被稱為有返回值的Function。&lt;/p>
&lt;p>Procedure主要用於執行一連串的操作，不返回結果集，通常是用來執行複雜的業務邏輯，如事務處理、資料庫管理等。Procedure可以執行INSERT、UPDATE、DELETE等數據操作，但是不能作為SELECT語句的一部分使用。Procedure不返回任何值或結果集，因此它被稱為無返回值的Procedure。&lt;/p>
&lt;p>在設計時，需要根據實際需求選擇使用哪種物件。如果需要執行一個特定的計算或邏輯，並返回一個結果集，則使用Function。如果需要執行一連串的操作並且不需要返回結果集，則使用Procedure。&lt;/p>
&lt;p>&lt;strong>更直接的不同是，Procedure並沒有定義它自身的回傳值，連Returns void都沒有，而Function是有回傳值的，即使是Returns Void也是有回傳值&lt;/strong>&lt;/p>
&lt;h2 id="創建procedure的語法">創建procedure的語法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">create&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="k">replace&lt;/span> &lt;span class="k">function&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">LANGUAGE&lt;/span> &lt;span class="n">plpgsql&lt;/span>
&lt;span class="k">AS&lt;/span> &lt;span class="err">$$&lt;/span>
&lt;span class="k">BEGIN&lt;/span>
&lt;span class="k">END&lt;/span>
&lt;span class="err">$$&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/SQvfGm9.png"
loading="lazy"
alt="image-20230303104439737"
>&lt;/p>
&lt;p>若加入RETURNS VOID則會回報錯誤&lt;/p>
&lt;h2 id="創建function的語法">創建Function的語法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">create&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="k">replace&lt;/span> &lt;span class="k">function&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">LANGUAGE&lt;/span> &lt;span class="n">plpgsql&lt;/span>
&lt;span class="k">AS&lt;/span> &lt;span class="err">$$&lt;/span>
&lt;span class="k">BEGIN&lt;/span>
&lt;span class="k">END&lt;/span>
&lt;span class="err">$$&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/dya5pND.png"
loading="lazy"
alt="image-20230303104821763"
>&lt;/p>
&lt;p>若不指定回傳值，則會報錯誤&lt;code>function result type must be specified&lt;/code>&lt;/p>
&lt;h1 id="定界符-delimiter">定界符$$ (delimiter)&lt;/h1>
&lt;p>在SQL中，兩個美元符號（$$）用來定義一個區塊或一個標識符（identifier）。&lt;/p>
&lt;p>例如，可以使用&lt;code>$$&lt;/code>來.定義一個存儲過程或函數的主體。在$$之間的所有內容都被視為存儲過程或函數的主體，可以包含SQL語句、流程控制語句等。&lt;/p>
&lt;p>另外，&lt;code>$$&lt;/code>還可以用來定義一個標識符，例如，可以使用&lt;code>$$&lt;/code>來定義一個變量或一個標識符的名稱。在&lt;code>$$&lt;/code>之間的所有內容都被視為標識符的名稱，可以包含字母、數字和下劃線等字符。使用&lt;code>$$&lt;/code>定義標識符時，可以幫助區分保留字和自定義的標識符，以及避免標識符中包含空格等特殊字符所帶來的問題。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">FUNCTION&lt;/span> &lt;span class="n">myfunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="nb">INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="nb">INT&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">RETURNS&lt;/span> &lt;span class="nb">INT&lt;/span> &lt;span class="k">AS&lt;/span> &lt;span class="err">$$&lt;/span>
&lt;span class="k">BEGIN&lt;/span>
&lt;span class="k">RETURN&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">$$&lt;/span> &lt;span class="k">LANGUAGE&lt;/span> &lt;span class="n">plpgsql&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">-- 在這個例子中，$$ 用來定義函數的主體。CREATE FUNCTION 指令創建了一個名為 myfunc 的函數，它接受兩個整數參數 x 和 y，返回它們的和。 RETURN 指令用於返回函數的值。
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">-- 在這裡，$ 用作定界符，它定義了函數的主體。如果不使用定界符，則在函數主體中使用分號 ; 可能會導致錯誤。使用定界符可以幫助區分不同的 SQL 區塊，從而更好地組織和管理 SQL 代碼。
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="使用terminal操作postgres-sql">使用Terminal操作Postgres SQL&lt;/h1>
&lt;p>有兩種方式，一種是用psql的Shell，另一種則是用powershell&lt;/p>
&lt;h2 id="使用psql的shell">使用psql的Shell&lt;/h2>
&lt;p>打開psql&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/nK75Ei4.png"
loading="lazy"
alt="image-20230301141105566"
>&lt;/p>
&lt;p>輸入相應的資訊&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/7xAxqku.png"
loading="lazy"
alt="image-20230301141442266"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/VoFR6LZ.jpg"
loading="lazy"
alt="1677641123421"
>&lt;/p>
&lt;h2 id="使用powershell">使用powerShell&lt;/h2>
&lt;p>首先先下載Postgres SQL，接著在把環境變數加入至電腦中，路徑大概會如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-cmd" data-lang="cmd">C&lt;span class="p">:&lt;/span>&lt;span class="nl">\Program&lt;/span>&lt;span class="c1"> Files\PostgreSQL\14\bin&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/XGVwCjA.png"
loading="lazy"
alt="image-20230301112209470"
>&lt;/p>
&lt;p>即可在Termianl中操作postgres SQL&lt;/p>
&lt;p>如以下指令&lt;/p>
&lt;h2 id="查看當前psql有什麼database">查看當前Psql有什麼Database&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-cmd" data-lang="cmd">psql -l
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="連結進入database">連結進入Database&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-cmd" data-lang="cmd">psql [dbname]
psql -U [role] [dbname] # 以 postgres 的 role 登入 postgres 的 database
psql -U postgres # 使用 postgres 的 role 登入 的 postgres 這個 database
psql -U aaronchen minicare_demo # 以 aaronchen 的 role 登入 minicare_demo 這個 database
psql -U postgres -d minicare_demo
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/wnWKIzQ.png"
loading="lazy"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-cmd" data-lang="cmd">psql -h localhost -p 5432 -U postgres school
## psql -h localhost -p 5432 -U &lt;span class="p">&amp;lt;&lt;/span>your_username&lt;span class="p">&amp;gt;&lt;/span> &amp;lt;your_database&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/O1LOTxQ.png"
loading="lazy"
alt="image-20230301112342437"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/9XwWLMJ.jpg"
loading="lazy"
alt="1677641123421"
>&lt;/p>
&lt;p>(與之對應的Server設定)&lt;/p>
&lt;h2 id="連結成功後的畫面">連結成功後的畫面&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/hws6MgV.png"
loading="lazy"
alt="image-20230301114731154"
>&lt;/p>
&lt;p>可以輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-cmd" data-lang="cmd">\dt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來查看該database底下的table&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/LrRDSbm.png"
loading="lazy"
alt="image-20230301114853633"
>&lt;/p>
&lt;blockquote>
&lt;p>在 psql 中，&lt;code>\&lt;/code> 符號是一個特殊的字元，稱為 &amp;ldquo;psql 內部命令前綴&amp;rdquo;。當您在 psql 終端機中輸入以 &lt;code>\&lt;/code> 開頭的命令時，psql 將解釋這個命令，並執行對應的操作。&lt;/p>
&lt;p>以下是幾個常用的 psql 內部命令：&lt;/p>
&lt;ul>
&lt;li>&lt;code>\c&lt;/code>: 切換到另一個數據庫&lt;/li>
&lt;li>&lt;code>\dt&lt;/code>: 列出當前數據庫中的所有表格&lt;/li>
&lt;li>&lt;code>\d table_name&lt;/code>: 查看指定表格的結構&lt;/li>
&lt;li>&lt;code>\q&lt;/code>: 退出 psql 終端機&lt;/li>
&lt;li>&lt;code>\! clear&lt;/code>: 清空psql 終端機畫面&lt;/li>
&lt;/ul>
&lt;p>當您想要使用 psql 內部命令時，必須在命令前加上 &lt;code>\&lt;/code> 符號。例如，要列出當前數據庫中的所有表格，您可以輸入 &lt;code>\dt&lt;/code>。&lt;/p>
&lt;p>如果您想要輸入以 &lt;code>\&lt;/code> 開頭的普通文本，而不是 psql 內部命令，則必須在 &lt;code>\&lt;/code> 前面再加上一個 &lt;code>\&lt;/code> 符號。例如，如果您想要在 SQL 陳述句中使用反斜線（&lt;code>\&lt;/code>）字元，則必須將其寫成 &lt;code>\\&lt;/code>。&lt;/p>
&lt;p>請注意，在某些情況下，psql 內部命令前綴 &lt;code>\&lt;/code> 可能會和 SQL 語句的關鍵字混淆。例如，&lt;code>CREATE TABLE&lt;/code> 陳述句中的 &lt;code>TABLE&lt;/code> 關鍵字後面如果不加引號可能會被 psql 認為是一個內部命令。為避免這種情況，建議在使用關鍵字時加上引號，例如 &lt;code>&amp;quot;TABLE&amp;quot;&lt;/code>。\&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/6fu3Mmp.png"
loading="lazy"
alt="image-20230301114853633"
>&lt;/p>
&lt;/blockquote>
&lt;p>基本上這個terminal就是我們的Query Tool，所以是可以在這邊做CRUD的，如下&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/9rB6wxq.png"
loading="lazy"
alt="image-20230301115221834"
>&lt;/p>
&lt;h1 id="常用的psql-指令">常用的psql 指令&lt;/h1>
&lt;ol>
&lt;li>&lt;code>\q&lt;/code> - 退出 &lt;code>psql&lt;/code> 命令行界面。&lt;/li>
&lt;li>&lt;code>\c &amp;lt;database_name&amp;gt;&lt;/code> - 連接到指定的數據庫。&lt;/li>
&lt;li>&lt;code>\dt&lt;/code> - 列出當前數據庫中的所有表格。&lt;/li>
&lt;li>&lt;strong>&lt;code>\d &amp;lt;table_name&amp;gt;&lt;/code> - 列出指定表格的詳細信息，包括列名、類型和約束等。&lt;/strong>&lt;/li>
&lt;li>&lt;code>\du&lt;/code> - 列出所有用戶帳號的詳細信息，包括用戶名、權限和群組等。&lt;/li>
&lt;li>&lt;code>\dp&lt;/code> - 列出所有表格的權限設置。&lt;/li>
&lt;li>&lt;code>\timing&lt;/code> - 啟用或禁用查詢執行時間的顯示。&lt;/li>
&lt;li>&lt;code>\set&lt;/code> - 列出或設置 &lt;code>psql&lt;/code> 的配置選項。&lt;/li>
&lt;li>&lt;code>\i &amp;lt;file_path&amp;gt;&lt;/code> - 從指定的檔案載入 SQL 命令。&lt;/li>
&lt;li>&lt;code>\e&lt;/code> - 打開外部編輯器編輯當前緩衝區中的 SQL 命令。&lt;/li>
&lt;li>&lt;strong>&lt;code>\! clear&lt;/code>: 清空psql 終端機畫面&lt;/strong>&lt;/li>
&lt;li>&lt;code>\dt&lt;/code>: 查看所有表格&lt;/li>
&lt;li>&lt;code>\df&lt;/code>: 查看資料庫中的所有函數以及Stored Procedure&lt;/li>
&lt;li>&lt;code>\ef&lt;/code>: 編輯現有的函數，可能你寫錯了還是啥的 ☆修改完後，存檔退出記事本，進到terminal要加上 &lt;code>\g&lt;/code> 才會把這個修改&lt;code>go&lt;/code>出去，不然你怎麼改都是沒有用ㄉ，血與淚的教訓Q_Q&lt;/li>
&lt;li>&lt;code>\sf&lt;/code>: 查看更詳細的函數內容，s stand for show&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>dt, du, df的d代表Describe的縮寫，用以顯示資料庫的資料&lt;/strong>&lt;/p>
&lt;h1 id="stored-procedure的實戰">Stored Procedure的實戰&lt;/h1>
&lt;p>首先創造表格&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="n">users&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="n">id&lt;/span> &lt;span class="nb">SERIAL&lt;/span> &lt;span class="k">PRIMARY&lt;/span> &lt;span class="k">KEY&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">NULL&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">email&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">NULL&lt;/span> &lt;span class="k">UNIQUE&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>插入資料&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">users&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;John Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;john.doe@example.com&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Jane Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;jane.doe@example.com&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Bob Smith&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;bob.smith@example.com&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="返回值為空的function">返回值為空的Function&lt;/h2>
&lt;p>先創建一個無關緊要的stored procedure來感受一下它的作用吧，我們創造一個function，用來返回今天的日期，語法如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">OR&lt;/span> &lt;span class="k">REPLACE&lt;/span> &lt;span class="k">FUNCTION&lt;/span> &lt;span class="c1">-- 創建stored procedure的起手式。
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">get_current_date&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">-- 函式名稱
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">RETURNS&lt;/span> &lt;span class="nb">DATE&lt;/span> &lt;span class="c1">-- 該函式的返回值，若未指定則為Return Null
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">AS&lt;/span> &lt;span class="c1">-- 用以分明函數聲明與函數體，AS上面的是函數聲明，AS下面的是函數體
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="err">$$&lt;/span> &lt;span class="c1">-- 定界符，參照上方說明
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">BEGIN&lt;/span>
&lt;span class="k">RETURN&lt;/span> &lt;span class="k">CURRENT_DATE&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">-- 函數體
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">$$&lt;/span> &lt;span class="c1">-- 定界符，參照上方說明
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">LANGUAGE&lt;/span> &lt;span class="n">plpgsql&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">-- 不加這個就是默認使用SQL語言，只能使用一些比較簡單的語法，加了這個之後就可以作流程控制、循環、異常處理等等...
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接著呼叫它&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span> &lt;span class="n">get_current_date&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/qoDZ9PN.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;h2 id="回傳特定資料的function">回傳特定資料的function&lt;/h2>
&lt;p>該function會返回參數值的使用者的相關資訊&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">OR&lt;/span> &lt;span class="k">REPLACE&lt;/span> &lt;span class="k">FUNCTION&lt;/span> &lt;span class="n">get_user_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span> &lt;span class="nb">INTEGER&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">RETURNS&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="k">AS&lt;/span>
&lt;span class="err">$$&lt;/span>
&lt;span class="k">BEGIN&lt;/span>
&lt;span class="k">RETURN&lt;/span> &lt;span class="n">QUERY&lt;/span> &lt;span class="k">SELECT&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">email&lt;/span> &lt;span class="k">FROM&lt;/span> &lt;span class="n">users&lt;/span> &lt;span class="k">WHERE&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">$$&lt;/span> &lt;span class="k">LANGUAGE&lt;/span> &lt;span class="n">plpgsql&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/MRdpixs.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;h2 id="更新資料的function">更新資料的function&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">OR&lt;/span> &lt;span class="k">REPLACE&lt;/span> &lt;span class="k">FUNCTION&lt;/span> &lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">update_user_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span> &lt;span class="nb">integer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="nb">character&lt;/span> &lt;span class="nb">varying&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="nb">character&lt;/span> &lt;span class="nb">varying&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">RETURNS&lt;/span> &lt;span class="n">void&lt;/span>
&lt;span class="k">LANGUAGE&lt;/span> &lt;span class="n">plpgsql&lt;/span>
&lt;span class="k">AS&lt;/span> &lt;span class="err">$$&lt;/span>
&lt;span class="k">BEGIN&lt;/span>
&lt;span class="k">UPDATE&lt;/span> &lt;span class="n">users&lt;/span> &lt;span class="k">AS&lt;/span> &lt;span class="n">u&lt;/span> &lt;span class="k">SET&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="k">WHERE&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">$$&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="變數宣告">變數宣告&lt;/h2>
&lt;p>&lt;code>:=&lt;/code>來進行變數宣告，&lt;code>=&lt;/code>在postgresSQL比較像是用來比較&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">OR&lt;/span> &lt;span class="k">REPLACE&lt;/span> &lt;span class="k">FUNCTION&lt;/span> &lt;span class="n">my_function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param1&lt;/span> &lt;span class="nb">integer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param2&lt;/span> &lt;span class="nb">integer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">RETURNS&lt;/span> &lt;span class="nb">integer&lt;/span> &lt;span class="k">AS&lt;/span> &lt;span class="err">$$&lt;/span>
&lt;span class="k">DECLARE&lt;/span>
&lt;span class="n">var1&lt;/span> &lt;span class="nb">integer&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">var2&lt;/span> &lt;span class="nb">integer&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">BEGIN&lt;/span>
&lt;span class="n">var1&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">param1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">var2&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">param2&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">RETURN&lt;/span> &lt;span class="n">var1&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">var2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">$$&lt;/span> &lt;span class="k">LANGUAGE&lt;/span> &lt;span class="n">plpgsql&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="while-語法">WHILE 語法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">OR&lt;/span> &lt;span class="k">REPLACE&lt;/span> &lt;span class="k">PROCEDURE&lt;/span> &lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">IN&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="nb">INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">OUT&lt;/span> &lt;span class="k">result&lt;/span> &lt;span class="nb">BIGINT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">LANGUAGE&lt;/span> &lt;span class="n">plpgsql&lt;/span>
&lt;span class="k">AS&lt;/span> &lt;span class="err">$$&lt;/span>
&lt;span class="k">DECLARE&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="nb">INT&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">BEGIN&lt;/span>
&lt;span class="k">result&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">WHILE&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="n">LOOP&lt;/span>
&lt;span class="k">result&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="k">result&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">END&lt;/span> &lt;span class="n">LOOP&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">$$&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="if語法">IF語法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">OR&lt;/span> &lt;span class="k">REPLACE&lt;/span> &lt;span class="k">PROCEDURE&lt;/span> &lt;span class="n">example_if_proc&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="nb">INT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">AS&lt;/span>
&lt;span class="k">BEGIN&lt;/span>
&lt;span class="k">IF&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="k">THEN&lt;/span>
&lt;span class="n">DBMS_OUTPUT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PUT_LINE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a is negative&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">ELSIF&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="k">THEN&lt;/span>
&lt;span class="n">DBMS_OUTPUT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PUT_LINE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a is zero&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">ELSE&lt;/span>
&lt;span class="n">DBMS_OUTPUT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PUT_LINE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a is positive&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">END&lt;/span> &lt;span class="k">IF&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="將select出來的值儲存在一變數中">將SELECT出來的值儲存在一變數中&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">OR&lt;/span> &lt;span class="k">REPLACE&lt;/span> &lt;span class="k">PROCEDURE&lt;/span> &lt;span class="k">public&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_customer_info&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="k">IN&lt;/span> &lt;span class="n">customer_id&lt;/span> &lt;span class="nb">INTEGER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">OUT&lt;/span> &lt;span class="n">customer_name&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="k">OUT&lt;/span> &lt;span class="n">customer_email&lt;/span> &lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="k">LANGUAGE&lt;/span> &lt;span class="n">plpgsql&lt;/span>
&lt;span class="k">AS&lt;/span> &lt;span class="err">$$&lt;/span>
&lt;span class="k">BEGIN&lt;/span>
&lt;span class="k">SELECT&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">customer_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">customer_email&lt;/span>
&lt;span class="k">FROM&lt;/span> &lt;span class="n">customers&lt;/span>
&lt;span class="k">WHERE&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">customer_id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">IF&lt;/span> &lt;span class="k">NOT&lt;/span> &lt;span class="k">FOUND&lt;/span> &lt;span class="k">THEN&lt;/span>
&lt;span class="n">RAISE&lt;/span> &lt;span class="k">EXCEPTION&lt;/span> &lt;span class="s1">&amp;#39;Customer not found&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">END&lt;/span> &lt;span class="k">IF&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">$$&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="將資訊打印出來print">將資訊打印出來(print)&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">OR&lt;/span> &lt;span class="k">REPLACE&lt;/span> &lt;span class="k">procedure&lt;/span> &lt;span class="n">sayHello&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">RETURNS&lt;/span> &lt;span class="n">void&lt;/span>
&lt;span class="k">LANGUAGE&lt;/span> &lt;span class="n">plpgsql&lt;/span>
&lt;span class="k">AS&lt;/span> &lt;span class="err">$$&lt;/span>
&lt;span class="k">DECLARE&lt;/span>
&lt;span class="k">BEGIN&lt;/span>
&lt;span class="n">RAISE&lt;/span> &lt;span class="n">NOTICE&lt;/span> &lt;span class="s1">&amp;#39;hello word:&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">END&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="err">$$&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>GitLab-CI/CD筆記</title><link>https://hoxtonhsu.com/p/gitlab-ci/cd%E7%AD%86%E8%A8%98/</link><pubDate>Mon, 06 Feb 2023 19:50:08 +0800</pubDate><guid>https://hoxtonhsu.com/p/gitlab-ci/cd%E7%AD%86%E8%A8%98/</guid><description>&lt;img src="https://i.imgur.com/b9bWXWs.jpg" alt="Featured image of post GitLab-CI/CD筆記" />&lt;p>&lt;a class="link" href="https://youtu.be/-4XT8-znkuc?list=PLBd8JGCAcUAEwyH2kT1wW2BUmcSPQzGcu" target="_blank" rel="noopener"
>參考影片：為你自己學GitLab CICD&lt;/a>&lt;/p>
&lt;h1 id="為何選擇jenkins">為何選擇Jenkins？&lt;/h1>
&lt;p>目前市面上有三種CI/CD的工具，分別是&lt;/p>
&lt;ol>
&lt;li>Github Action&lt;/li>
&lt;li>GitLab CI/CD&lt;/li>
&lt;li>Jenkins&lt;/li>
&lt;/ol>
&lt;p>而他們各自的難易度如下：&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/2Z5xcnD.jpg"
loading="lazy"
alt="image-20230208032100440"
>&lt;/p>
&lt;h2 id="github-action-jenkins-gitlabcicd-三者之比較">Github Action Jenkins GitlabCICD 三者之比較&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Github Action&lt;/th>
&lt;th>GitLab CI/CD&lt;/th>
&lt;th>Jenkins&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>優點&lt;/td>
&lt;td>簡單易用，可以透過組合 Actions 來設定 CI/CD 流程。&lt;br/>集成與 GitHub 相當良好，方便地與其他 GitHub 工具整合。&lt;br/>&lt;/td>
&lt;td>功能齊全，涵蓋了版本控制、需求管理、測試、打包、部署等。&lt;br/>內建了測試覆蓋率分析、版本回溯、網路推送等工具。&lt;br/>支援更多的發佈平臺和語言，可以支援更多不同的開發團隊。&lt;/td>
&lt;td>功能強大，擁有豐富的插件系統，可以滿足多種 CI/CD 需求。&lt;br/>社區活躍，有大量社區插件可以使用。&lt;br/>可以自定義工作流程，靈活應對複雜需求。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>缺點&lt;/td>
&lt;td>設定複雜的流程可能會比較困難。&lt;br/>有些功能，比如說高級的權限管理，可能比較弱。&lt;/td>
&lt;td>較為複雜，可能會花費一些時間來學習和設定。&lt;br/>有些功能，例如高級的安全性，可能會有額外的費用。&lt;/td>
&lt;td>相對較難學習和使用，不如 GitHub Actions 和 GitLab CI/CD 簡單易用。&lt;br/>配置和管理相對複雜，需要一定的技術支持。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>為什麼CI/CD重要，它做了哪些事情？&lt;/p>
&lt;ul>
&lt;li>在還沒有CI/CD的流程之前，部屬一個web大概是這樣&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/Mvw7aN3.png"
loading="lazy"
alt="image-20230208033136666"
>&lt;/p>
&lt;ul>
&lt;li>CI/CD建立完成後，開發人員只需要專注在任務的完成，而不需要做重複的部屬工作&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/I5CQwCE.png"
loading="lazy"
alt="image-20230208033210513"
>&lt;/p>
&lt;h1 id="名詞解析">名詞解析&lt;/h1>
&lt;h2 id="pipeline">Pipeline&lt;/h2>
&lt;p>就是腳本(script)的意思，用來設計CICD的流程，一個常見的pipeline如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 稱之為階段，可以為每個Job分配階段，常見的比如說有測試階段、打包階段、部屬階段等等，每個job都屬於一個階段&lt;/span>
stages:
- linter
- testing
- building
- deploy
&lt;span class="c1"># 工作流&lt;/span>
workflow:
rules:
- &lt;span class="k">if&lt;/span>: &lt;span class="nv">$CI_COMMIT_BRANCH&lt;/span> &lt;span class="o">==&lt;/span>&lt;span class="s2">&amp;#34;main&amp;#34;&lt;/span> &lt;span class="c1">#若發生什麼事&lt;/span>
when: always &lt;span class="c1">#則做什麼事&lt;/span>
- when: never &lt;span class="c1">#不然則做什麼&lt;/span>
&lt;span class="c1"># 變數，就是那個變數，可以寫在外層的就是全域變數，寫在Job裡面的就是Job變數&lt;/span>
variables:
host_name: &lt;span class="s2">&amp;#34;hoxton&amp;#34;&lt;/span>
&lt;span class="c1"># 稱之為Job&lt;/span>
Helloworld: &lt;span class="c1"># Job名稱&lt;/span>
image: ruby:3.1.2-alpine3.16 &lt;span class="c1">#指定要用什麼image來跑，等同於Executor&lt;/span>
variables: &lt;span class="c1"># Job變數&lt;/span>
my_name: &lt;span class="s2">&amp;#34;hello kitty&amp;#34;&lt;/span>
stage: linter &lt;span class="c1"># 這個Job是什麼階段的&lt;/span>
script: &lt;span class="c1"># 要執行什麼樣的腳本&lt;/span>
- &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;hello world, GitLab! &lt;/span>&lt;span class="nv">$my_name&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
- &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;hello world, GitLab! &lt;/span>&lt;span class="nv">$host_name&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
- chmod +x ./run.sh
- ./run.sh
run_unit_tests: &lt;span class="c1"># Job名稱&lt;/span>
stage: testing &lt;span class="c1"># 這個Job是什麼階段的&lt;/span>
needs: &lt;span class="c1"># 決定Job的順序&lt;/span>
- Helloworld &lt;span class="c1"># 在這些Job完成後才會去做run_unit_tests的Job&lt;/span>
script: &lt;span class="c1"># 要執行什麼樣的腳本&lt;/span>
- &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;執行單元測試&amp;#34;&lt;/span>
before_script: &lt;span class="c1">#在執行腳本之前需要執行什麼腳本&lt;/span>
- &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;安裝套件&amp;#34;&lt;/span>
- &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;設定資料庫連線&amp;#34;&lt;/span>
after_script :#在執行腳本之後需要執行什麼腳本
- &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;刪除不必要的檔案&amp;#34;&lt;/span>
bad_job: &lt;span class="c1"># Job名稱&lt;/span>
stage: testing &lt;span class="c1"># 這個Job是什麼階段的&lt;/span>
script: &lt;span class="c1"># 要執行什麼樣的腳本&lt;/span>
- &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;bad_job&amp;#34;&lt;/span>
build_docker_images: &lt;span class="c1"># Job名稱&lt;/span>
only: &lt;span class="c1"># 指定Job只會在什麼分支執行&lt;/span>
- main
stage: building &lt;span class="c1"># 這個Job是什麼階段的&lt;/span>
script: &lt;span class="c1"># 要執行什麼樣的腳本&lt;/span>
- &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;building docker images&amp;#34;&lt;/span>
deploy_to_production: &lt;span class="c1"># Job名稱&lt;/span>
except: &lt;span class="c1"># 指定Job不在什麼分支執行&lt;/span>
- dev &lt;span class="c1"># 分支名稱&lt;/span>
stage: deploy &lt;span class="c1"># # 這個Job是什麼階段的&lt;/span>
script: &lt;span class="c1"># 要執行什麼樣的腳本&lt;/span>
- &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;deploy to production&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="runner">Runner&lt;/h2>
&lt;p>大概等同於「要用哪台電腦來執行Pipeline」，以下可以證明&lt;/p>
&lt;p>欲執行的script&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">print-location:
tags:
- euno
script:
- &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$HOSTNAME&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/47bZfpT.png"
loading="lazy"
alt="image-20230208114831319"
>&lt;/p>
&lt;p>&lt;strong>若不指定要有用哪台電腦執行，則gitlab會提供，但這時候就是在使用gitlab所提供的服務，免費帳戶每月超過40小時即到達上限，因此需要去註冊一個Runner&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>如何註冊一個Runner&lt;/li>
&lt;/ul>
&lt;p>可以參考GitLab的官方文件
&lt;a href="https://docs.gitlab.com/runner/install/">https://docs.gitlab.com/runner/install/&lt;/a>&lt;/p>
&lt;p>在Ubuntu系統下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">curl -L &lt;span class="s2">&amp;#34;https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sudo bash
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接著執行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt-get install gitlab-runner
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/TZSQrpa.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Kumst5b.png"
loading="lazy"
alt="image-20230208113900501"
>&lt;/p>
&lt;h2 id="executor">Executor&lt;/h2>
&lt;p>代表pipeline所運行的環境，可以是shell，也可以是Docker容器，端看目的而定，但千萬要記得，要執行指定的Executor，&lt;strong>也要看自己的電腦或VM有沒有這個環境&lt;/strong>，之前有遇到一個問題是，我在本地起了一個runner，但一直說找不到pwsd的指令，此時要到gitlab-runner安裝的資料夾去調整toml檔案，將shell改成用powershell運行，&lt;strong>因為window下沒有pwsd這個指定&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/z1cqmhL.png"
loading="lazy"
alt="image-20230208115618286"
>&lt;/p>
&lt;h1 id="如何使用gitlab的cicd工具">如何使用GitLab的CI/CD工具&lt;/h1>
&lt;p>在專案底下新增&lt;code>.gitlab-ci.yml&lt;/code>的檔案，裡面的格式長這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/UYbhpbw.png"
loading="lazy"
alt="image-20230205220750491"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># 稱之為狀態&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">stages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">linter&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">testing&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">building&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">deploy &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 稱之為Job&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">Helloworld&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">linter&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;hello world, GitLab!&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">run_unit_tests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testing&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;執行單元測試&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">before_script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;安裝套件&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;設定資料庫連線&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">after_script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;刪除不必要的檔案&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">bad_job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testing&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">epaewjdqwe&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">build_docker_images&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">building&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;building docker images&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">deploy_to_production&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;deploy to production&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="把image推上gitlab">把Image推上Gitlab&lt;/h1>
&lt;h1 id="問題彙整">問題彙整&lt;/h1>
&lt;h2 id="got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket-at-unix-">Got permission denied while trying to connect to the Docker daemon socket at unix:/// &amp;hellip;&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/qnx1Plu.png"
loading="lazy"
alt="image-20230208005955002"
>&lt;/p>
&lt;p>解決方法：&lt;/p>
&lt;p>在vm中輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">usermod -aG docker gitlab-runner
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&amp;ldquo;usermod -aG docker gitlab-runner&amp;rdquo; 這個指令是用來將 &amp;ldquo;gitlab-runner&amp;rdquo; 用戶加入 &amp;ldquo;docker&amp;rdquo; 群組。 &amp;ldquo;-a&amp;rdquo; 選項用於將用戶附加到指定的群組， &amp;ldquo;-G&amp;rdquo; 選項用於指定群組。&lt;/p>
&lt;p>這通常是為了允許 &amp;ldquo;gitlab-runner&amp;rdquo; 用戶在 GitLab Runner 管理的 CI/CD 流程中執行 Docker 容器。 通過將用戶加入 &amp;ldquo;docker&amp;rdquo; 群組，用戶可以在不需要權限升級的情況下運行 Docker 指令。&lt;/p>
&lt;p>請注意，&amp;ldquo;usermod&amp;rdquo; 指令的確切語法和行為可能因您使用的作業系統而異。 請查閱您的作業系統的文檔以獲取更多信息。&lt;/p>
&lt;h2 id="denied--requested-access-to-the-resource-is-denied">denied : requested access to the resource is denied.&lt;/h2>
&lt;p>八成是你的push沒有寫好，可以參考下面的樣子&lt;/p>
&lt;h2 id="runner會將target檔案刪掉導致dokcer-build不起來">runner會將target檔案刪掉，導致dokcer build不起來&lt;/h2>
&lt;p>GitLab CICD runner在執行每次作業時(Job)，為了保持互相的獨立性，會將Job所產生的檔案，切換至下個檔案時刪除，例如&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mvn clean package
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>時會產生/target的資料夾，在下一個Job時就會被刪除，如下&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/iOKltzR.png"
loading="lazy"
alt="image-20230311105003882"
>&lt;/p>
&lt;p>此時可以在pipeline裡面加上這段&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/S8BFNTE.png"
loading="lazy"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> artifacts:
paths:
- temp/*.jar
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣就代表在下一次Job時，這個目錄底下的東西並不會被刪除&lt;/p></description></item><item><title>使用SSH來連動GITSCM</title><link>https://hoxtonhsu.com/p/%E4%BD%BF%E7%94%A8ssh%E4%BE%86%E9%80%A3%E5%8B%95gitscm/</link><pubDate>Sun, 05 Feb 2023 21:06:21 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E4%BD%BF%E7%94%A8ssh%E4%BE%86%E9%80%A3%E5%8B%95gitscm/</guid><description>&lt;img src="https://i.imgur.com/8ocM55M.png " alt="Featured image of post 使用SSH來連動GITSCM" />&lt;h1 id="步驟">步驟&lt;/h1>
&lt;h2 id="產生key的方式">產生key的方式&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ssh-keygen
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="儲存key的位置">儲存Key的位置&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/O7fBG6U.png"
loading="lazy"
alt="image-20230205211256218"
>&lt;/p>
&lt;p>要改就改，不改就是預設的&lt;/p>
&lt;h2 id="是否要針對privatekey設置密碼">是否要針對privateKey設置密碼&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/6cq91cE.png"
loading="lazy"
alt="image-20230205211413921"
>&lt;/p>
&lt;p>使用這組Key時需不需要額外使用密碼，不輸入就是空白&lt;/p>
&lt;h2 id="查看產生的key">查看產生的key&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/s4Zz9fr.png"
loading="lazy"
alt="image-20230205211703737"
>&lt;/p>
&lt;p>.pub後綴的就代表是pubKey&lt;/p>
&lt;h2 id="進入主機內將private-key加入">進入主機內，將private Key加入&lt;/h2>
&lt;p>在.ssh底下會有一個authorized_keys的檔案
將privateKey放入其中就好&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/xnGrZmN.png"
loading="lazy"
alt="image-20230307235351522"
>&lt;/p>
&lt;p>輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">cat id_rsa.pub
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來查看&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/eRFOrX4.png"
loading="lazy"
alt="image-20230205211814078"
>&lt;/p>
&lt;p>此時將這串複製下來，貼到GitHub的SSH Key設定&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/JuU3kev.png"
loading="lazy"
alt="image-20230205213904945"
>&lt;/p>
&lt;p>接著只要上傳是使用SSH方式上傳，就不需要再登入github了&lt;/p></description></item><item><title>Wednesday 星期三與她的暈船夥伴們</title><link>https://hoxtonhsu.com/p/wednesday-%E6%98%9F%E6%9C%9F%E4%B8%89%E8%88%87%E5%A5%B9%E7%9A%84%E6%9A%88%E8%88%B9%E5%A4%A5%E4%BC%B4%E5%80%91/</link><pubDate>Sun, 29 Jan 2023 17:20:08 +0800</pubDate><guid>https://hoxtonhsu.com/p/wednesday-%E6%98%9F%E6%9C%9F%E4%B8%89%E8%88%87%E5%A5%B9%E7%9A%84%E6%9A%88%E8%88%B9%E5%A4%A5%E4%BC%B4%E5%80%91/</guid><description>&lt;img src="https://i.imgur.com/C9FgAaF.jpg" alt="Featured image of post Wednesday 星期三與她的暈船夥伴們" />&lt;h1 id="緣起">緣起&lt;/h1>
&lt;p>年假實在太無聊了，有點廢到連書都讀不下去，就打開Netflix想看看有什麼好看的，原本想看初戀First Love的，但無奈我對於愛情類型的東西實在沒什麼太大的興趣，正好看到了wednesday出現在推薦名單上，稍微看了一下預告，覺得Wednesday這種厭世到極限的人設深得我心，再搭配上女配角伊妮形成的反差，兩邊的對比實在太過強烈，讓我忍不住好奇到底這部在演什麼，於是就點進去了。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/nYPidWy.jpg"
loading="lazy"
alt="image-20230129234015442"
>&lt;/p>
&lt;p>先講結論，我覺得整部人設滿分，劇情真的不行，後面劇情感覺沒一個人是用腦袋在做事的，看完只覺得我的智商被狠狠的強暴了一遍。&lt;/p>
&lt;p>前面四集算是蠻多記憶點的，比如說舞會、拉大提琴、雕像爆破等等，對於星期三的角色塑造也算豐滿(就是個怪胎)。但無奈到後面幾集感覺整部劇情的調性就開始脫離了Addams Family的那種黑色幽默。&lt;/p>
&lt;p>首先是第五集，這一集家庭探訪日，校長要求Addams一家去做心理諮商，我本以為可以看到她們一家人「與眾不同」的那面，比如說互相挖苦、愛彼此愛到要殺死對方的那一種關心方式，但沒想到話鋒一轉，她們一家人居然整整齊齊的認真在做一場諮商，當問到Gormoz年輕時是否真的殺過人，Morticia還牙起來，要Wedensday不要再繼續追問下去了。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/zxyMpNT.jpg"
loading="lazy"
alt="VideoScreenshot&amp;ndash;5-10’21”"
>&lt;/p>
&lt;p>當時心裡在想，這家人不是一群outcast嗎？怎麼突然間會這麼嚴肅地在講這件事情？整場諮商下來完全沒有任何Addams Family的感覺，跟一般家庭沒什麼不同的地方。直到後面謎題揭曉時，我還想說這麼嚴肅肯定是有什麼天大的事情所以才不能說，原來就只是爸爸幫媽媽背黑鍋而已，請問這件事情有必要瞞著Wednesday嗎？有必要故弄玄虛嗎？&lt;/p>
&lt;p>緊接著到第六集，莫名其妙的Xavier跟Tyler都對Wednesday暈船，而且暈船的不清，相繼說出什麼「舞會過後，我只想忘掉妳，卻都忘不掉」&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/H9Aab9M.jpg"
loading="lazy"
alt="VideoScreenshot&amp;ndash;6-17’14” (1)"
>「雖然可能是我的錯覺，星期三，但你明明不停對我明示暗示」，我的天，我以為點進來是黑色幽默的懸疑片，沒想到點進來的原來是三角戀修羅場連續劇，再回頭看看前面的劇情，實在不覺得星期三跟這兩人的互動有什麼地方會讓人暈船的，可能這兩人都是易暈體質吧，只能說Wednesday有海王天份，深諳各種小心機吧，有一幕好像是Xavier看到Wednesday跟Tyler去舞會還是啥的，再生悶氣，沒想到Wedensday居然問Xavier到底在不開心什麼，我當時心裡在想「你這不是很懂嗎？海王Wednesday」，只能說男人終究是抵抗不了神祕正妹的邀請，唉。&lt;/p>
&lt;p>到了後面進入主線，Wednesday騙Enid跟Tyler想要出去，結果實際上是去Gates家調查，結果調查不順遭到Hyde的攻擊，結尾時看到Enid生氣的對Wedensday說「你根本不在乎你身邊的人，你只在乎你自己」時，我心裡想說終於啊，有人終於講出實話了，結果下一集Enid又活蹦亂跳的來找Wednesday聊天，不只是這幕，其實之前也有很多類似的劇情&lt;/p>
&lt;p>Wednesday搞了些什麼讓大家很不爽，結果過沒幾集大家又主動來找Wednesday聊天，道歉。奇怪，到底為什麼要跟她道歉啊，難道人長得正就可以這樣子嗎。&lt;/p>
&lt;p>接著劇情在往下走，發現更加弱智，星期三指認Xavier就是兇手，結果實際上抓錯了，我個人認為沒問題，畢竟人總是有出錯的時候，而且確實很多證據都指向Xavier。但當Wednesaday說她抓錯，Tyler才是兇手時，她的快樂夥伴依然是無條件地相信Wednesday，甚至連證據都沒提供，她的快樂夥伴沒有絲毫的懷疑她講得到底是真是假，整個抓捕過程細絲極恐，我甚至覺得，假使Tyler不是兇手，Wednesday說Ajax是兇手，那群快樂夥伴也是會很樂意地把Ajax抓起來上供給Wednesday。也就是說其實星期三的行為根本是村霸的行為吧，說你有罪就有罪，抓犯人不靠腦袋而是靠拳頭，全程硬A，甚至最後抓犯人還是靠幻視才抓到的，0邏輯思考、解謎。&lt;/p>
&lt;p>到最後一集則是弱智情節大集合，知道主謀是Thornhill老師，校長用變形術變成Tyler的樣子去跟Wednesday包圍她，結果校長在Thornhill面前解除變形後，我本以為會有什麼刺激的對決畫面，結果Thornhill只是提起「手中」的針筒，就往校長的「脖子」刺下去，校長就死了，那到底為什麼要變形接近老師啊，不能躲在旁邊聽就好嗎？退一萬步來說，校長你真的不是在演嗎？你身高190，老師身高155，能不能反應一下啊，結果就這樣死了，完全沒有任何推進劇情的作用，校長在不在那個場景對於劇情影響都不大，真的就只是為了過來死而已。&lt;/p>
&lt;p>後來Crackstone復活，我本以為會有什麼超炫的技能，結果完全沒有，戰力值低落到我甚至認為Nevermore學生每個人都衝上去，他就會活活當場被打死在現場，就只有進Nevermore後放個火焰風暴後，接著就拿起法仗當一個進戰法師，跟Wednesday近身平A起來，不知道是不是腦袋還沒熱起來，忘記自己是一個法師，應該拉開距離，或是趁隙放個什麼魔法之類的，最後還被Bianca從後面背刺，當他轉過去打飛Bianca後，接著又被Wednesday背刺，看到這幕的時候我還以為在看周星馳的零零漆大戰金鎗客，這種古靈金怪槍的幽默沒想到也被洋人發揚光大去了。最後Thornhill老師拿了一把槍走出來時，我心裡在想「終於啊！大人，時代變了，該拿槍了」，結果拿槍抖了老半天，講了一堆話就是沒開下去，結果後面被蜜蜂叮的時候才開槍，真的不是當年腦子進水嗎？Crackerstone復活後不就叫你閉嘴，警告你話太多了嗎？結果最後還是沒把他的話聽進去，難怪不成大氣。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/H8Z2aaX.jpg"
loading="lazy"
alt="VideoScreenshot&amp;ndash;8-39’29”"
>&lt;/p>
&lt;p>最後快樂大結局，該發糖的發糖、該狼化的狼化，Xavier繼續暈船Wednesday，結尾還送了台Iphone給Wednesday，看到這幕時，我忽然想起知道為什麼Xavier一開始會懷疑自己被Bianca蠱惑，從劇情表現上看起來他確實是暈到神智不清，我也懷疑他最後真的被星期三蠱惑了，印證了那句「星期三虐我千百遍，我仍待她如初戀」，鋼鐵星期三粉實至名歸。&lt;/p>
&lt;h1 id="結尾">結尾&lt;/h1>
&lt;p>認真回想了一下，整部劇情最大該吐槽的點就是Wednesday身邊的人對她近乎盲目的包容，校長包容她、警長包容她、狼妹包容她、男配也包容她，Wednesday至始至終除了小手外，幾乎沒對任何人道過歉，也沒深刻的反省，但就是所有的人都會莫名其妙的原諒她，毫無邏輯與深度可言。第二季出的話我應該還是會看，畢竟人設實在太香了，希望第二季不要在虎頭蛇尾了。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/L1o4eCd.jpg"
loading="lazy"
alt="VideoScreenshot&amp;ndash;8-44’45”"
>&lt;/p></description></item><item><title>Oracle?SAP?鼎新?淺談這些ERP背後的是什麼-SQL資料庫</title><link>https://hoxtonhsu.com/p/oraclesap%E9%BC%8E%E6%96%B0%E6%B7%BA%E8%AB%87%E9%80%99%E4%BA%9Berp%E8%83%8C%E5%BE%8C%E7%9A%84%E6%98%AF%E4%BB%80%E9%BA%BC-sql%E8%B3%87%E6%96%99%E5%BA%AB/</link><pubDate>Thu, 26 Jan 2023 17:50:33 +0800</pubDate><guid>https://hoxtonhsu.com/p/oraclesap%E9%BC%8E%E6%96%B0%E6%B7%BA%E8%AB%87%E9%80%99%E4%BA%9Berp%E8%83%8C%E5%BE%8C%E7%9A%84%E6%98%AF%E4%BB%80%E9%BA%BC-sql%E8%B3%87%E6%96%99%E5%BA%AB/</guid><description>&lt;img src="https://i.imgur.com/6aiiDXi.png" alt="Featured image of post Oracle?SAP?鼎新?淺談這些ERP背後的是什麼-SQL資料庫" />&lt;h1 id="前言">前言&lt;/h1>
&lt;p>記得在某次外勤的時候，那時候好像是要做稅抽還是要查什麼東西，需要用客戶的電腦SAP裡面查一些資料，可是我按了老半天，一直出現錯誤，迷迷糊糊地從那些文字中拼湊出一些單詞，只記得有什麼SQL Error，當時把這件事情跟客戶的會計反應，他旋即請了工程師過來處理，弄了一下之後跟我說需要明天才會好，要我明天再去撈&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/23Rnl3H.png"
loading="lazy"
alt="image-20230126231514168"
>&lt;/p>
&lt;p>(範例，非當事錯誤)&lt;/p>
&lt;p>後來這幾年工作上常常接觸到資料庫的東西，最近又想起這件事來，也總算知道當時遇到的錯誤是什麼了&lt;code>我猜是IP連不到&lt;/code>。因此繼續趁著年假這個真的不知道做什麼事的時間點來科普一下ERP系統後面的東西，&lt;strong>SQL DataBase是什麼&lt;/strong>？&lt;/p>
&lt;h1 id="什麼是sql">什麼是SQL&lt;/h1>
&lt;p>首先要知道SQL怎麼發音，我都念SQL，但也有些人念SQL，SQL的念法是，&lt;code>C闊(Ess-cue-ell')&lt;/code>。SQL這個詞的由來有人說沒意義，就是叫SQL，也有人認為是有意義的，也就是Structured Query Language(結構化查詢語言)的縮寫。簡而言之SQL就是用來跟資料庫(Database)溝通的一種Syntax(語法)，SQL與資料庫的關係像魔法師與魔法書的關係，魔法師透過詠唱咒語(SQL語法)來使用魔法書(Database)的能力。&lt;/p>
&lt;p>第一次接觸到SQL是在大四大三的時候吧，那時候好像有個系必修是什麼資訊概論類似的課程，老師上課的時候有提到一個東西，他的介面是隻海豚，然後有很多奇怪的按鈕，&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/OCEIz1x.png"
loading="lazy"
alt="image-20230126232635060"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/UNAw0Ua.png"
loading="lazy"
alt="image-20230126232700834"
>&lt;/p>
&lt;p>當時的我完全不知道這些是啥，甚至連SQL是什麼都沒有半點頭緒，那門課我記得我只負責處理一些很瑣碎的事情，其他都靠我同學Carry過的XD。結果沒想到逃的了一時，逃不了一世，現在天天都會看到，感嘆命運多舛啊。&lt;/p>
&lt;p>話說回來，所以什麼是SQL呢？他是用來做什麼的？我們首先先來講一下什麼是&lt;strong>關聯式資料庫&lt;/strong>。大家應該有上過學吧，學校裡，有班級、有學生、有班導，有科任老師，這些東西都是互相有關聯的，比如說一個班導可以有很多學生，但每個學生只能有一個班導，一個科任老師也可以有很多學生，每個學生也可以有很多的科任老師。用來記錄這些資訊的資料庫就是所謂的關聯式資料庫&lt;code>注：有關聯式就會有非關聯式資料庫，但這部分我就不熟了&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/5SQaANf.png"
loading="lazy"
alt="image-20230126235342454"
>&lt;/p>
&lt;p>(注：我事後回來看，我覺得這樣設計有很多問題，其實可以在精簡一點的，大佬就別鞭太大力了）&lt;/p>
&lt;p>畫成關聯圖大概就是長這樣，原諒我畫的真的有點醜，不過大概看的出來它們彼此有哪些關係吧？學生跟班級、導師、科任老師有關聯、班級跟學生還有班導有關聯、班導跟科任老師沒有關聯(其實這邊設計的不太好，會違反資料正規化，但只是示範而已）。SQL Database我們每天都會碰到，比如說你每天上車逼的悠遊卡，你的卡號就被記在政府的悠遊卡SQL Database裡面，只要你遺失後，就會把你的那筆資料拉出來，標注已遺失。或是會計師考試報名時，會給你一組准考證號碼，所以考試院的SQL資料庫裏面，也會有這筆准考證的資料，這筆資料包含你的身分證、考試成績等等，只要涉及資料儲存的部分，其實背後都有資料庫的存在，也包含你的手機裡面的通訊錄等等，裡面都有小型的資料庫在裡面處理你的information。&lt;/p>
&lt;h1 id="sql的實作">SQL的實作&lt;/h1>
&lt;p>多說無益，我們就用線上版的SQL編輯器來看看SQL是怎麼運作的吧，建議這邊點開我上面的HackMd，我有用Gif的方式錄影下來。&lt;/p>
&lt;p>線上的SQL編輯器：https://sqliteonline.com/&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/7VRZOgp.png"
loading="lazy"
alt="image-20230127001046262"
>&lt;/p>
&lt;p>點進去後會看到裡面長這個樣子，時間寶貴，我把左邊的欄位講一下就好，其實左邊就是各是各樣的SQL Database，不同的Database都有一些特性&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/haqbgQm.png"
loading="lazy"
alt="image-20230127001150655"
>&lt;/p>
&lt;ul>
&lt;li>SQLite：輕量化的SQL資料庫，常用於手機端。&lt;/li>
&lt;li>MariaDB：MySQL的作者獨立出來開發的SQL資料庫&lt;/li>
&lt;li>PostgreSQL：也是SQL資料庫&lt;/li>
&lt;li>MSSQL：微軟開發的SQL資料庫，會有微軟的奧援&lt;/li>
&lt;/ul>
&lt;p>當然不只這些，像常聽到的Oracle，不只有做ERP系統，其實還有做SQL資料庫，當然Oracle做的不止這些。話說回來，這些語法都大同小異，但為了方便各位，我們這次就用SQLite做示範，因為這個頁面一點進來就是SQLite了。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/tshXLM8.png"
loading="lazy"
alt="image-20230127001853263"
>&lt;/p>
&lt;p>這個紅色框框的地方就是讓我們打SQL語法的部分，我們先來創一些資料吧！秉持著能交給別人做的事情絕對不自己來的原則，這部分我們請ChatGPT來幫我們就好：）&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/tJsfb2U.png"
loading="lazy"
alt="image-20230127002300239"
>&lt;/p>
&lt;p>ChatGPT產生的語法如上，這邊先講解一下會出現的名詞代表的意思，首先&lt;/p>
&lt;ul>
&lt;li>Table：近似於Excel裡面的活頁表，每個活頁表都拿來描述不同的東西，比如說學生這張Table就是拿來存放跟學生有關的資料，比如說姓名、學號之類的東西。&lt;/li>
&lt;li>DROP：近似於刪除&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">CREATE&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="n">Name&lt;/span> &lt;span class="nb">TEXT&lt;/span>&lt;span class="p">,&lt;/span>　
&lt;span class="n">ClassTeacherName&lt;/span> &lt;span class="nb">TEXT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">StudentID&lt;/span> &lt;span class="nb">INTEGER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">ClassroomID&lt;/span> &lt;span class="nb">INTEGER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">Birthdate&lt;/span> &lt;span class="nb">DATE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">Subjects&lt;/span> &lt;span class="nb">TEXT&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣的語法代表創建一張名為Student的表格，裡面要有&lt;/p>
&lt;ul>
&lt;li>名為Name的欄位，資料型別是文字&lt;/li>
&lt;li>名為ClassTeacherName的欄位，資料型別是文字&lt;/li>
&lt;li>名為StudentID的欄位，資料型別是數字&lt;/li>
&lt;li>名為ClassroomID的欄位，資料型別是數字&lt;/li>
&lt;li>名為Birthdate的欄位，資料型別是DATE(日期，亦即只能存放日期格式的東西)&lt;/li>
&lt;li>名為Subjects的欄位，資料型別是文字&lt;/li>
&lt;/ul>
&lt;p>&lt;code>資料型別代表這個欄位只能存什麼東西，如果資料型別是數字，就代表只能存在羅馬數字，如果輸入 天氣 就會出錯&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="c1">-- 如果已經存在這些表就刪除，確保每次都是產生全新的Table
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">DROP&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="k">IF&lt;/span> &lt;span class="k">EXISTS&lt;/span> &lt;span class="n">demo&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">DROP&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="k">IF&lt;/span> &lt;span class="k">EXISTS&lt;/span> &lt;span class="n">Student&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">DROP&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="k">IF&lt;/span> &lt;span class="k">EXISTS&lt;/span> &lt;span class="n">Teacher&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">DROP&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="k">IF&lt;/span> &lt;span class="k">EXISTS&lt;/span> &lt;span class="n">Classroom&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">DROP&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="k">IF&lt;/span> &lt;span class="k">EXISTS&lt;/span> &lt;span class="n">SubjectTeacher&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">-- Create Student table
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="n">Name&lt;/span> &lt;span class="nb">TEXT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">ClassTeacherName&lt;/span> &lt;span class="nb">TEXT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">StudentID&lt;/span> &lt;span class="nb">INTEGER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">ClassroomID&lt;/span> &lt;span class="nb">INTEGER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">Birthdate&lt;/span> &lt;span class="nb">DATE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">Subjects&lt;/span> &lt;span class="nb">TEXT&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="c1">-- Create Teacher table
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="n">Teacher&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="n">Name&lt;/span> &lt;span class="nb">TEXT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">TeacherID&lt;/span> &lt;span class="nb">INTEGER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">ClassroomID&lt;/span> &lt;span class="nb">INTEGER&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="c1">-- Create Classroom table
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="n">Classroom&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="n">ClassroomID&lt;/span> &lt;span class="nb">INTEGER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">ClassID&lt;/span> &lt;span class="nb">INTEGER&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;span class="c1">-- Create SubjectTeacher table
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span> &lt;span class="k">TABLE&lt;/span> &lt;span class="n">SubjectTeacher&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="n">Name&lt;/span> &lt;span class="nb">TEXT&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">TeacherID&lt;/span> &lt;span class="nb">INTEGER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">Subject&lt;/span> &lt;span class="nb">TEXT&lt;/span>
&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/IFDjvKq.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>完成後我們可以看到我們的左邊就出現很多的東西，就代表我們成功創建了Table喔！&lt;/p>
&lt;p>但此時Table裡面的東西都是空的，我們試著塞一些資料進去Table裡面吧，這邊再次邀請我們的勞模ChatGPT&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/qa8OxpY.png"
loading="lazy"
alt="image-20230127003349573"
>&lt;/p>
&lt;p>這邊的INSERT其實就是新增資料進去的意思。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="c1">-- Insert data into the Teacher table
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Teacher&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TeacherID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;John Smith&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">101&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Teacher&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TeacherID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Jane Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">102&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Teacher&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TeacherID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Bob Johnson&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">103&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">-- Insert data into the Classroom table
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Classroom&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassID&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Classroom&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassID&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">102&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Classroom&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassID&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">103&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">-- Insert data into the SubjectTeacher table
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">SubjectTeacher&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TeacherID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;John Smith&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Math&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">SubjectTeacher&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TeacherID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Jane Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Science&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">SubjectTeacher&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TeacherID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Bob Johnson&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;English&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">SubjectTeacher&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TeacherID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Bob Johnson&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;History&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">-- Insert data into the Student table
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassTeacherName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StudentID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Birthdate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subjects&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Alice Smith&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;John Smith&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2000-01-01&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Math, Science&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassTeacherName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StudentID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Birthdate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subjects&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Bob Brown&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;John Smith&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2001-01-01&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Math, English&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassTeacherName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StudentID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Birthdate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subjects&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Charlie Johnson&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Jane Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">102&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2002-01-01&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Science, History&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassTeacherName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StudentID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Birthdate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subjects&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;David Wilson&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Jane Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">102&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2003-01-01&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Science, English&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassTeacherName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StudentID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Birthdate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subjects&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Eve Davis&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Bob Johnson&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">103&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2004-01-01&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;English, History&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassTeacherName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StudentID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Birthdate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subjects&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Frank Miller&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;John Smith&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2005-01-01&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Math&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassTeacherName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StudentID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Birthdate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subjects&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Gary Moore&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Jane Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">102&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2006-01-01&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Science&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassTeacherName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StudentID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Birthdate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subjects&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Helen Anderson&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Bob Johnson&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">103&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2007-01-01&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;English, History&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassTeacherName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StudentID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Birthdate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subjects&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Irene Thomas&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;John Smith&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">101&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2008-01-01&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Math, Science&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">INSERT&lt;/span> &lt;span class="k">INTO&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassTeacherName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StudentID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ClassroomID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Birthdate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Subjects&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">VALUES&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;James Hernandez&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Jane Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">102&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;2009-01-01&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Science, English&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/MQUkQKO.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>完成後，在Table上面點選右鍵，選擇SELECT即可這張表的所有屬性喔 ！&lt;/p>
&lt;ul>
&lt;li>教室Table&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/GcMuljK.png"
loading="lazy"
alt="image-20230127004124644"
>&lt;/p>
&lt;ul>
&lt;li>學生Table &lt;code>這邊也違反資料庫正規化，一個應該只塞一筆資料的原則，我的subject塞了複數筆資料，但單純Demo而已，有點懶得改了&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/VcUjfIc.png"
loading="lazy"
alt="image-20230127004142876"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>科任老師Table&lt;img src="https://i.imgur.com/c4JRzJa.png"
loading="lazy"
alt="image-20230127004158587"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>老師Table&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/K9jpTXv.png"
loading="lazy"
alt="image-20230127004517825"
>&lt;/p>
&lt;h1 id="sql語法的介紹">SQL語法的介紹&lt;/h1>
&lt;p>我們一樣在框框裡面操作&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">FROM&lt;/span> &lt;span class="n">Teacher&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/vUOj64t.png"
loading="lazy"
alt="image-20230127004832304"
>&lt;/p>
&lt;p>這個語法的意思就是 SELECT&lt;code>選擇&lt;/code> *&lt;code>全部欄位&lt;/code> FROM&lt;code>來自&lt;/code> Teacher&lt;code>這張表&lt;/code>，翻成白話文的意思就是，幫我選出Teacher這張表的全部內容，當然我們也可以再複雜一點，比如說&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">FROM&lt;/span> &lt;span class="n">Teacher&lt;/span> &lt;span class="k">WHERE&lt;/span> &lt;span class="n">teacherid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/z9vNNK2.png"
loading="lazy"
alt="image-20230127005357191"
>&lt;/p>
&lt;p>也就是從Teacher這張表裡面選出TeacherId為2的欄位&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">FROM&lt;/span> &lt;span class="n">Student&lt;/span> &lt;span class="k">WHERE&lt;/span> &lt;span class="n">subjects&lt;/span> &lt;span class="k">LIKE&lt;/span> &lt;span class="s1">&amp;#39;%Math%&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/Ea8nwnc.png"
loading="lazy"
alt="image-20230127011847946"
>&lt;/p>
&lt;p>當然我們再複雜一點點，這個語法會找出所有在Student這張Table裡面subjects欄位裡有Math的學生，聽起來有點繞口對吧XD，接著我們就把這些語法組合起來，試著找看看&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="k">SELECT&lt;/span> &lt;span class="n">Student&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="o">*&lt;/span>
&lt;span class="k">FROM&lt;/span> &lt;span class="n">Student&lt;/span>
&lt;span class="k">JOIN&lt;/span> &lt;span class="n">SubjectTeacher&lt;/span> &lt;span class="k">ON&lt;/span> &lt;span class="n">Student&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ClassTeacherName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SubjectTeacher&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Name&lt;/span>
&lt;span class="k">WHERE&lt;/span> &lt;span class="n">Birthdate&lt;/span> &lt;span class="k">BETWEEN&lt;/span> &lt;span class="s1">&amp;#39;2001-01-01&amp;#39;&lt;/span> &lt;span class="k">AND&lt;/span> &lt;span class="s1">&amp;#39;2005-12-31&amp;#39;&lt;/span> &lt;span class="k">AND&lt;/span> &lt;span class="n">SubjectTeacher&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Subject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Math&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/P1RI9MH.png"
loading="lazy"
alt="image-20230127011903188"
>&lt;/p>
&lt;p>我們再複雜一點點點點，我們想找出所有在2001年至2005年出生，並且有修Math的學生，看到這邊這個語法大家是不是有點感覺了，是不是很像我們去撈資料常常用到的，要撈發生在本年度的100018應付帳款全部資料XD。其實背後的SQL語法就像這樣子。&lt;/p>
&lt;p>當然實際上的情況SQL語法還會更複雜一點，因為這些這是關聯式資料庫，彼此間可能可以關聯到很遠很遠的Table，只是為了做科普而已就不弄得那麼複雜了。另外SQL Syntax(語法)也不只SELECT，常見的還有UPDATA, DELETE, CREATE等等，只是這些審計人員一般不會碰到。&lt;/p>
&lt;h1 id="結語">結語&lt;/h1>
&lt;p>其實沒啥想講的，只是覺得很閒而已，想說趁年假時後把想寫的東西寫一寫，順便也當科普一樣，感覺會計這個圈子好像很少人在寫科普或是知識介紹的東西，就花個一兩個小時的時間寫一下，如果對SQL有興趣的話，可以去載來玩看看&lt;/p>
&lt;ul>
&lt;li>MySQL：全英介面，一開始可能不太友好，但網路上資源最多&lt;/li>
&lt;li>MSSQL：微軟的SQL，有中文介面，但網路上資源相對較少，其實SQL的語法都大同小異，但其實還是有一些不同處&lt;/li>
&lt;li>PostgreSQL：通常不會用這個入門，我個人覺得它GUI的介面很爛，我用這個的話通常都是用Terminal&lt;/li>
&lt;li>SQLite：不太推薦，因為這算是輕量化版的，有很多資料型別是特規的。&lt;/li>
&lt;/ul>
&lt;p>我文章常提到的資料庫正規化介紹如下&lt;/p>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10229472">https://ithelp.ithome.com.tw/articles/10229472&lt;/a>&lt;/p>
&lt;p>忙季加油！債見&lt;/p></description></item><item><title>淺談一些實用的快捷鍵</title><link>https://hoxtonhsu.com/p/%E6%B7%BA%E8%AB%87%E4%B8%80%E4%BA%9B%E5%AF%A6%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%8D%B5/</link><pubDate>Thu, 26 Jan 2023 00:31:43 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E6%B7%BA%E8%AB%87%E4%B8%80%E4%BA%9B%E5%AF%A6%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%8D%B5/</guid><description>&lt;img src="https://i.imgur.com/Ln2xqzT.png" alt="Featured image of post 淺談一些實用的快捷鍵" />&lt;p>想講一些實用的，但卻很少人知道的一些電腦使用的功能，知道這些對做底稿、翻憑證不會有太大的幫助，但會用的話我個人覺得可以節省很多時間，供大家參考。&lt;/p>
&lt;h1 id="快速關機">快速關機&lt;/h1>
&lt;p>window+D：回到桌面&lt;/p>
&lt;p>在桌面Alt+F4即可跳出關機選項&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/A0TkM9G.png"
loading="lazy"
alt="image-20230126004515683"
>&lt;/p>
&lt;p>記得當初在外勤的時候，只要組長說撤的時候我就會用最快的速度關機XD，那時候同事都問我怎麼用的，這就是訣竅，當然也可以選擇重新啟動或休眠，看自己喜好決定。&lt;/p>
&lt;h1 id="截圖">截圖&lt;/h1>
&lt;p>window+shift+s&lt;/p>
&lt;p>這個應該最基本，在Window10以上的系統可以透過這個shortcut來打開截圖視窗，就拿來貼圖片給組長，跟組長說我哪邊不會QQ&lt;/p>
&lt;h1 id="快速打開excel-word-記事本-小畫家計算機">快速打開Excel, Word, 記事本, 小畫家,計算機&amp;hellip;&lt;/h1>
&lt;p>Window+R：跳出執行選項&lt;/p>
&lt;p>在裡面輸入以下的內容已打開不同的Application&lt;/p>
&lt;p>mspaint：打開小畫家&lt;/p>
&lt;p>notepad：記事本&lt;/p>
&lt;p>winword：word&lt;/p>
&lt;p>excel：excel&lt;/p>
&lt;p>計算機：calc&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/BQZCVyH.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;h1 id="快速打開工作列的應用程式">快速打開工作列的應用程式&lt;/h1>
&lt;p>window+1&lt;/p>
&lt;p>可以打開工作列的第一個應用&lt;/p>
&lt;p>window+2&lt;/p>
&lt;p>可以打開工作列的第二個應用，以此類推&amp;hellip;&lt;/p>
&lt;p>這個指令我大部分都是用來開Chrome，或是Excel之類的東西&lt;/p>
&lt;h1 id="瀏覽器快速選擇搜尋列">瀏覽器快速選擇搜尋列&lt;/h1>
&lt;p>打開Chrorm後，打alt+D就可以定位到搜尋列，並且在這邊按Ctrl+1,2,3&amp;hellip;即可切換至不同的頁面，通常是我拿來打混摸魚的時候用的，Ctrl+T則可以打開新的分頁，所以兩個和再一起就是，開啟一個新分頁並搜尋，如果旁邊有人過來就立刻Ctrl+w關閉當前頁面，避免摸魚被抓包。&lt;/p></description></item><item><title>如何製作會計的電子筆記？Markdown的介紹</title><link>https://hoxtonhsu.com/p/%E5%A6%82%E4%BD%95%E8%A3%BD%E4%BD%9C%E6%9C%83%E8%A8%88%E7%9A%84%E9%9B%BB%E5%AD%90%E7%AD%86%E8%A8%98markdown%E7%9A%84%E4%BB%8B%E7%B4%B9/</link><pubDate>Sun, 22 Jan 2023 23:15:25 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%A6%82%E4%BD%95%E8%A3%BD%E4%BD%9C%E6%9C%83%E8%A8%88%E7%9A%84%E9%9B%BB%E5%AD%90%E7%AD%86%E8%A8%98markdown%E7%9A%84%E4%BB%8B%E7%B4%B9/</guid><description>&lt;img src="https://i.imgur.com/c968Ywa.png" alt="Featured image of post 如何製作會計的電子筆記？Markdown的介紹" />&lt;h1 id="前言">前言&lt;/h1>
&lt;p>年假回老家實在是太無聊了，想把這幾年學到的東西分享一下，希望可以幫助一些莘莘學子，能用更有效率的方式來整理筆記。&lt;/p>
&lt;p>記得大二或是大三的時候很沉迷於作筆記這件事情，最喜歡做的事情，就是用一兩個下午把那個禮拜所上的成會或是中會整理成筆記，以利後面的複習。不得不說當時這樣做的回饋還不錯，當時中會跟成會的成績都還算不錯。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/CFebBUe.png"
loading="lazy"
alt="image-20230122232625364"
>&lt;/p>
&lt;p>（當時很認真的筆記）&lt;/p>
&lt;h1 id="紙本筆記的缺點">紙本筆記的缺點&lt;/h1>
&lt;p>這樣的筆記在當時應付期中考期末考還行，因為這些筆記可能都是一兩個月寫的，都還算有印象，但是當我準備研究所的時候就發現幾個問題了，首先&lt;/p>
&lt;ol>
&lt;li>難以搜尋：面對海量的資料，我很難在第一時間找到我需要的資訊，比如說我想要找一個利息資本化的定義，以及它的細項，我除非前一陣子剛寫，或是我版面真的寫得很好，不然我不能第一時間的找到我想要的資訊。比如說稅法的部分就分成很多塊，比如說遺產稅贈與稅等等的，數量真的太多，且稅率也類似，常常找不到自己想要的地方。&lt;/li>
&lt;li>難以擴充：紙質的筆記一旦寫下去之後就難以修改，無法滿足我越來越多的知識積累，比如說大家都知道的金融資產那一個章節，可能光一個範例就可以寫個2,30個也不為過，每個範例可能都有一些細節要抄進筆記裡面，這樣日積月累下去，那一頁的筆記越記越多、越寫越亂不易閱讀。&lt;/li>
&lt;li>耗時：耗時是最大的問題，一頁的筆記我可能需要寫個半小時，雖然說寫的當下其實就記得很清楚了，但是卻非常的消耗時間，往往做完這些筆記我的假日就這樣沒了，實在是不太行，且手寫筆記非常吃手寫的品質，如果心一旦亂起來，亂寫一通，那這筆記基本上閱讀不能，只是寫給當時的自己看的，不利日後準備研究所或是會計師考試。&lt;/li>
&lt;/ol>
&lt;p>雖然1、2的問題都可以透過Ipad的手寫筆記來解決一些問題，但最大的問題就是第3點，當時有嘗試過很多方式，比如說用excel來記筆記(但儲存格不方便修改與擴充)，或是用word來寫，但word真的非常不適合拿來寫筆記，首先，work本身是不支援你打出類似分錄格式的東西的，就算可以，那個代價我記得也很大，其次，光是格式的部分可能就要設定個老半天，再加上在寫筆記的途中還需要移動滑鼠去調整現在想要的是&lt;/p>
&lt;ol>
&lt;li>&lt;/li>
&lt;/ol>
&lt;ol start="2">
&lt;li>&lt;/li>
&lt;li>&lt;/li>
&lt;/ol>
&lt;p>或是&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>這樣的格式真的有點打斷思緒。&lt;/p>
&lt;p>因此我的需求是這樣&lt;/p>
&lt;ol>
&lt;li>方便撰寫，希望不需要去切什麼格式&lt;/li>
&lt;li>支援圖片上傳，可以讓我傳圖片上去，可能有些範例或是老師在黑板上畫的東西，需要做成筆記來看&lt;/li>
&lt;li>要可以讓我打類似分錄的東西&lt;/li>
&lt;/ol>
&lt;p>後來出社會工作後，接觸到Markdown這個東西真的驚為天人，並且是有一點相見恨晚，如果在學期間知道這個東西的話做筆記應該會更高效快速一點。首先先來介紹一下Markdown是什麼吧&lt;/p>
&lt;h1 id="markdown介紹">Markdown介紹&lt;/h1>
&lt;p>Markdown 是目前非常普遍用來撰寫文檔的語言，一開始的目標就是使用「易讀易寫的純文字格式編寫文件」，此初衷讓使用者可以專注在文字的本身，而不需要透過其它工具來切換格式。以 Word 撰寫文檔來說，就必須透過上方的工具列來切換&lt;strong>標題、列表、粗體、斜體&lt;/strong>等等；而 Markdown 並沒有這樣的工具列，完全都是&lt;strong>使用標示符號來完成這些需求&lt;/strong>。&lt;/p>
&lt;p>Markdown是一種輕量級標記式語言，創始人為約翰·格魯伯。它允許人們使用易讀易寫的純文字格式編寫文件&lt;/p>
&lt;p>由於Markdown的輕量化、易讀易寫特性，並且對於圖片，圖表、數學式都有支援，目前許多網站都廣泛使用Markdown來撰寫說明文件或是用於論壇上發表訊息。如GitHub、Reddit、Discord、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、簡書等，甚至還能被用來撰寫電子書。&lt;/p>
&lt;p>參考自維基百科以及https://www.casper.tw/development/2019/11/23/ten-mins-learn-markdown/&lt;/p>
&lt;p>先來看看如果我把會計的筆記轉成Markdown的話看起來會是怎麼樣吧，因為Dcard不支援markdown，可以點這邊預覽看看&lt;/p>
&lt;p>&lt;a href="https://hackmd.io/@Celeast/ryyXXyosi">https://hackmd.io/@Celeast/ryyXXyosi&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/NFRD8Ko.png"
loading="lazy"
alt="image-20230123005704082"
>&lt;/p>
&lt;h1 id="第七章-彈性預算直接成本與管理會計">第七章 彈性預算、直接成本與管理會計&lt;/h1>
&lt;p>本章學習重點&lt;/p>
&lt;ol>
&lt;li>了解各差異的差異&lt;/li>
&lt;li>基於差異分析所做的決策判斷&lt;/li>
&lt;/ol>
&lt;p>名詞定義&lt;/p>
&lt;ul>
&lt;li>靜態預算(Static Budget)：在預算期間開始時，&lt;strong>基於預計產出水準所做的預算&lt;/strong>所做的預算&lt;/li>
&lt;li>靜態預算差異：在靜態預算中，實際結果與預期數之間的差異&lt;/li>
&lt;li>彈性預算(Flexible Budget)：預算期間內按&lt;strong>實際產出&lt;/strong>水準計算出預算收入與預算成本之預算&lt;/li>
&lt;/ul>
&lt;p>．&lt;/p>
&lt;p>．&lt;/p>
&lt;p>．&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">flowchart LR
B[實際投入數量x實際價格] &amp;lt;--價格差異--&amp;gt; 實際投入數量x預算價格 &amp;lt;--效率差異--&amp;gt; C[實際產出下所允許之預算投入x預算價格]
B &amp;lt;--彈性預算差異--&amp;gt;C
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>變動&lt;/th>
&lt;th>歸納&lt;/th>
&lt;th>評論&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>固定制造成本可以做為存貨成本嗎?&lt;/td>
&lt;td>不可&lt;/td>
&lt;td>可以&lt;/td>
&lt;td>基本問題&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>有生產數量差異嗎?&lt;/td>
&lt;td>沒有&lt;/td>
&lt;td>有&lt;/td>
&lt;td>對基準產能水準的選擇，只在歸納成本法下影響營業利益的衡量&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>分錄&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>原料 10,000&lt;/p>
&lt;p>​ 應付帳款 10,000&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>在製品 30,000&lt;/p>
&lt;p>製造費用 1,000&lt;/p>
&lt;p>​ 原料 31,000&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>產成品 50,000&lt;/p>
&lt;p>​ 在製品 50,000&lt;/p>
&lt;/blockquote>
&lt;p>課堂範例：&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/bhWOaT5.png"
loading="lazy"
alt="image-20230123000736761"
>&lt;/p>
&lt;h1 id="ｍarkdown語法介紹">Ｍarkdown語法介紹&lt;/h1>
&lt;p>上面是我把我的會計筆記轉成Markdown格式，可以看到Markdown支援了幾點&lt;/p>
&lt;ol>
&lt;li>列表式的清單&lt;/li>
&lt;li>用來舉例的黑點&lt;/li>
&lt;li>重點的醒目提示&lt;/li>
&lt;li>分層式的標題，標出章節重點&lt;/li>
&lt;li>支援表格(注：markdown的表格語法非常反智，通常我都是用快捷鍵生成)&lt;/li>
&lt;li>支援流程圖的繪製&lt;/li>
&lt;li>支援數學式(這邊沒有示範到，不過Markdown是有支援高等數學的運算式的)&lt;/li>
&lt;li>支援圖片上傳，可以讓我把版書或是題目直接貼上去&lt;/li>
&lt;/ol>
&lt;p>接下來帶大家認識一下Markdown的一些語法&lt;/p>
&lt;p>首先是標題的語法，輸入#再加上一個空格會產生標題，就像現在這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/xzUg32o.png"
loading="lazy"
alt="image-20230123001409936"
>&lt;/p>
&lt;p>在文字前加上1. 2. 3. 則會變成列表&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/xbpaCZs.png"
loading="lazy"
alt="image-20230123001454121"
>&lt;/p>
&lt;p>文字之間加上**則可重點醒目&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/vceq8VB.png"
loading="lazy"
alt="image-20230123001905373"
>&lt;/p>
&lt;p>在文字前加上+則會變成黑點&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/RrdcAai.png"
loading="lazy"
alt="image-20230123001516022"
>&lt;/p>
&lt;p>在文字前加上&amp;gt;則可做為補充說明，我就是用這個語法來寫分錄的&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/xaq48Ty.png"
loading="lazy"
alt="image-20230123001618553"
>&lt;/p>
&lt;p>顯示圖片的語法則是這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Yg0rfCW.png"
loading="lazy"
alt="image-20230123001709056"
>&lt;/p>
&lt;p>裡面的內容填上自己的圖片連結就可以了，如何把圖片上傳上去我後面會說。&lt;/p>
&lt;p>Markdown的語法還有很多很多，不只有我上面提到的這些，有興趣的同學可以參考這邊&lt;/p>
&lt;p>&lt;a href="https://www.casper.tw/development/2019/11/23/ten-mins-learn-markdown/">https://www.casper.tw/development/2019/11/23/ten-mins-learn-markdown/&lt;/a>&lt;/p>
&lt;h1 id="我該怎麼寫markdown呢">我該怎麼寫Markdown呢？&lt;/h1>
&lt;p>markdown是工程師蠻常會接觸到一個標籤式語言，如果你開心的話用記事本也是可以寫Markdown的喔，但是效果會不太好閱讀而已，目前markdown我自己認為比較常見的有幾種&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Vscode&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/zCtwWvH.png"
loading="lazy"
alt="image-20230123002813123"
>&lt;/p>
&lt;p>這是我最初拿來寫markdown的工具，但它本身不是專門拿來寫markdown的，不支援一些熱鍵以及圖片上傳，後面就被我拋棄了&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/To64OPG.png"
loading="lazy"
alt="image-20230123003226114"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HackMd&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/XQD4g2U.png"
loading="lazy"
alt="image-20230123010834897"
>&lt;/p>
&lt;p>HackMd是一個網頁版的markdown編輯器，簡單來講就是你寫上去後，東西就是直接存在雲端，且圖片複製貼上就會自動幫你上傳到網路上了，非常的便捷以及快速，好像是台灣人開發的，最重要的是它免費，也是最常見的方式。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/yPY9NIk.png"
loading="lazy"
alt="image-20230123003322000"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Typora&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/AJVAHof.png"
loading="lazy"
alt="image-20230123003346195"
>&lt;/p>
&lt;p>這是我目前主力所使用的Markdown編輯器，跟HackMd最大的不同就是它是一個所見及所得的編輯器，上述兩款其實都是把畫面分成兩邊，左邊是Markdown語法，右邊則是渲染後的結果，而typora則是在你輸入完後直接幫你渲染好，也就是&lt;strong>所寫及所見&lt;/strong>，是它最大的特色。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/04NdYQW.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>但相比之下它就有幾個缺點&lt;/p>
&lt;ol>
&lt;li>要錢，最直觀的問題就是它是一個付費的程式，屬於買斷制一次500，支援三台設備同時使用&lt;/li>
&lt;li>本身不支援圖片上傳，想要用它來做圖片上傳需要懂一些控制台指令以及Json格式的&lt;/li>
&lt;li>本身的檔案都在local端，需要自己手動丟上雲端(我個人是丟到github上面，然後用bat檔自動上傳)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>還可以提供一點，我會把一些真的沒辦法用文字或是Markdown語法表示的東西寫在平板的GoodNote上面，在把連結分享出來，然後截圖下來貼上去，看起來就像這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/SdiDiSv.png"
loading="lazy"
alt="image-20230123004611873"
>&lt;/p>
&lt;h1 id="結語">結語&lt;/h1>
&lt;p>當然還有不只這些，我沒記錯的話Notion本身也有支援(但我不熟)以及obsidian也是一個寫Markdown的工具，我之所以會選Typora只是因為我喜歡有更大的空間，不喜歡畫面被分成左右兩邊而已。&lt;/p>
&lt;p>作筆記的方法有很多，不做的、用紙寫的、用平板寫的，都可以，沒有誰優誰劣，Markdown也有它的限制在，比如說它就&lt;strong>不能寫資產負債表、也不能寫T字帳&lt;/strong>，沒有一個方法是最佳解的，只要找到自己喜歡的方式都可以，這篇文章只是拋磚引玉，希望提供自己的一些想法供大家參考，也歡迎各位一起討論，祝大家新年快樂，忙季加油！&lt;/p></description></item><item><title>Docker_Desktop_Starting問題解決</title><link>https://hoxtonhsu.com/p/docker_desktop_starting%E5%95%8F%E9%A1%8C%E8%A7%A3%E6%B1%BA/</link><pubDate>Sat, 21 Jan 2023 00:52:36 +0800</pubDate><guid>https://hoxtonhsu.com/p/docker_desktop_starting%E5%95%8F%E9%A1%8C%E8%A7%A3%E6%B1%BA/</guid><description>&lt;img src="https://i.imgur.com/xgUpP8O.png)" alt="Featured image of post Docker_Desktop_Starting問題解決" />&lt;p>最近在新電腦上安裝了Docker結果發現一直卡在這個畫面&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/cw9mdiw.png"
loading="lazy"
alt="image-20230121005427135"
>&lt;/p>
&lt;p>後來研究了一下發現應該是wsl沒有裝好的原因，後來安裝好之後，在把Window Update要我Update的東西全部更新一次，就可以執行成功了，推測應該是window版本沒更新，導致不支援wsl的關係。&lt;/p></description></item><item><title>Docker學習筆記</title><link>https://hoxtonhsu.com/p/docker%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</link><pubDate>Wed, 18 Jan 2023 21:47:50 +0800</pubDate><guid>https://hoxtonhsu.com/p/docker%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</guid><description>&lt;img src="https://i.imgur.com/JdDwgHn.png " alt="Featured image of post Docker學習筆記" />&lt;h1 id="名詞解釋">名詞解釋&lt;/h1>
&lt;h2 id="container">Container&lt;/h2>
&lt;p>Docker Container 是一種軟體容器，它可以在其中運行應用程式和其他服務。它使用操作系統級別的虛擬化，可以在單一的物理主機上運行多個容器，並且每個容器都有自己的運行環境和資源。&lt;/p>
&lt;p>Docker Container 是一種軟體容器，它可以在其中運行應用程式和其他服務。容器具有輕量級、可移植性和隔離性等特點。容器是通過在操作系統內核中運行的容器引擎來實現的。&lt;/p>
&lt;p>Docker容器主要是使用了Linux 的 Namespaces 和 Control groups（cgroups） 技術來實現隔離，這兩種技術可以將一個實體主機上的資源限制給每個容器，而容器內部則是共用一個kernel，因此容器比虛擬機器輕量且速度較快。&lt;/p>
&lt;p>Docker容器是基於鏡像(Image)來建立與運行的，一個鏡像可以是一個基礎鏡像或是由其他鏡像所建立而來。當執行docker run 指令時，會從鏡像建立一個容器，並在容器內執行指定的應用程式或服務。&lt;/p>
&lt;p>不僅如此，Docker容器還支援網路、儲存卷的映射，使得容器可以與外部通訊，也可以存取本地端的資料。&lt;/p>
&lt;p>透過Docker容器,我們可以將應用程式、服務和其所需的環境打包在一起，並且可以在不同的環境中運行，提高了應用程式的可移植性和彈性。&lt;/p>
&lt;h2 id="image">Image&lt;/h2>
&lt;p>Docker Image 是 Docker 容器的基礎，它是一個只讀的模板，包含了容器運行所需的所有檔案、設定和程式。當執行 &lt;code>docker run&lt;/code> 指令時，Docker 會從 Image 建立一個新的容器並在其中執行指定的應用程式或服務。&lt;/p>
&lt;p>Docker Image 可以通過構建或下載的方式創建，構建的方式可以使用 Dockerfile 來描述如何構建一個 Image。而下載的方式則可以從 Docker Hub 或其他的 registry 下載。&lt;/p>
&lt;h2 id="volume">Volume&lt;/h2>
&lt;p>Docker Volume 是 Docker 的一種功能，用於管理容器中的數據。容器本身是輕量級的，數據是不能永久存在的，而 Volume 則是可以永久存在的。&lt;/p>
&lt;p>Docker Volume 可以被掛載到容器上，並且可以在容器內部存儲數據。當容器停止運行或者被刪除時，Volume 中的數據仍然可以保留下來。這樣就可以在重啟容器或建立新容器時，繼續使用之前存儲的數據。&lt;/p>
&lt;p>並且Volume裡面的資料是可以和Host分享的，兩邊的資料呈現鏡像的雙向對應，在Host新增的東西會在Container出現，Container新增的資料也會在Host裡面出現&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/pw664cD.png"
loading="lazy"
alt="image-20230121163302976"
>&lt;/p>
&lt;h1 id="常用指令">常用指令&lt;/h1>
&lt;h2 id="搜尋image">搜尋Image&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker search postgres
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/D4Bl6SJ.png"
loading="lazy"
alt="image-20230124042123305"
>&lt;/p>
&lt;h2 id="查看目前的image">查看目前的image&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker image ls
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或是&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker images
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="執行docker-image">執行docker image&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run &lt;span class="o">[&lt;/span>imageName&lt;span class="o">][&lt;/span>:tag&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/s140pSv.png"
loading="lazy"
alt="image-20230121123518172"
>&lt;/p>
&lt;p>後面的:latest是版本號，可加可不加，沒加的話預設就是latest&lt;/p>
&lt;h2 id="刪除images">刪除images&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker rmi &lt;span class="o">[&lt;/span>imageId&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="在detached-mode下執行">在Detached mode下執行&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run -d nginx
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>所謂的Detached mode亦即&lt;strong>啟動後會不會占用你的terminal&lt;/strong>，可以看一下下面的git，可以比較兩者間的差異&lt;/p>
&lt;ul>
&lt;li>沒有-d&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/ehYrPax.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;ul>
&lt;li>有-d&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/kRVrhXQ.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;h2 id="打包成docker-image">打包成docker image&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker build -t drink-more-water:latest .
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>-t 是 tag的縮寫，hello-docker是這個tag的名稱，.代表dockerfile在當前的目錄下，如果Dockerfile不在當前目錄，則這邊要改變。latest則是版本號，可加可不加，不加的話預設是latest&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/c5XdkHr.png"
loading="lazy"
alt="image-20230118215347469"
>&lt;/p>
&lt;h2 id="查看目前運行的container">查看目前運行的Container&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker ps
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>ps是process status的意思&lt;/code>&lt;/p>
&lt;p>或是&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker container ls
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>​ &lt;img src="https://i.imgur.com/WCJdgXl.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;h2 id="查看目前運作中running的container">查看目前運作中(running)的Container&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker ps
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/C1jS3jN.png"
loading="lazy"
alt="image-20230118222647084"
>&lt;/p>
&lt;p>或是&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker ps -a
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查看底下全部的Container不論啟動與否&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/sIt29w1.png"
loading="lazy"
alt="image-20230118222751647"
>&lt;/p>
&lt;h2 id="進入container與之互動">進入Container與之互動&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker &lt;span class="nb">exec&lt;/span> -it &lt;span class="o">[&lt;/span>ConatinerId&lt;span class="o">]]&lt;/span> bash
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>bash有可能沒有，有可能是sh，要自己到/bin裡面看&lt;/p>
&lt;h2 id="停止container">停止Container&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker stop &lt;span class="o">[&lt;/span>ContainerId&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/dziz1MR.png"
loading="lazy"
alt="image-20230121125714796"
>&lt;/p>
&lt;p>​&lt;/p>
&lt;p>啟動停止的Container&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker start &lt;span class="o">[&lt;/span>ContainerId&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="刪除container">刪除Container&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker rm &lt;span class="o">[&lt;/span>ContainerId&lt;span class="o">]&lt;/span>or&lt;span class="o">[&lt;/span>NAMEs&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/RrMc8BN.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>也可以輸入很多個Id，一次刪個爽&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/rL9pJaN.png"
loading="lazy"
alt="image-20230121155539947"
>&lt;/p>
&lt;p>還有更猛的&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docekr rm -f &lt;span class="k">$(&lt;/span>docker ps -aq&lt;span class="k">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>直接用參數的方式全刪。&lt;/p>
&lt;h2 id="暴露port">暴露port&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run -p 5432:5432 posgres
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>前面的5432是你自定義的localhost:5432，而後面的5432則是容器裡面的port號&lt;/p>
&lt;h2 id="暴露已經runningstopping-的container的port">暴露已經Running,Stopping 的Container的Port&lt;/h2>
&lt;p>沒有這個方法，只有&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run postgres
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>的這個時候你才可以把port暴露出來&lt;/p>
&lt;h2 id="一次性查看container的log紀錄">一次性查看Container的Log紀錄&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker logs &lt;span class="o">[&lt;/span>ContainerId&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/ux9s2GH.png"
loading="lazy"
alt="image-20230124052203569"
>&lt;/p>
&lt;p>這條指令只會顯示過去的紀錄，後續的logs不會更新&lt;/p>
&lt;h2 id="持續查看container的log紀錄">持續查看Container的Log紀錄&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker logs -f &lt;span class="o">[&lt;/span>ContainerId&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這條不只會顯示過去的，還會動態更新現在的log&lt;/p>
&lt;h2 id="執行docker-compose">執行Docker-compose&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker compose up -d
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>-d 代表是否背景執行，不佔用terminal&lt;/p>
&lt;h2 id="停止並刪除docker-compose的container">停止並刪除Docker-compose的Container&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker compose down
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="將dokcer-images-push至dockerhub">將Dokcer Images Push至Dockerhub&lt;/h2>
&lt;p>首先先登入dockerhub&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker login
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再將想要推上去的docker Image重新命名&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker tag &lt;span class="o">[&lt;/span>Image Name&lt;span class="o">]&lt;/span> DockerHub帳號/Image Name
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接著push上去 dockerhub&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker push DockerHub帳號/Image Name
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>想要使用image的話就執行pull&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">docker pull DockerHub帳號/Image Name
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="在docker啟動ubuntu">在Docker啟動Ubuntu&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>下載 ubuntu 的image&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker pull ubuntu
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或是可以&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run ubuntu
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就會自動從docker hub載下來了，但這樣只是把ubuntu的image拉到我們的docker裡面，它本身是沒有啟動的&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/MMDiSRt.png"
loading="lazy"
alt="image-20230118222929032"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在docker中運行ubuntu&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run -it ubuntu
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/IMZCVGx.gif"
loading="lazy"
alt=" "
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用apt(advanced package tool)安裝nano(Linux text editor)&lt;/p>
&lt;p>用apt載任何東西前都建議先update&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">apt update
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">apt install nano
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h1 id="exposing-port">Exposing Port&lt;/h1>
&lt;p>輸入&lt;code>docker ps&lt;/code>可以看到以下資訊&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/jkFwePC.png"
loading="lazy"
alt="image-20230121144512601"
>&lt;/p>
&lt;p>其中的PORTS 80/tcp的意思，容器對外公開的網路端口是 80/tcp，表示這個容器對外公開的網路端口是80，並且是基於TCP協議的。這意味著當外部網路瀏覽器連接到&lt;a class="link" href="http://xn--localhosthttp-cs9z//" target="_blank" rel="noopener"
>http://localhost或http://&lt;/a>&lt;IP address>時，將會連接到容器內部的 Nginx Web 伺服器。想要讓容器的端口對外開放，就需要exposing它，否則直接打localhost:80是沒有用的。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/ZD37kgp.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>我們可以使用以下的方式將8080 連接到80/TCP&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/6NmgZGj.png"
loading="lazy"
alt="image-20230121144820173"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run -d -p 8080:80 nginx
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中的8080:80的意思是指將主機的 8080 端口映射到容器的 80 端口。也就是說，當外部網路瀏覽器連接到 &lt;a class="link" href="http://localhost:8080/" target="_blank" rel="noopener"
>http://localhost:8080&lt;/a> 時，將會連接到容器內部的 Nginx Web 伺服器。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/uv9msjJ.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/qRzMKUP.png"
loading="lazy"
alt="image-20230121152744371"
>&lt;/p>
&lt;p>你也可以不只Exposing一個Port，可以Exposing多個port給80&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/udQnP6Q.png"
loading="lazy"
alt="image-20230121153052811"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run -d -p 8080:80 -p 3000:80 nginx
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/RAElKnV.png"
loading="lazy"
alt="image-20230121153324975"
>&lt;/p>
&lt;h1 id="container的管理">Container的管理&lt;/h1>
&lt;p>當我們啟動、並Stop一個Container，實際上如果依照我們剛剛的作法，我們是不斷的創造新的Container，輸入docker ps -a 即可看到目前存在的Container(不論running or Stopping)，或是在Desktop docker裡面也都可以看到&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/y6X5rl3.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/myW3tLy.png"
loading="lazy"
alt="image-20230121154505315"
>&lt;/p>
&lt;p>我們可以透過&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker rm &lt;span class="o">[&lt;/span>ContainerId&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來真正意義上的移除Container，而不是停止它&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/RrMc8BN.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>&lt;code>可以使用docker ps -aq ，這個指令只會秀出ContainerId，可以刪更爽，直接複製貼上就好&lt;/code>&lt;/p>
&lt;p>還有更爽的方式，用$(docker ps -aq)的方式 傳遞參數&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/6awXQYd.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;h1 id="為container命名">為Container命名&lt;/h1>
&lt;p>建議命名一下，比較好找，只支援英文，不支援中文&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run --name hoxtonPractice -d -p 8080:80 nginx
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/ibwUXZi.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/ivVF2QW.png"
loading="lazy"
alt="image-20230121161417305"
>&lt;/p>
&lt;h1 id="volume的使用">Volume的使用&lt;/h1>
&lt;p>讓資訊可以在host與Container共享的一個功能&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/gFztGx2.png"
loading="lazy"
alt="image-20230121171102777"
>&lt;/p>
&lt;p>範例：&lt;/p>
&lt;p>首先在桌面上創建一個名為website的資料夾，裡面有個index.html，內容如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>hello docker and volume&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/E9IOBy2.png"
loading="lazy"
alt="image-20230121172021418"
>&lt;/p>
&lt;p>接著將terminal切至/website底下，然後輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run --name website -v &lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>:/usr/share/nginx/html:ro -d -p 8080:80 nginx
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>-v是 Docker 中的 volume 指令，它用於將主機上的目錄或檔案掛載到容器中。配合後面的${PWD}:/usr/share/nginx/html，意思就是將當前目錄的內容掛載(Mount)到容器中的 /usr/share/nginx/html 目錄下。這樣設定後，當主機上的目錄內容變更時，容器中的 /usr/share/nginx/html 目錄內的內容也會隨之更新。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>:ro 是指將主機上的目錄或檔案掛載到容器中的目錄或檔案，並設定為只讀模式。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>​ 這意味著在容器中將無法寫入或修改掛載的目錄或檔案，只能讀取。這可以避免對主機上的檔案造成損壞或不 必要的變更。&lt;/p>
&lt;ul>
&lt;li>/usr/share/nginx/html 是 Nginx 預設的網站根目錄。&lt;/li>
&lt;/ul>
&lt;p>結果如下：&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/JWE1ngP.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>也因為Volume是鏡像對應，因此修改host的檔案，container的內容物也會同步更新&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/xr4Ps97.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>我們可以用以下的指令來訪問看看Nginx的檔案&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker &lt;span class="nb">exec&lt;/span> -it website bash
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>docker exec 是 Docker 的命令行工具，用於在運行中的容器內執行命令。&lt;/li>
&lt;li>-it 這兩個選項表示要互動式地執行命令，並且讓輸入和輸出保持連接。&lt;/li>
&lt;li>website 是容器的名稱或 ID。&lt;/li>
&lt;li>bash 是要在容器內執行的命令，這裡是啟動 Bash shell。也可以改成ls，就變成ls了，玩法很多，自行摸索&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/vfD46ft.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>在Nginx裡面新增檔案，移除檔案，會發現host的資料夾檔案也同步更新&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/CxISdYl.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;h2 id="不同的container使用相同的volume">不同的Container使用相同的Volume&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/sF6Jpws.png"
loading="lazy"
alt="image-20230122000944184"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/M0VVEdM.png"
loading="lazy"
alt="image-20230122000515311"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run --name website-copy --volumes-from website -d -p 8081:80 nginx
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&amp;ndash;volumes-from [ContainerName]：將這次要啟動的Container使用和website一樣的Volume&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/138uiD1.png"
loading="lazy"
alt="image-20230122000709771"
>&lt;/p>
&lt;h1 id="dockerfile">Dockerfile&lt;/h1>
&lt;p>Dockerfile是一個文本文件，它包含了創建Docker image所需的指令。這些指令可以包括例如：&lt;/p>
&lt;ul>
&lt;li>從哪個基礎鏡像建立新鏡像&lt;/li>
&lt;li>安裝需要的軟體&lt;/li>
&lt;li>設置環境變量&lt;/li>
&lt;li>添加應用程序文件&lt;/li>
&lt;li>定義容器啟動時執行的命令&lt;/li>
&lt;/ul>
&lt;p>透過Dockerfile, 可以自動化的建立一個環境，方便在不同的環境上部署，使用者可以更方便的管理環境，以及減少部署錯誤的機會。&lt;/p>
&lt;p>例如，如果你有一個Java應用程序需要在多個不同的服務器上運行，你可以使用Dockerfile創建一個包含Java執行時環境的镜像，然後在每個服務器上執行這個镜像，這樣就能保證每個服務器上都有相同的環境。&lt;/p>
&lt;p>試著把剛剛寫的volume打包成一個image，首先在/website的資料夾裡面新增一個名稱一定要是dockerfile的檔案&lt;/p>
&lt;p>裡面的檔案結構長的像這樣子&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> nginx:latest&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ADD&lt;/span> . /usr/share/nginx/html&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>FROM：指定了基礎Image是nginx，後面的latest是指版本號。Dockerfile中必須要有FROM指令，它是一切的根本，它指定了基礎Image環境。舉例來說，這邊指定用最新版的nginx，那麼我們的鏡像會基於這個最新版的nginx環境運行&lt;/li>
&lt;li>ADD：將本地目錄中的文件複製到鏡像中的指定目錄。在這個例子中是將本地目錄中的所有文件複製到鏡像中的/usr/share/nginx/html目錄。它的功能跟COPY有點像，但是COPY用法比較單純，只能複製本地文件和目錄到鏡像中，而ADD指令還可以解壓縮tar文件並將其中的文件複製到鏡像中。&lt;/li>
&lt;/ul>
&lt;p>​ 值得注意的是&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">ADD&lt;/span> . /usr/share/nginx/html&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這行指的是，將當前目錄的所有東西(以一個.表示)加入至Container中的/usr/share/nginx/html目錄中。在這個例子中就是將&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/xhF8sgi.png"
loading="lazy"
alt="image-20230122005758339"
>&lt;/p>
&lt;p>這些東西ADD進/usr/share/nginx/html裡面。&lt;/p>
&lt;p>當Dockerfile寫好後，要開始bulid它，步驟如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">docker build -t website:latest .&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>這個命令是在使用 Docker 建立一個新的鏡像檔，並標記為 &amp;ldquo;website:latest&amp;rdquo;。 &amp;ldquo;.&amp;rdquo; 表示當前目錄下的 Dockerfile 檔案將會被用來建立映像檔。這個命令將會建立一個名為 &amp;ldquo;website&amp;rdquo; 並且標記為 &amp;ldquo;latest&amp;rdquo; 的鏡像檔。&lt;/li>
&lt;/ul>
&lt;p>Build完後就會出現一個image了，輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker images
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就可以查看目前擁有的images&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/fjUHVh9.png"
loading="lazy"
alt="image-20230122023400655"
>&lt;/p>
&lt;p>並且可以這個image可以運行我們剛剛對index的設定，輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run --name website -p 8080:80 -d website:latest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意：這邊不需要再為website設置volume，因為我們已經將需要的東西打包進image裡面了。&lt;/p>
&lt;p>輸入完後，在URL的地方輸入localhost:8080就可以看到我們剛剛設置的東西了。&lt;/p>
&lt;p>gif如下&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/XvOfKcm.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>​&lt;/p>
&lt;h1 id="實際演練-nodejs">實際演練 NodeJs&lt;/h1>
&lt;h2 id="前置作業">前置作業&lt;/h2>
&lt;p>安裝Node.js，這邊安裝為了快速，就直接用Choco來裝了，Choco的安裝如下&lt;/p>
&lt;ol>
&lt;li>
&lt;p>在Terminal中輸入，記得要以系統管理員身分輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">Set-ExecutionPolicy Bypass -Scope Process -Force&lt;span class="p">;&lt;/span> &lt;span class="o">[&lt;/span>System.Net.ServicePointManager&lt;span class="o">]&lt;/span>::SecurityProtocol &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>System.Net.ServicePointManager&lt;span class="o">]&lt;/span>::SecurityProtocol -bor 3072&lt;span class="p">;&lt;/span> iex &lt;span class="o">((&lt;/span>New-Object System.Net.WebClient&lt;span class="o">)&lt;/span>.DownloadString&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;https://community.chocolatey.org/install.ps1&amp;#39;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>安裝完後安裝nodeJs&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">choco install nodejs
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>安裝完後隨便創一個資料夾，這邊命名叫做user-service-api&lt;/p>
&lt;/li>
&lt;li>
&lt;p>切換到該資料夾底下，並且npm init它&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">npm init
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>接著安裝express&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">npm install --save express
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>用好後檔案結構長這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/UfcpwaY.png"
loading="lazy"
alt="image-20230122032825912"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在該目錄底下新增一個index.js的檔案，內容如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3000&lt;/span>
&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">([{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Bod&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">email&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;bob@gmail.com&amp;#39;&lt;/span>
&lt;span class="p">}])&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Example app listening on port &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用nodejs運行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">node index.js
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>成功後進入localhost:3000即可看到下列畫面&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/dRynWn4.png"
loading="lazy"
alt="image-20230122033843917"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>如此一來前置作業就完成了&lt;/p>
&lt;h2 id="製作dockerfile">製作DockerFile&lt;/h2>
&lt;p>在目錄底下新增dockerfile，內容如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:latest&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ADD&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> npm install&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> node index.js&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>WORKDIR：若Container有/app這個資料夾，則使用它，若沒有，則創造它。&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>ADD . .： 将当前目录中的文件复制到镜像中的 /app 目录。&lt;/li>
&lt;li>RUN npm install： 在鏡像中运行 npm install 命令，安装应用程序所需的依赖项。&lt;/li>
&lt;li>CMD node index.js：设置镜像启动时运行的命令，这里是运行 node index.js。&lt;/li>
&lt;/ul>
&lt;p>為什麼要分成RUN跟CMD呢？有幾個原因，首先RUN跟CMD的用途本身就不一樣，RUN主要是在創建image中執行命令，並將結果保存在image中，它主要用來安裝依賴、配置應用程式或其他操作。則是用來說明Image創建完成後要執行的動作。&lt;strong>簡而言之，RUN是在創建Image中過程所執行的，而CMD則是在Image創建完成後所執行的&lt;/strong>。&lt;/p>
&lt;p>並且，一個DockerFile可以有很多RUN指令，但只能有一個CMD指令，因為Container只能運行一個CMD指令&lt;/p>
&lt;h2 id="使用image">使用Image&lt;/h2>
&lt;p>接著創建鏡像&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker build --tag user-service-api:latest .
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>創建完之後啟動鏡像&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker run --name user-api -d -p 8080:3000 user-service-api:latest
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這邊的&lt;code>8080:3000&lt;/code>是指，將我們容器裡面原本配置的3000端口暴露出來，以8080來接收。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/VSKx5y3.png"
loading="lazy"
alt="image-20230122041621171"
>&lt;/p>
&lt;p>因為3000是指在Container裡面的端口，host想要讀到它，必須將Container的端口暴露出來。因此localhost:3000會找不到東西，只有打localhost:8080才會有我們要的內容&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/vUVU65T.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;h2 id="dockerignore">DockerIgnore&lt;/h2>
&lt;p>做完上面這些操作後，我們的檔案結構長這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/zx4lldH.png"
loading="lazy"
alt="image-20230122042649897"
>&lt;/p>
&lt;p>然後我們的Dockerfile長這樣&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:latest&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ADD&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> npm install&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> node index.js&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>比較之後發現一件事情，RUN npm install會創建node_modules資料夾，但我們在ADD時已經把node_modules加入進去，等於說我們&lt;strong>重複創建&lt;/strong>了兩次node_modules，這種情況就類似gitIgnore，需要排除掉重複的資料夾&lt;/p>
&lt;p>dockerIgnore的寫法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">node_modules&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>dockerfile&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>.git&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/cw6wiqo.png"
loading="lazy"
alt="image-20230122043320515"
>&lt;/p>
&lt;p>這樣就可以把這些檔案排除在外了&lt;/p>
&lt;h1 id="caching--layers">Caching &amp;amp; Layers&lt;/h1>
&lt;p>DockerFile裡面的每一個CML都是一個Layer，每個Layer都用來Caching`&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:latest&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /app&lt;/span>&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">ADD&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> npm install&lt;span class="err">
&lt;/span>&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> node index.js&lt;span class="err">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/qOnozTP.png"
loading="lazy"
alt="image-20230124033035860"
>&lt;/p>
&lt;p>可以看到這邊的Step1, Step2都對應著CML的指令&amp;hellip;&lt;/p>
&lt;p>而Cache的點就在於，其實除了ADD . . 以外(原始碼每次打包時都會有更動)，其實WORKDIR, RUN npm install這些指令其實都是重複的，我們每次打包都需要再重複執行一次，這樣很沒**效率 **&lt;/p>
&lt;p>於是Dokcer就會把這些重複的事情Caching起來，只要沒有改變就不會重複再做，就會看到上面的Using Cache了&lt;/p>
&lt;h1 id="alpine">ALPINE&lt;/h1>
&lt;p>&lt;code>翻譯的意思是高山&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/lHZT25E.png"
loading="lazy"
alt="image-20230124040633982"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/vROHoya.png"
loading="lazy"
alt="image-20230124040527548"
>&lt;/p>
&lt;p>我剛剛打包的Image檔案已經快逼近一個G了，很明顯我們其實不需要那麼多的東西，Alpine版本的就是一個非常小的鏡像。&lt;/p>
&lt;h2 id="實際安裝alpine">實際安裝ALPINE&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker pull node:lts-alpine
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/sOvYX9X.png"
loading="lazy"
alt="image-20230124041533774"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/WiRUr17.png"
loading="lazy"
alt="image-20230124041614756"
>&lt;/p>
&lt;p>兩者的Size差了快十倍&lt;/p>
&lt;h1 id="docker-compose-將後端與資料庫一起包一包">Docker Compose 將後端與資料庫一起包一包&lt;/h1>
&lt;p>一個Project不可能只由一個後端組成，肯定是要由後端、前端、以及資料庫三者組合，甚至更甚者可能會有10,20個的部件需要去組合，那麼一個一個run container這件事情就變得相當缺乏效率。為了處理這件事情，於是有了&lt;strong>Docker-Compose&lt;/strong>的概念出現。&lt;/p>
&lt;p>Docker-Compose大概就像這樣，&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3.7&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">db&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">postgres-for-dockerpractice&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">postgres&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_USER&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_DB&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">./pgdata:/var/lib/postgresql/data&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;5432:5432&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">backend&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">backend-for-dockerpractice&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">shop&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">db&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;8080:8080&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>和dockerfile一樣存在於專案根目錄中&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/UpKhAur.png"
loading="lazy"
alt="image-20230130235149649"
>&lt;/p>
&lt;p>他類似於一個&lt;strong>配置檔&lt;/strong>，用以告訴Docker要啟動哪些Container，以及它們之間的交互關係，以上面的Docker-compose.yml來說明&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3.7&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">//要使用的dokcer-compose版本，有分很多版，比如說1.0,2.0，但目前主流是3.0，所以照著寫就好&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">//每一個起起來的Container有一個特殊的名字，叫做service，這個yaml檔就有兩個service，分別叫db跟backend&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">db&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">//可自定義的service名稱，高興叫啥就叫啥，但這個名字會與你在application.properties裡描述的名稱有對應關係，可以看看下面的附圖，第四行的url:jdbc:postgresql://db:5432/shop，其中的db就是service的名稱&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">postgres-for-dockerpractice //自定義的名稱，想叫啥就叫啥，這名稱會是你的Container名稱&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">postgres //要使用哪個image作為基底&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">45002502&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_USER&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">postgres&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">POSTGRES_DB&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">shop&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">./pgdata:/var/lib/postgresql/data&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;5432:5432&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">//要暴露出來的端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">backend&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">//可自定義的service名稱，高興叫啥就叫啥，但這個名字會與你在application.properties裡描述的名稱有對應關係。&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">backend-for-dockerpractice //自定義的名稱，想叫啥就叫啥，這名稱會是你的Container名稱&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">shop //要使用哪個image作為基底，這個是我自己docker build -t shop:latest . 所創建出來的image&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">db //這意味著，你這邊的service會等到db這個service完成後才會進行部屬。&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;8080:8080&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">// 暴露出來的端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/AMN0bz6.png"
loading="lazy"
alt="image-20230130235821812"
>&lt;/p>
&lt;p>▲第四行的db與services的名稱有對應。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/ksv3RFX.png"
loading="lazy"
alt="image-20230131000230558"
>&lt;/p>
&lt;p>▲上述的docker-compose啟動後顯示的樣子。&lt;/p>
&lt;p>常用的指令&lt;/p>
&lt;p>啟動當前目錄的docker-compose&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker compose up
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>關閉當前目錄的docker-compose&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">docker compose down
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>你知道嗎?現在Github上也可以使用Vscode喔！</title><link>https://hoxtonhsu.com/p/%E4%BD%A0%E7%9F%A5%E9%81%93%E5%97%8E%E7%8F%BE%E5%9C%A8github%E4%B8%8A%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8vscode%E5%96%94/</link><pubDate>Wed, 11 Jan 2023 23:27:27 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E4%BD%A0%E7%9F%A5%E9%81%93%E5%97%8E%E7%8F%BE%E5%9C%A8github%E4%B8%8A%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8vscode%E5%96%94/</guid><description>&lt;img src="https://i.imgur.com/Gckim1N.png" alt="Featured image of post 你知道嗎?現在Github上也可以使用Vscode喔！" />&lt;p>前陣子在網路上找看看有沒有什麼實用的Git指令，無意間看到這個功能。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/NltXKuw.gif"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>只要在Github的頁面按下 &amp;gt; ，就可以開啟網頁版的Vscode囉，不過有個小缺點就是，Vscode開啟時介面語言是依據你瀏覽器的語言所決定，所以如果想要使用英文版的Vscode就要把Chrome的語言設定成英文喔。&lt;/p>
&lt;p>這樣開啟後最直觀的好處就是可以直接在Github上以Vscode編輯程式碼，做快速的修改，瀏覽起來也比較快，不然原本網頁在看的話速度非常的慢！並且也可以在上面做衝突的處理。&lt;/p></description></item><item><title>實用的Git指令</title><link>https://hoxtonhsu.com/p/%E5%AF%A6%E7%94%A8%E7%9A%84git%E6%8C%87%E4%BB%A4/</link><pubDate>Fri, 06 Jan 2023 14:15:51 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%AF%A6%E7%94%A8%E7%9A%84git%E6%8C%87%E4%BB%A4/</guid><description>&lt;img src="https://i.imgur.com/nCGDuUc.png " alt="Featured image of post 實用的Git指令" />&lt;h1 id="前言">前言&lt;/h1>
&lt;p>整理一下工作上有用過，並覺得實用、比較少人提過的一些Git指令。&lt;/p>
&lt;h1 id="git指令">Git指令&lt;/h1>
&lt;ol>
&lt;li>退回到上一個Commit，數字可以更改，1就是上一次，改成三的話就是三次前的Commit&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git checkout HEAD~1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/MNnAwmx.gif"
loading="lazy"
alt="demo2"
>&lt;/p>
&lt;ol start="2">
&lt;li>退回上一次的Commit，重複輸入的話會往復循環&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git checkout -
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/GpQAK2L.gif"
loading="lazy"
alt="demo2"
>&lt;/p>
&lt;ol start="3">
&lt;li>將本次修改合併至上次Commit，如果有漏掉的提交會常用這個指令&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git commit --amend --no-edit
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Java中的throw,throws,try...catch，受檢例外與非受檢例外</title><link>https://hoxtonhsu.com/p/java%E4%B8%AD%E7%9A%84throwthrowstry...catch%E5%8F%97%E6%AA%A2%E4%BE%8B%E5%A4%96%E8%88%87%E9%9D%9E%E5%8F%97%E6%AA%A2%E4%BE%8B%E5%A4%96/</link><pubDate>Tue, 27 Dec 2022 15:12:58 +0800</pubDate><guid>https://hoxtonhsu.com/p/java%E4%B8%AD%E7%9A%84throwthrowstry...catch%E5%8F%97%E6%AA%A2%E4%BE%8B%E5%A4%96%E8%88%87%E9%9D%9E%E5%8F%97%E6%AA%A2%E4%BE%8B%E5%A4%96/</guid><description>&lt;img src="https://i.imgur.com/dwbYvaF.png" alt="Featured image of post Java中的throw,throws,try...catch，受檢例外與非受檢例外" />&lt;h1 id="開頭">開頭&lt;/h1>
&lt;p>Java中的例外分為受檢例外與非受檢例外(RuntimeExcetption)兩大類，可以先看到這張圖。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/apUx0mu.png"
loading="lazy"
alt="image-20221227160151705"
>&lt;/p>
&lt;p>所謂的&lt;strong>非受檢例外就是指繼承了RuntimeException的Exception&lt;/strong>，這類的Exception發生，而非受檢例外就是指沒有繼承RuntimeException的Exception。可以看下列的圖片&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/FdZYptn.png"
loading="lazy"
alt="image-20221227161807341"
>&lt;/p>
&lt;h1 id="何謂受檢例外與非受檢例外">何謂受檢例外與非受檢例外&lt;/h1>
&lt;p>受檢例外之所以叫受檢例外，就在於這些例外是工程師必須明確檢查並處理的例外，例如讀取檔案時發生的FileNotFoundException，這類的Exception，JVM沒有辦法進行處理，因此需要工程師去做處理。而RumtimeException則是指那些工程師不需要去明確處理的Exception，比如說NullPointerException, ArrayIndexOutOfBoundsException，這類的例外都是繼承自RuntimeException，可以由JVM進行處理，當然要處理也是可以的，比如說這樣&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/9drhRUY.png"
loading="lazy"
alt="image-20221227164624742"
>&lt;/p>
&lt;p>(可以看到左邊第13行的方法，沒有被try..catch包住也沒事，因為該方法拋出的例外是NumberFormatException，這個例外繼承了RuntimeException，因此不用try&amp;hellip;catch處理也沒關係，JVM會自動幫我們處理，如果要放到try&amp;hellip;catch的話，則是在catch段裡去catch NumberFormatException)&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/xsozyoG.png"
loading="lazy"
alt="image-20221227164726651"
>&lt;/p>
&lt;p>將方法放入try&amp;hellip;catch之後，因為catch是抓RuntimeException，所以被抓到後會print出catch error。&lt;/p>
&lt;p>另外比較實務上的說法即是，受檢例外(checked Exception)是可被修復的例外，可以試看看retry，而不可修復的例外就是非受檢例外(RunTimeException)，這種時候就代表程式出了問題，有bug，需要工程師下來進行處理，把問題處理掉&lt;/p>
&lt;p>來源：&lt;a class="link" href="https://medium.com/kuma%E8%80%81%E5%B8%AB%E7%9A%84%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E6%95%99%E5%AE%A4/2021-it-%E9%90%B5%E4%BA%BA-day-09-%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6%E8%88%87%E4%BE%8B%E5%A4%96%E8%99%95%E7%90%86-f571f577f72" target="_blank" rel="noopener"
>2021 IT 鐵人 Day 09 單元測試與例外處理&lt;/a>&lt;/p>
&lt;p>那如果一個method會拋出受檢例外，而在該method中又沒有做處理，則會需要呼叫它的那一個method進行處理。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/mLLBczf.png"
loading="lazy"
alt="image-20221227165544804"
>&lt;/p>
&lt;p>右邊的方法實際上不會拋出IOException，所以會顯示為灰色的，這邊只是作為Demo先寫上去。可以看到畫面左邊的地方，此時IDE跟我們報錯，說這個方法會拋出一個IOException，要我們進行處理，&lt;strong>因為IOException是一個受檢例外&lt;/strong>，JVM本身沒有能力可以進行處理。&lt;/p>
&lt;p>大概先這樣，其他想到後補。&lt;/p></description></item><item><title>淺談測試驅動開發</title><link>https://hoxtonhsu.com/p/%E6%B7%BA%E8%AB%87%E6%B8%AC%E8%A9%A6%E9%A9%85%E5%8B%95%E9%96%8B%E7%99%BC/</link><pubDate>Sun, 04 Dec 2022 22:22:06 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E6%B7%BA%E8%AB%87%E6%B8%AC%E8%A9%A6%E9%A9%85%E5%8B%95%E9%96%8B%E7%99%BC/</guid><description>&lt;img src="https://i.imgur.com/2xteh3C.png" alt="Featured image of post 淺談測試驅動開發" />&lt;h1 id="序言">序言&lt;/h1>
&lt;p>參考資料：&lt;/p>
&lt;p>&lt;a class="link" href="https://youtu.be/t4D6GW2c8G8?list=LL" target="_blank" rel="noopener"
>Agile Hsinchu 2022.11 - 〈你就是不寫測試，才會沒時間〉線上導讀&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://youtu.be/wTpsxjP0t7M" target="_blank" rel="noopener"
>測試有時間再寫？你就是不寫才會沒時間！&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://ithelp.ithome.com.tw/users/20107429/ironman/3897" target="_blank" rel="noopener"
>你就是都不寫測試才會沒時間：Kuma 的 30 天 Unit Test 手把手教學，從理論到實戰 （Java 篇）&lt;/a>&lt;/p>
&lt;p>TDD(Test-Driven Development)是一個軟體開發的模式，它的概念很簡單，就是&lt;strong>先寫測試在寫程式&lt;/strong>，&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/LgOetJJ.png"
loading="lazy"
alt="image-20221205004202805"
>&lt;/p>
&lt;p>這樣的事情會讓我們覺得不可思議，因為我們一直以來寫程式的方式都是先寫程式，而測試則是有時間才再補的東西。那改成先寫測試會有什麼好處呢？這部分我們等等再來談，我們先討論TDD最核心的部分—&lt;strong>單元測試(Unit Test)&lt;/strong>。&lt;/p>
&lt;h1 id="單元測試在tdd的作用是什麼">單元測試在TDD的作用是什麼&lt;/h1>
&lt;p>​ 一開始在認識單元測試的時候，許多人的想法都會認為說，單元測試可以避免Bug，可以提升程式碼的品質。確實這些都是Unit Test的好處，但卻不是最核心的關鍵，單元測試最重要的點在於幫助我們&lt;strong>重構現有的程式架構&lt;/strong>。&lt;/p>
&lt;p>​ 我們在經手一個項目的時候，第二個月的理解一定會比第一個月的理解更深，第三個月的理解也一定會比第二個月的理解更加深刻，可能三個月前所使用的架構，在三個月後，隨著業務規模的擴展、需求的增加，而需要去新增新的程式，或是改變原有的設計，因而漸漸不敷使用，在這樣的情形下，若沒有單元測試的保護支持我們重構，讓我們確保每一步的Design都沒有破壞原有程式的設計，工程師會變得去害怕修改舊有的程式碼，因而導致不敷使用的架構繼續生長下去。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/RUQ0j6E.png"
loading="lazy"
alt="image-20221205010938974"
>&lt;/p>
&lt;p>(▲ 程式能跑，但還能在更好）&lt;/p>
&lt;p>​ 如果只是這樣子還沒什麼問題，畢竟就只是把東西一個接著一個地疊上去，頂多就是不好維護而已。但實際上的開發中，是很常出現改Ａ壞Ｂ這種情況的，在沒有單元測試的保護下，工程師在開發中是不會知道自己更新的這段程式碼會對某些程式造成影響，往往要等到合併後才能出現問題，所以會出現一種情況就是前期開發的都很順利，而越到後面Dead Line，效率就越發下降，&lt;strong>因為工程師在開發的當下不知道自己新增的功能到底會不會對別人造成影響&lt;/strong>。而有了測試的保護，我們可以在寫程式的時候就知道現在程式的運行狀況，今天這樣子的修改會不會導致其他程式跑不起來，如果跑不起來那單元測試就不會過，這樣的回饋是&lt;strong>立即性&lt;/strong>的回應，而不需要等到合併後大家才知道。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/4EMwAcp.png"
loading="lazy"
alt="image-20221205010534318"
>&lt;/p>
&lt;p>(▲ 隨著開發時間的增加，TDD的優勢會更凸顯出來）&lt;/p>
&lt;h1 id="agile與tdd">Agile與TDD&lt;/h1>
&lt;blockquote>
&lt;p>講到Agile就會講到瀑布式開發(WaterFall)，但你知道嗎？其實從來都沒有瀑布式開發這種事情喔。&lt;/p>
&lt;/blockquote>
&lt;p>瀑布式開發是來自於Winston Royce在1970所提出的論文Managing the Development of Larger Software Systems被提出，但事實上這個開發模式在這篇論文的下一行就被Winston Royce否決了。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/6dBbaHc.png"
loading="lazy"
alt="image-20221205012708984"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/61MwhoA.png"
loading="lazy"
alt="image-20221205012720794"
>&lt;/p>
&lt;blockquote>
&lt;p>I believe in this concept, but the implementation described above is risky and inivites failure. The problem is illustrated in Figure 4 .&lt;/p>
&lt;p>我相信這個概念，但照著這上面的流程做的話是高風險且易導致錯誤的，原因就如第四張圖所示&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://i.imgur.com/73usP4Z.png"
loading="lazy"
alt="image-20221205012847815"
>&lt;/p>
&lt;p>​ (▲Figure 4)&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>The testing phase which occurs at the end of the development cycle&lt;/strong> is the first event for which timing, stotage, input/output transfers, etc, are experienced as distinguished from analyzed. These phenomena are not precisely analyzable. There phenomena are not precisely analyzable. They are not the solutions or the satndard partial differential quations of mathematical physics for instatnce. Yet if there phenomena fail to satisfy the various external constraints, then invariablt a major redesign is required . A simple octal patch or redo of some isolated code will not fix there kinds of difficulties. The required design changes are likely to be so disruptive that the software requiremnets upon which the design is based and which provides the rationale for everything are violated. &lt;strong>Either the requirements must be modified, or a substantial change in the design is required.&lt;/strong> &lt;strong>In effect the development process has returned to the origin and one can expect up to a 100-percent overrun in schedule and/or costs&lt;/strong>&lt;/p>
&lt;p>在開發流程的最後一個階段-測試，第一個遇到的事情就是時序、儲存，輸出輸入，這些現象情況無法準確的分析，這些不像數學物理的解答，或是標準偏微方程，然而，如果存在不能滿足各種外部約束的現象，則不可避免地需要進行重大的重新設計，一個簡單的八進制補丁或一些孤立代碼的重做不會解決這些困難，所需的設計更改可能會造成破壞，以至於違反了設計所基於的以及為所有事情提供基本原理的軟件要求。 要么必須修改要求，要么需要對設計進行實質性更改。 實際上，開發過程已經回到原點，預計進度和/或成本會超支 100%。&lt;/p>
&lt;/blockquote>
&lt;p>Winston Royce在瀑布模型提出的當下其實就否認了它的意義，但後續被一些人拿來當作開發的窠臼，也導致了這種開發模式往往會在完工時出現重大的危害。Winston Royce認為，&lt;strong>在最後的測試階段是充滿著未知與不確定性&lt;/strong>，到最後會反覆著在&lt;strong>測試、程式修改、確認需求&lt;/strong>這三個階段來回擺盪，這樣三個階段的來回擺盪是不是有點似曾相似呢？沒錯，就是TDD的概念&lt;/p>
&lt;h1 id="什麼是tdd">什麼是TDD&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/Iwmr8mT.png"
loading="lazy"
alt="image-20221207000519492"
>&lt;/p>
&lt;p>TDD&lt;strong>是一個開發模式&lt;/strong>而不是測試模式，TDD的測試模式是由&lt;/p>
&lt;ul>
&lt;li>寫一個會錯的測試&lt;/li>
&lt;li>寫一個剛好會過的程式&lt;/li>
&lt;li>重構&lt;/li>
&lt;/ul>
&lt;p>​ 這三者循環，對應Winston Royce對瀑布模型提出的弊端，也就是&lt;strong>測試、修改程式、確認需求&lt;/strong>，也因此TDD是一個可以讓&lt;strong>問題早期浮上水面的開發方式&lt;/strong>，為什麼？因為這樣的開發方式要求我們對業務邏輯的需求有充分的了解，這樣我們才可以寫測試，一旦需求明確了，那麼寫出程式就只是時間的問題了。&lt;/p>
&lt;p>​ 另一方面，也是因為TDD的開發模式，我們每一個Code都有單元測試的保護，我們可以&lt;strong>隨時重構&lt;/strong>我們的程式碼而毋須擔心程式被我們改錯，是的，沒錯，TDD的一個核心概念就在於&lt;strong>任何時候都可以重構我們的程式碼&lt;/strong>，因為人對於系統的了解，會隨著開發時間的增加而了解的越深刻，半年前的Code到了現在可能越看越不順眼，另一方面，隨著業務規模的提升，我們早期的設計可能也會越不敷使用，若沒有單元測試的保護，我們重構的成本會隨著產品的規模的提升而提升，而發展到一定規模的情況下，&lt;strong>重構變成遙不可及的夢想&lt;/strong>。&lt;/p>
&lt;p>​ 也是因為有單元測試的保護，我們才可以&lt;strong>真正的去設計我們的程式&lt;/strong>，常見的S.O.L.I.D，以及23種設計模式的使用，如何根據不同的情境套用不同的設計模式，這就是工程師有價值的地方，可以說單元測試的撰寫完整了整個物件導向的程式設計。&lt;/p></description></item><item><title>如何將Junit的測試粒度控制在最小單元</title><link>https://hoxtonhsu.com/p/%E5%A6%82%E4%BD%95%E5%B0%87junit%E7%9A%84%E6%B8%AC%E8%A9%A6%E7%B2%92%E5%BA%A6%E6%8E%A7%E5%88%B6%E5%9C%A8%E6%9C%80%E5%B0%8F%E5%96%AE%E5%85%83/</link><pubDate>Wed, 30 Nov 2022 13:30:27 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%A6%82%E4%BD%95%E5%B0%87junit%E7%9A%84%E6%B8%AC%E8%A9%A6%E7%B2%92%E5%BA%A6%E6%8E%A7%E5%88%B6%E5%9C%A8%E6%9C%80%E5%B0%8F%E5%96%AE%E5%85%83/</guid><description>&lt;img src="https://i.imgur.com/4qePz5L.png " alt="Featured image of post 如何將Junit的測試粒度控制在最小單元" />&lt;p>在Junit5中，有對一些Junit的測試的註解進行調整&lt;/p>
&lt;p>比如說&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Junit4&lt;/th>
&lt;th>Junit5&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>測試用框架的選擇&lt;/td>
&lt;td>@RunWith(MockitoJUnitRunner.class)&lt;/td>
&lt;td>@ExtendWith(MockitoExtension.class)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>當測試會使用到SprintBoot框架時，應該要使用@ExtendWith(SpringExtension.class)，@MockBean來調用&lt;/p>
&lt;p>若測試不想涉及SprintBoot的時候@ExtendWith(MockitoExtension.class)，以及@Mock, @InjectMocks，並且使用MockMvcBuilders.standaloneSetup來設置獨立測試，以下是Code的示範&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.junit.jupiter.api.BeforeEach&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.junit.jupiter.api.extension.ExtendWith&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.mockito.InjectMocks&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.assertj.core.api.Assertions&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.mockito.Mock&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.mockito.junit.jupiter.MockitoExtension&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.test.web.servlet.MockMvc&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.springframework.test.web.servlet.setup.MockMvcBuilders&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * @author Hoxton on 2022/11/30
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="nd">@ExtendWith&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MockitoExtension&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserControllerTest&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Mock&lt;/span> &lt;span class="c1">//Controller調用的Service
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">UserService&lt;/span> &lt;span class="n">userService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@InjectMocks&lt;/span> &lt;span class="c1">//要測試的Cotroller
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">UserController&lt;/span> &lt;span class="n">userController&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">MockMvc&lt;/span> &lt;span class="n">mockMvc&lt;/span>&lt;span class="o">;&lt;/span> &lt;span class="c1">//模擬Mvc
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nd">@BeforeEach&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setMockMvc&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="n">MockMvcBuilders&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">standaloneSetup&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">userController&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Test&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="nf">testMethod_situation_returnWhat&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="n">given&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">someObject&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">someMethod&lt;/span>&lt;span class="o">()).&lt;/span>&lt;span class="na">willReturn&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;someting&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// ... 設置
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">MockHttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mvc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">perform&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;someUrl&amp;#34;&lt;/span>&lt;span class="o">)).&lt;/span>&lt;span class="na">andReturn&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getResponse&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">assertThat&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;something&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">isEqualTo&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;thatThing&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>IDEA的介紹</title><link>https://hoxtonhsu.com/p/idea%E7%9A%84%E4%BB%8B%E7%B4%B9/</link><pubDate>Thu, 10 Nov 2022 23:52:33 +0800</pubDate><guid>https://hoxtonhsu.com/p/idea%E7%9A%84%E4%BB%8B%E7%B4%B9/</guid><description>&lt;img src="https://i.imgur.com/zyn4XVp.png" alt="Featured image of post IDEA的介紹" />&lt;p>最近業配公司，讓公司老闆買了IDEA讓我們後端工程師來使用，因此技術分享做了一次IDEA的主題，在這邊把技術分享的一些內容做成文章，分享一下&lt;/p>
&lt;h2 id="推薦的plugin">推薦的Plugin&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Plugin名稱&lt;/th>
&lt;th>截圖&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>One Dark Theme&lt;br />&lt;img src="https://i.imgur.com/RDwmNyk.png"
loading="lazy"
alt="image-20221109011709066"
>佈景主題&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/rokbaGu.png"
loading="lazy"
alt="image-20221109011724288"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;br />&lt;img src="https://i.imgur.com/DXd3gwi.png"
loading="lazy"
alt="image-20221109011844072"
>按鍵提示&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/tHGPxbO.gif"
loading="lazy"
alt="ShortCutHit"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rainbow Brackets&lt;br />&lt;img src="https://i.imgur.com/U1YiDG0.png"
loading="lazy"
alt="image-20221109012245196"
>&lt;br />括弧顏色顯示&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/hX6ghuf.png"
loading="lazy"
alt="image-20221109012300415"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Nyan Progress Bar&lt;img src="https://i.imgur.com/puz6Ast.png"
loading="lazy"
alt="image-20221109012330374"
>&lt;br />讀取條改變&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/DwOQ9TA.gif"
loading="lazy"
alt="bar"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WakaTime&lt;br />&lt;img src="https://i.imgur.com/6O8LC4R.png"
loading="lazy"
alt="image-20221109102735841"
>&lt;br />工作的紀錄&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/ZRNZg1L.png"
loading="lazy"
alt="image-20221109102655685"
>&lt;br />&lt;img src="https://i.imgur.com/IxXMFOb.png"
loading="lazy"
alt="image-20221109102855824"
>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="要改的設定">要改的設定&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Code Completion&lt;br /> Alt+.&lt;br />&lt;br /> &lt;img src="https://i.imgur.com/DNzcjhh.png"
loading="lazy"
alt="image-20221109012657212"
>&lt;/th>
&lt;th>&lt;img src="https://i.imgur.com/QDvdM96.gif"
loading="lazy"
alt="code"
>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Second Basic &lt;br />Alt+/&lt;br />&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/1nIbigD.gif"
loading="lazy"
alt="comple"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Type-Match-Completion&lt;br />Alt+;&lt;br />&lt;img src="https://i.imgur.com/RRbt5Rs.png"
loading="lazy"
alt="image-20221109125316338"
>&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/yL0OS2f.gif"
loading="lazy"
alt="demo"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Run F10&lt;br />&lt;img src="https://i.imgur.com/GRWVIQD.png"
loading="lazy"
alt="image-20221109013451000"
>&lt;/td>
&lt;td>就Run&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Terminal Alt+`&lt;br />&lt;img src="https://i.imgur.com/mULyQep.png"
loading="lazy"
alt="image-20221109013544910"
> | &lt;img src="https://i.imgur.com/xpIwXjH.gif"
loading="lazy"
> |&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>更改Terminal Bash CMD or Window terminal&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/pfBEHEU.png"
loading="lazy"
alt="image-20221109013734173"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>更改TODO 模板&lt;br />&lt;img src="https://i.imgur.com/fxIxqq0.png"
loading="lazy"
alt="image-20221109013905433"
>&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/omEwjLh.gif"
loading="lazy"
alt="demo"
>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="實用的快捷鍵">&lt;strong>實用的快捷鍵&lt;/strong>&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>功能&lt;/strong>&lt;/th>
&lt;th>&lt;strong>預覽&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>sout,souv&lt;br />快速印出&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/PtTc6IK.gif"
loading="lazy"
alt="demo"
>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>搜尋 &lt;br />Shift+shift&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/VeRXfgk.gif"
loading="lazy"
alt="search2"
>&lt;br />快速列出所有可能，快速定位&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>切換分頁&lt;br /> Ctrl+E&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/T48Dr58.gif"
loading="lazy"
alt="switch2"
>&lt;br />預設快捷鍵，會列出最近開啟的分頁&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>選擇檔案&lt;br /> Alt+F1然後按1&lt;br />若不想選擇按Esc退回Editor&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/o7J2P5D.gif"
loading="lazy"
alt="demo"
>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>快速選取區塊&lt;br />Ctrl+W&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/sP0SaBd.gif"
loading="lazy"
alt="selectWord"
>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>快速選取方法&lt;br />Alt+↑&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/4WVURXZ.gif"
loading="lazy"
alt="SelectMethod"
>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>查看根源&lt;br />Ctrl+B&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/rZoSSTU.gif"
loading="lazy"
alt="demo"
>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>快速定位錯誤&lt;br />F2&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://hoxtonhsu.com/C:%5cUsers%5cHoxton%5cDesktop%5cgif%5cdemo.gif"
loading="lazy"
alt="demo"
>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>查看變數提示&lt;br />Ctrl+P&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/yqKVxk3.gif"
loading="lazy"
alt="demo"
>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>修改&lt;br />Shift+F6&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/q83spMr.gif"
loading="lazy"
alt="demo"
>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>內建GitBlame功能&lt;br />對行數右鍵選擇gitBlame&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/kvtETsi.gif"
loading="lazy"
alt="GitBlame"
>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>萬能鍵Context Action&lt;br />&lt;br />引入變數、錯誤修正&amp;hellip;&lt;/strong>&lt;/td>
&lt;td>&lt;strong>&lt;img src="https://i.imgur.com/DfhLgtn.gif"
loading="lazy"
alt="demo"
>&lt;/strong>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>IntelliJ介紹</title><link>https://hoxtonhsu.com/p/intellij%E4%BB%8B%E7%B4%B9/</link><pubDate>Sun, 23 Oct 2022 20:40:49 +0800</pubDate><guid>https://hoxtonhsu.com/p/intellij%E4%BB%8B%E7%B4%B9/</guid><description>&lt;img src="https://i.imgur.com/Fx9nanx.png" alt="Featured image of post IntelliJ介紹" />&lt;h2 id="推薦的plugin">推薦的Plugin&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Plugin名稱&lt;/th>
&lt;th>截圖&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>One Dark Theme&lt;br />&lt;img src="https://i.imgur.com/RDwmNyk.png"
loading="lazy"
alt="image-20221109011709066"
>佈景主題&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/rokbaGu.png"
loading="lazy"
alt="image-20221109011724288"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;br />&lt;img src="https://i.imgur.com/DXd3gwi.png"
loading="lazy"
alt="image-20221109011844072"
>按鍵提示&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/tHGPxbO.gif"
loading="lazy"
alt="ShortCutHit"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rainbow Brackets&lt;br />&lt;img src="https://i.imgur.com/U1YiDG0.png"
loading="lazy"
alt="image-20221109012245196"
>&lt;br />括弧顏色顯示&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/hX6ghuf.png"
loading="lazy"
alt="image-20221109012300415"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Nyan Progress Bar&lt;img src="https://i.imgur.com/puz6Ast.png"
loading="lazy"
alt="image-20221109012330374"
>&lt;br />讀取條改變&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/DwOQ9TA.gif"
loading="lazy"
alt="bar"
>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="要改的設定">要改的設定&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Code Completion Alt+.&lt;br />&lt;br /> &lt;img src="https://i.imgur.com/wI4OJLb.png"
loading="lazy"
alt="image-20221109012657212"
>&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/QDvdM96.gif"
loading="lazy"
alt="code"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Second Basic Alt+/&lt;br /> &lt;img src="https://i.imgur.com/UQP8q4F.png"
loading="lazy"
alt="image-20221109013135689"
>&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/1nIbigD.gif"
loading="lazy"
alt="comple"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Run F10&lt;br />&lt;img src="https://i.imgur.com/GRWVIQD.png"
loading="lazy"
alt="image-20221109013451000"
>&lt;/td>
&lt;td>就Run&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Terminal Alt+`&lt;br />&lt;img src="https://i.imgur.com/mULyQep.png"
loading="lazy"
alt="image-20221109013544910"
> | &lt;img src="https://i.imgur.com/xpIwXjH.gif"
loading="lazy"
> |&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>更改Terminal Bash CMD or Window terminal&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/pfBEHEU.png"
loading="lazy"
alt="image-20221109013734173"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>更改TODO 模板&lt;br />&lt;img src="https://i.imgur.com/fxIxqq0.png"
loading="lazy"
alt="image-20221109013905433"
>&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/omEwjLh.gif"
loading="lazy"
alt="demo"
>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="實用的快捷鍵">實用的快捷鍵&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>功能&lt;/th>
&lt;th>預覽&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>搜尋 &lt;br />Shift+shift&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/VeRXfgk.gif"
loading="lazy"
alt="search2"
>&lt;br />快速列出所有可能，快速定位&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>切換分頁&lt;br /> Ctrl+E&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/T48Dr58.gif"
loading="lazy"
alt="switch2"
>&lt;br />預設快捷鍵，會列出最近開啟的分頁&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>選擇檔案&lt;br /> Alt+F1然後按1&lt;br />若不想選擇按Esc退回Editor&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/o7J2P5D.gif"
loading="lazy"
alt="demo"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>快速選取區塊&lt;br />Ctrl+W&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/sP0SaBd.gif"
loading="lazy"
alt="selectWord"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>快速選取方法&lt;br />Alt+↑&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/4WVURXZ.gif"
loading="lazy"
alt="SelectMethod"
>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>內建GitBlame功能&lt;br />對行數右鍵選擇gitBlame&lt;/td>
&lt;td>&lt;img src="https://i.imgur.com/kvtETsi.gif"
loading="lazy"
alt="GitBlame"
>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>CLion的MutilMain</title><link>https://hoxtonhsu.com/p/clion%E7%9A%84mutilmain/</link><pubDate>Mon, 17 Oct 2022 18:09:43 +0800</pubDate><guid>https://hoxtonhsu.com/p/clion%E7%9A%84mutilmain/</guid><description>&lt;img src="https://i.imgur.com/aGwtINt.png" alt="Featured image of post CLion的MutilMain" />&lt;p>最近在研究C++，但發現我的CLion不知道為什麼只能有一個Main方法，後來網路上查了一下之後發現好像是因為CMake的關係。&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/F5hZpXH.png"
loading="lazy"
alt="image-20221017181210022"
>&lt;/p>
&lt;blockquote>
&lt;p>錯誤訊息&lt;/p>
&lt;/blockquote>
&lt;p>後來研究了一下，發現只要在Project底下的CMakeList.txt加上這段就可以了&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">file (GLOB files *.cpp)
foreach (file ${files})
string(REGEX REPLACE &amp;#34;.+/(.+)\\..*&amp;#34; &amp;#34;\\1&amp;#34; exe ${file})
add_executable (${exe} ${file})
message (\ \ \ \ --\ src/${exe}.cpp\ will\ be\ compiled\ to\ bin/${exe})
endforeach ()
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/qKhhlaq.png"
loading="lazy"
alt="image-20221017181342487"
>&lt;/p>
&lt;blockquote>
&lt;p>完整的圖片如上&lt;/p>
&lt;/blockquote>
&lt;p>加入之後記得要Reload CMake Project&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/DrQHwR8.png"
loading="lazy"
alt="image-20221017181404785"
>&lt;/p></description></item><item><title>TYPORA 如何上傳圖片(教學 使用Github , imagur作為圖片空間)</title><link>https://hoxtonhsu.com/p/typora-%E5%A6%82%E4%BD%95%E4%B8%8A%E5%82%B3%E5%9C%96%E7%89%87%E6%95%99%E5%AD%B8-%E4%BD%BF%E7%94%A8github-imagur%E4%BD%9C%E7%82%BA%E5%9C%96%E7%89%87%E7%A9%BA%E9%96%93/</link><pubDate>Sat, 08 Oct 2022 01:02:04 +0800</pubDate><guid>https://hoxtonhsu.com/p/typora-%E5%A6%82%E4%BD%95%E4%B8%8A%E5%82%B3%E5%9C%96%E7%89%87%E6%95%99%E5%AD%B8-%E4%BD%BF%E7%94%A8github-imagur%E4%BD%9C%E7%82%BA%E5%9C%96%E7%89%87%E7%A9%BA%E9%96%93/</guid><description>&lt;img src="https://i.imgur.com/W6FAkN1.png" alt="Featured image of post TYPORA 如何上傳圖片(教學 使用Github , imagur作為圖片空間)" />&lt;p>最近領到薪水後買了TYPORA後，想找如何上傳圖片的教學，發現網路上的教學蠻少的，台灣好像只有一篇，還是For mac的教學，剩下的都是中國的教學，但他們用的圖床，台灣也很多不能用，後來研究了幾天終於搞懂，所以決定寫一篇看看&lt;/p>
&lt;p>圖片空間有Github跟imgur，就看你想要用哪個就用哪個吧，其實沒差太多，但imgur會稍微簡單一點點點點點點，以下是步驟&lt;/p>
&lt;h2 id="開始">開始&lt;/h2>
&lt;ul>
&lt;li>先去安裝node.js，因為會需要裡面的npm&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/&lt;/a>&lt;/p>
&lt;p>安裝好可以用系統管理員身分打開cmd，並輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">node
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>如果有成功安裝的話應該會顯示&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*TJh1mXLciPRITGML.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>接著安裝picGo-core&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">npm install picgo -g
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*OURwrokLcSXsKhh7.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>說出現錯誤，要我們執行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">npm audit fix -force
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*iJyRBtSoBBDDWCiL.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>執行完之後就安裝好了，接著輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">picgo
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來確認是否有安裝成功，有時候可能會出現&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">檔案未經數位簽署這個指令碼將不會在系統上執行
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之類之類的句子，這時候可以輸入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">Set-ExecutionPolicy RemoteSigned
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來允許執行，這時候在輸入picgo應該就可以看到這樣子的畫面了&lt;/p>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*5z4fiwasXjd5owxU.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>到這一步本地端的設定已經完成80%了，接下來就是要選擇要使用哪種圖片空間&lt;/p>
&lt;h2 id="github">Github&lt;/h2>
&lt;ul>
&lt;li>首先先到Github創建一個&lt;strong>公開&lt;/strong>的Repository，名字隨意就好&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*Qtv_aOAy_jvvJmxS.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>接著把這個Repository的URL複製下來&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">https://github.com/Hoxton019030/Typora
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>右上角個人頭像點開，選擇Settings&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*IvpN0zdI8lH7ArDz.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>左側選項最下面有一個Developer settings&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*I0XbiRgEZbAqSl1P.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>選擇Personal access tokens&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*av4YXNmNeXapHaSQ.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>選擇 Generate new token&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*f4CIbfps52_y13UM.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>輸入這個token的名稱，隨便取就好，Expiration看個人喜好，我很懶，所以我選擇永久，下面的select scopes勾選repo&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*OdCzsVJiqnSncFsR.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>接著會產生一組ghp開頭的token，這組序號&lt;strong>只會在這裡以明碼出現一次，接下來永遠都不會再以明碼的方式呈現&lt;/strong>所以請好好記起來&lt;/li>
&lt;li>然後到Typora的偏好設定裡打開&lt;code>開啟設定檔&lt;/code>，通常會是用一個文本編輯器打開，通常都是vscode啦&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*TfGA65bOI7NQlTdO.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>接著把這串東西複製貼上去&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">{
&amp;#34;picBed&amp;#34;: {
&amp;#34;current&amp;#34;: &amp;#34;github&amp;#34;,
&amp;#34;uploader&amp;#34;: &amp;#34;github&amp;#34;,
&amp;#34;github&amp;#34;: {
&amp;#34;repo&amp;#34;: &amp;#34;Hoxton019030/Typora&amp;#34;, //這串對應的是使用者名稱+Repo名稱，改成自己的
&amp;#34;token&amp;#34;: &amp;#34;ghp_xxxxxxxxxxxxxxxxxxxx&amp;#34;, //這邊把剛剛產生的token貼上去
&amp;#34;path&amp;#34;: &amp;#34;data/&amp;#34;, //圖片要上傳到哪個資料夾，可以先不用設定，
&amp;#34;customUrl&amp;#34;: &amp;#34;https://raw.githubusercontent.com/Hoxton019030/Typora/main&amp;#34;, //把Hoxton019030/Typora改成你自己的repo
&amp;#34;branch&amp;#34;: &amp;#34;main&amp;#34; //應該也不用動
}
},
&amp;#34;picgoPlugins&amp;#34;: {}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>完成之後應該長這個樣子，接著按存檔&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*Jv9sK10wHg0dKTgj.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>接著回到設定，試著按看看測試圖片上傳&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*aBg4zeoUl5MUkCUB.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>如果成功的話就會出現這樣的畫面&lt;/p>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*jWdQ9Nc1dfG2Ju4g.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>就代表你成功了！&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>如果你在按一次測試圖片上傳，由於上傳的圖片檔名一模一樣，會報錯，這樣是正常現象，請不要驚慌&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*W658xLMijQPg2W5M.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h2 id="imgur">imgur&lt;/h2>
&lt;ul>
&lt;li>首先先辦帳號&lt;/li>
&lt;li>&lt;a href="https://api.imgur.com/oauth2/addclient">https://api.imgur.com/oauth2/addclient&lt;/a> 點擊這個網址&lt;/li>
&lt;li>老樣子，名字隨意取就好，然後Authorization type選擇第二個&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/1*X8N6pfp6RBxMrFUQ-7DMhg.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>接著會跳出畫面，會告訴你你的Client ID是什麼，請複製下來&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*BXo0QET3625yCZb3.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>接著到偏好設定裡面打開開啟設定檔，通常會用vscode開啟&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*wcsfPRq4DONBo8WE.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>接著把這段複製貼上上去&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">{
&amp;#34;picBed&amp;#34;: {
&amp;#34;current&amp;#34;: &amp;#34;imgur&amp;#34;,
&amp;#34;uploader&amp;#34;: &amp;#34;imgur&amp;#34;,
&amp;#34;imgur&amp;#34;:{
&amp;#34;clientId&amp;#34;: &amp;#34;XXXXXXXXXXX&amp;#34;
}
},
&amp;#34;picgoPlugins&amp;#34;: {}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>貼上去之後應該會長這個樣子&lt;/p>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*w6neiFt-pF_F7Xi5.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;ul>
&lt;li>然後存檔之後，回到偏好設定，按「測試圖片上傳」&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*zVjvGlhqINfbk757.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://cdn-images-1.medium.com/max/800/0*J3wT0Gdta9xwlTpd.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>跳出這個就代表成功上傳了！&lt;/p>
&lt;h2 id="小結">小結&lt;/h2>
&lt;p>這樣子只要在typora裡面貼上圖片，typora就會自動幫我們上傳圖片到圖片空間了。&lt;/p></description></item><item><title>從入職到離職，事務所的日子之《該進事務所嗎？》</title><link>https://hoxtonhsu.com/p/%E5%BE%9E%E5%85%A5%E8%81%B7%E5%88%B0%E9%9B%A2%E8%81%B7%E4%BA%8B%E5%8B%99%E6%89%80%E7%9A%84%E6%97%A5%E5%AD%90%E4%B9%8B%E8%A9%B2%E9%80%B2%E4%BA%8B%E5%8B%99%E6%89%80%E5%97%8E/</link><pubDate>Sat, 08 Oct 2022 00:36:13 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%BE%9E%E5%85%A5%E8%81%B7%E5%88%B0%E9%9B%A2%E8%81%B7%E4%BA%8B%E5%8B%99%E6%89%80%E7%9A%84%E6%97%A5%E5%AD%90%E4%B9%8B%E8%A9%B2%E9%80%B2%E4%BA%8B%E5%8B%99%E6%89%80%E5%97%8E/</guid><description>&lt;img src="https://i.imgur.com/aHMlhAm.png" alt="Featured image of post 從入職到離職，事務所的日子之《該進事務所嗎？》" />&lt;p>​ &lt;strong>到底要不要進事務所？&lt;/strong>&lt;/p>
&lt;p>我想一開始就給出解答&lt;/p>
&lt;p>&lt;strong>如果不知道做什麼就進事務所吧！&lt;/strong>&lt;/p>
&lt;p>​ 如果是會計系的學生，在大學期間一定有想過自己到底要不要進入所謂的四大（勤業、資誠、安侯、安永），我在大學的時候對於這個問題倒是沒太多想法，只覺得進入四大事務所好像很威風，出入信義區，西裝革履的樣子，名稱也是國際上有名公司，怎麼想都覺得很穩，能出什麼問題？&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/b0yPTz9.png"
loading="lazy"
alt="image-20221008012440851"
>&lt;/p>
&lt;p>當然實際進去之後我就後悔了，發現這樣的生活根本不是自己想要的，索性的待到一月，把年終獎金還有到職獎金，以及政府的青年就業補助的錢領一領之後，就趕緊跑回高雄準備轉換跑道，做什麼都行，但這輩子絕對不會在做會計了。&lt;/p>
&lt;p>但離職過後也快一年，轉換工作也算成功，但持續的一直有在Follow會計這個圈子，所以想說來分享一下自己的一些想法，希望可以幫助到一些會計系的學生。&lt;/p>
&lt;hr>
&lt;p>一份工作一定是有好有壞的，事務所的工作則是將好與壞的那非常極端，這篇文章先來講「我」覺得事務所好的地方，下一篇文章再來講我為什麼離職。&lt;/p>
&lt;ol>
&lt;li>
&lt;h2 id="事務所的名聲">事務所的名聲&lt;/h2>
&lt;/li>
&lt;/ol>
&lt;p>事務所的名聲是我在離職之後最直接的感受，在自我介紹或是之後轉換跑道的面試，第一個被問的問題都是&lt;/p>
&lt;p>「你之前在資誠耶，很好的一間公司？怎麼會想要離職轉換跑道呢？」&lt;/p>
&lt;p>誠然四大在會計系學生的眼中已經是臭到不能再臭的公司，但出了事務所之後，只要待的公司不是太鳥的那種，基本上四大的經歷即使不到亮眼，但也絕對不會是一個看不上眼的經歷。&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;h2 id="事務所是一家很大的公司">事務所是一家很大的公司&lt;/h2>
&lt;/li>
&lt;/ol>
&lt;p>在離職之後第二個很深的感受是，四大確實是一間很大的公司，在信義區的精華地段裡有很多層樓的辦公室，有包場的尾牙，會請藝人來唱歌，還有很完善的公司分工制度。我現在的公司就是一家在中山區普通商辦大樓裡面的辦公室，員工數大概也就十來人左右，也沒什麼完整的分工制度，有時候感覺一個人要身兼多職。&lt;/p>
&lt;p>而且我相信很多人離職之後，第二家公司的規模都不會再有四大那樣的規模，所以我覺得可以來四大體驗看看一家員工數破千的公司感覺是怎麼樣的。&lt;/p>
&lt;ol start="3">
&lt;li>
&lt;h2 id="事務所的工作強度">事務所的工作強度&lt;/h2>
&lt;/li>
&lt;/ol>
&lt;p>這點其實很諷刺，我之前在的組別是最近很夯的資誠A11 AKA 獨立所疊字組。說實話當時也沒覺得什麼地不地獄的，當你看同事在加班，組長在加班，經理們也在加班，其實當下也會覺得沒什麼，反正大家就一起加班，有時候晚上六點多，同事們相約訂餐的畫面總讓我想起國小在讀安親班的感覺。&lt;/p>
&lt;p>我在事務所的上班的大概就是9月入職然後到1月初離職，唯一接觸到的忙季大概就是十月，那時候星期一到五大概都是9點10點那邊回家，差不多有三天是待到11點才走（11點就可以走是因為資誠是在國貿大樓，國貿大樓11點就要關門，所以才有機會回家Q_Q），星期六大概是10點11點進所內，然後可能晚上8、9點離開，至於星期天我是沒進過所內，快樂的小確幸～&lt;/p>
&lt;p>在這樣中強度的加班強度下，我離職之後，不管待哪家公司我都覺得好爽，這可能也是事務所很諷刺的一個好處吧，畢竟從四大出來的，每個都是見過地獄的人，到哪裡都像是天堂一樣。&lt;/p>
&lt;hr>
&lt;p>哈哈，可能真的太久沒寫文章了，感覺原本腦中有很多想法，突然要寫就寫不出什麼東西來，自己寫完再回頭來看自己列的這幾點，發現真的是蠻無聊的幾個點，也不構成什麼吸引力，但要問我後悔進入事務所嗎？其實還蠻慶幸我有進入事務所的，因為世界上真的找不太到比那更爛的工作了，我也是在那段期間真的很想離職，有這樣的念頭之後才知道自己到底想做的是什麼，這可能就是所謂的「在極大的痛苦中感覺精神甦醒吧」，總之我想說的是，不管你是台政北或是私科會計，不知道做啥就是選事務所，進去之後就會知道原來有這麼爛的工作，就會強迫自己去想自己到底要做什麼，如果做得下去那也很好，事務所的履歷還是有一點點用的（但我都建議最好是待到組長會比較有用一點）。&lt;/p>
&lt;p>接下來下一篇文章會聊聊我為什麼從事務所離職，應該蠻多可以談的～&lt;/p></description></item><item><title>基礎AOP介紹-Filter Interceptor AspectJ</title><link>https://hoxtonhsu.com/p/%E5%9F%BA%E7%A4%8Eaop%E4%BB%8B%E7%B4%B9-filter-interceptor-aspectj/</link><pubDate>Fri, 07 Oct 2022 22:41:52 +0800</pubDate><guid>https://hoxtonhsu.com/p/%E5%9F%BA%E7%A4%8Eaop%E4%BB%8B%E7%B4%B9-filter-interceptor-aspectj/</guid><description>&lt;img src="https://i.imgur.com/B7GhSw1.png" alt="Featured image of post 基礎AOP介紹-Filter Interceptor AspectJ" />&lt;h1 id="目錄">目錄&lt;/h1>
&lt;ul>
&lt;li>&lt;a class="link" href="#Filter%28%e9%81%8e%e6%bf%be%e5%99%a8%29Interceptor%28%e6%94%94%e6%88%aa%e5%99%a8%29AOP%28%e5%89%96%e9%9d%a2%e5%b0%8e%e5%90%91%e7%a8%8b%e5%bc%8f%e8%a8%ad%e8%a8%88%29%e4%b9%8b%e5%b7%ae%e7%95%b0" >Filter(過濾器)Interceptor(攔截器)AOP(剖面導向程式設計)之差異&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#Filter" >Filter &lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#Interceptor" >Interceptor&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#AspectJ" >AspectJ&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="aspectj">AspectJ&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">graph TD;
AOP ---&amp;gt; SpringAop &amp;amp; AspectJ
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="aop-概念">AOP (概念)&lt;/h2>
&lt;p>面向切面編程，利用AOP可以對業務邏輯的各個部分進行隔離，使得業務邏輯各部分之間的耦合度降低，提高程式的可重用性，同時提高開發的效率&lt;/p>
&lt;p>不修改原始碼，從而擴充新功能&lt;/p>
&lt;h1 id="filter過濾器interceptor攔截器aspectjaop之差異">Filter(過濾器)Interceptor(攔截器)AspectJ(AOP)之差異&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">flowchart LR;
1((使用者))--發送請求
--&amp;gt;Filter\n+統一設置編碼\n+過濾敏感字\n+登入驗證\n+URL級別的訪問權限控制\n+數據壓縮
--&amp;gt;dispatcher
--&amp;gt;Interceptor\n+權限驗證\n+登入驗證\n+性能檢測
--&amp;gt;AOP\n+日誌紀錄
--&amp;gt;2(Controller)
-1[粗糙]--能處理request的精細程度----&amp;gt;-2[細緻]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/6rnsYg4.png"
loading="lazy"
alt="image-20220913095403747"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/vO1K7ew.png"
loading="lazy"
alt="image-20220912164304013"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/jQ4pF5v.png"
loading="lazy"
alt="image-20220913100841950"
>&lt;/p>
&lt;h2 id="filter">Filter&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">
flowchart LR;
1[瀏覽器]---&amp;gt;2{過濾器}---&amp;gt;3[Web資源]
3[Web資源]--&amp;gt;2{過濾器}--&amp;gt;1[瀏覽器]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在HttpServletRequest到達Servlet之前，過濾、處理一些資訊，本身依賴Sevlet容器，不能獲取SpringBean的一些資訊，它是&lt;code>javax.servlet.FilterChain&lt;/code>的項目，&lt;strong>不是Springboot&lt;/strong>&lt;/p>
&lt;p>可以做什麼&lt;/p>
&lt;ul>
&lt;li>修改Request, Response&lt;/li>
&lt;li>防止xss(Cross-Site-SCripting跨網站指令碼)攻擊&lt;/li>
&lt;li>包裝二進制流&lt;/li>
&lt;/ul>
&lt;h4 id="自定義filter">自定義Filter&lt;/h4>
&lt;ul>
&lt;li>以註解方式製作Filter&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="cm">/**
&lt;/span>&lt;span class="cm">* 網路上教學蠻多都是implenments filter，但我建議extend GenericFilterBean
&lt;/span>&lt;span class="cm">* 會比較方便一點，省去implenments init(), distory()的麻煩
&lt;/span>&lt;span class="cm">*/&lt;/span>
&lt;span class="nd">@Slf4j&lt;/span>
&lt;span class="nd">@Component&lt;/span>
&lt;span class="nd">@WebFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">filterName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;f1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">urlPatterns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s">&amp;#34;*.html&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;*.jsp&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span> &lt;span class="c1">//filterName就只是一個名稱可以，隨意就好，urlPattern是用來指定哪些url要經過這個過濾器
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HiFilter&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">GenericFilterBean&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">doFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">FilterChain&lt;/span> &lt;span class="n">chain&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">IOException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ServletException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello Hoxton&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">chain&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">doFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//代表這個Filter已經作用完畢，可以把request,response交給下一個Filter了
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/R9tNv8y.png"
loading="lazy"
alt="image-20220912151657403"
>&lt;/p>
&lt;p>結果如上&lt;/p>
&lt;ul>
&lt;li>以Java配置方式製作Filter&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Slf4j&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm">* 網路上教學蠻多都是implenments filter，但我建議extend GenericFilterBean
&lt;/span>&lt;span class="cm">* 會比較方便一點，省去implenments init(), distory()的麻煩
&lt;/span>&lt;span class="cm">*/&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HiFilter&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">GenericFilterBean&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">doFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">FilterChain&lt;/span> &lt;span class="n">chain&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">IOException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ServletException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Hello Hoxton&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">chain&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">doFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//代表這個Filter已經作用完畢，可以把request,response交給下一個Filter了
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">FilterConfig&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">FilterRegistrationBean&lt;/span> &lt;span class="nf">heFilterRegistration&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">FilterRegistrationBean&lt;/span> &lt;span class="n">registration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">FilterRegistrationBean&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">HiFilter&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">registration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addUrlPatterns&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/*&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//配置相關的路徑
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">registration&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>一些其他的config設置，僅供參考，與上面釋例無關&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">FilterConfig&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">//test
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">FilterRegistrationBean&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Filter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">logProcessTimeFilter&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">FilterRegistrationBean&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Filter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">bean&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">FilterRegistrationBean&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">LogProcessTimeFilter&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">//設定想要使用哪一個Filter
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addUrlPatterns&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/*&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//設置哪些url會觸發Filter，設置成/* 就代表全部都會吃到，/user/*就代表/user開頭的都會吃到
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;logProcessTimeFilter&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//設置要叫什麼名字
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setOrder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//設定過濾器的執行順序
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">FilterRegistrationBean&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Filter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">logApiFilter&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">FilterRegistrationBean&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Filter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">bean&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">FilterRegistrationBean&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">LogApiFilter&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">//設定想要使用哪一個Filter
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addUrlPatterns&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/*&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//設置哪些url會觸發Filter，設置成/* 就代表全部都會吃到，/user/*就代表/user開頭的都會吃到
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;logApiFilter&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//設置要叫什麼名字
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setOrder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//設定過濾器的執行順序
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">FilterRegistrationBean&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Filter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nf">printResponseRequestFilter&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">FilterRegistrationBean&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Filter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">bean&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">FilterRegistrationBean&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;();&lt;/span>
&lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">PrintResponseRequest&lt;/span>&lt;span class="o">());&lt;/span> &lt;span class="c1">//設定想要使用哪一個Filter
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addUrlPatterns&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/*&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//設置哪些url會觸發Filter，設置成/* 就代表全部都會吃到，/user/*就代表/user開頭的都會吃到
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setName&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;printResponseRequestFilter&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//設置要叫什麼名字
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setOrder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//設定過濾器的執行順序
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">bean&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/blockquote>
&lt;p>SpringBoot本身也提供了許多不同的Filter供使用，參考如下&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/nKZ6Hy1.png"
loading="lazy"
alt="image-20220912153023872"
>&lt;/p>
&lt;p>常用的有以下幾個&lt;/p>
&lt;ul>
&lt;li>CharacterEncodingFilter(用於處理編碼問題)&lt;/li>
&lt;li>HiddenHttpMethodFilter(隱藏Http函數)&lt;/li>
&lt;li>HttpPutFormContentFilter(form表單處理)&lt;/li>
&lt;li>RequesrtContextFilter(請求上下文)&lt;/li>
&lt;/ul>
&lt;p>其他資訊可以詳閱&lt;a class="link" href="https://blog.csdn.net/qyp1314/article/details/42023725" target="_blank" rel="noopener"
>Spring MVC中各个filter的用法&lt;/a>&lt;/p>
&lt;p>其中以&lt;strong>OncePerRequestFilter&lt;/strong>最常被使用，這個Filter會去&lt;strong>過濾每一個Request請求，且不會重複執行&lt;/strong>，且這個Filter有一個doFilterInternal()的方法，供我們撰寫Filter邏輯&lt;code>因doFilter()的方法已在OncePerRequestFilter裡面實現了&lt;/code>，可以用來做Jwtoken的登入驗證，程式如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">JwtAuthenticationFilter&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">OncePerRequestFilter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">JwtService&lt;/span> &lt;span class="n">jwtService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">UserDetailsService&lt;/span> &lt;span class="n">userDetailsService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c1">//注入JwtService UserDetailsService，分別用來解析Token與查詢使用者詳情
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">doFilterInternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">FilterChain&lt;/span> &lt;span class="n">filterChain&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">ServletException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">authHeader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getHeader&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpHeaders&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">AUTHORIZATION&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">authHeader&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">accessToken&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">authHeader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">replace&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Bearer &amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">//從請求標頭中取得Authorization欄位中的值
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">claims&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jwtService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">parseToken&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">accessToken&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">//擷取出後面的JWT字串，接著解析它
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">claims&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">//從claims物件中取得username欄位的值
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">UserDetails&lt;/span> &lt;span class="n">userDetails&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">userDetailsService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">loadUserByUsername&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">//並透過userDetailService查詢使用者詳情。這也代表JWT的內容(payload)必須包含username這個欄位
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//在filter中查詢使用者的目的，是為了將該次請求所代表的驗證後資料(Authentication)帶進security中的Context。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//Context是一種較抽象的概念，可以想像成該次請求的身分狀態
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">Authentication&lt;/span> &lt;span class="n">authentication&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UsernamePasswordAuthenticationToken&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">userDetails&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">userDetails&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAuthorities&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="c1">//為了將這個請求的使用者身分告訴伺服器，我們建立UsernamePasswordAuthenticationToken的物件，其中第三個參數放GrantedAuthority的List， 作為API的授權檢查
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//第一個參數(principal)傳入使用者詳請(UserDetails)。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 而第二個參數是credential，通常是密碼，但不傳入也無訪
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//經由傳入principal，我們得以在業務邏輯中從Context輕易獲取使用者身分的資料
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">SecurityContextHolder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContext&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">setAuthentication&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">authentication&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">filterChain&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">doFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置完後再將這個Filter加入Security的過濾鍊&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@EnableWebSecurity&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SecurityConfig&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">WebSecurityConfigurerAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">UserDetailsService&lt;/span> &lt;span class="n">userDetailsService&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nd">@Autowired&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">JwtAuthenticationFilter&lt;/span> &lt;span class="n">jwtAuthenticationFilter&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * 協助帳號密碼認證的東西
&lt;/span>&lt;span class="cm"> * @return
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="nd">@Bean&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">AuthenticationManager&lt;/span> &lt;span class="nf">authenticationManagerBean&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kd">super&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authenticationManagerBean&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">//加入Security的過濾鍊
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpSecurity&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">authorizeHttpRequests&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpMethod&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">GET&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;/users/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">hasAuthority&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MemberAuthority&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">SYSTEM_ADMIN&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="c1">// .antMatchers(HttpMethod.GET,&amp;#34;/h2/**&amp;#34;).hasAuthority(MemberAuthority.SYSTEM_ADMIN.name())
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">antMatchers&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpMethod&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">GET&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s">&amp;#34;/login/**&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">// .antMatchers(HttpMethod.POST,&amp;#34;login&amp;#34;).permitAll()
&lt;/span>&lt;span class="c1">// .antMatchers(HttpMethod.POST, &amp;#34;/users&amp;#34;).permitAll()
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">anyRequest&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">permitAll&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">addFilterBefore&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jwtAuthenticationFilter&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">UsernamePasswordAuthenticationFilter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">//於UsernamePasswordAuthenticationFilter進行認證
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">sessionManagement&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">sessionCreationPolicy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SessionCreationPolicy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">STATELESS&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">and&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">csrf&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">disable&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">formLogin&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">headers&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">frameOptions&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">disable&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">//讓spring Security可以和h2建立連線
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> *
&lt;/span>&lt;span class="cm"> * @param auth 配置全局驗證資訊，如Authentication Provider,UserDetailService等等資訊，
&lt;/span>&lt;span class="cm"> * authenticationManager會接收到UsernamePasswordAuthenticationToken傳入的資料後
&lt;/span>&lt;span class="cm"> * 調用SecurityConfig中所配置的userDetailsService,passwordEncoder來協助驗證
&lt;/span>&lt;span class="cm"> *
&lt;/span>&lt;span class="cm"> * @throws Exception
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">configure&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">AuthenticationManagerBuilder&lt;/span> &lt;span class="n">auth&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">auth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">userDetailsService&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">userDetailsService&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">passwordEncoder&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">BCryptPasswordEncoder&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一些Code的示範&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">LogProcessTimeFilter&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">OncePerRequestFilter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * @param request 請求
&lt;/span>&lt;span class="cm"> * @param response 回應
&lt;/span>&lt;span class="cm"> * @param filterChain 過濾鏈 會將現有的filter給串聯起來，當請求進入後端，需要依序經過它們才會達到Controller，相對的，當回應離開Controller，則是按照相反的方向經過那些Filter
&lt;/span>&lt;span class="cm"> * @throws ServletException
&lt;/span>&lt;span class="cm"> * @throws IOException
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">doFilterInternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">FilterChain&lt;/span> &lt;span class="n">filterChain&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">ServletException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kt">long&lt;/span> &lt;span class="n">startTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">filterChain&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">doFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//doFilter:相當於將請求送至Controller。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">endTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="kt">long&lt;/span> &lt;span class="n">processTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">endTime&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">startTime&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;processTime = &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">processTime&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * Controller收到的請求主體(RequestBody)和回應主體(ResponseBody)
&lt;/span>&lt;span class="cm"> * 分別由HttpServletRequest與HttpServletResponse的InputStream、OutputStream轉化而來，
&lt;/span>&lt;span class="cm"> * 但資料流只能讀取一次，如果在Filter層就被讀掉，可能會導致後面都收不到資料
&lt;/span>&lt;span class="cm"> * 為了保留主體中的資料，我們將請求主體與回應主體包裝成ContentCachingResponseWrapper ContentCachingRequestWrapper
&lt;/span>&lt;span class="cm"> * 再如同往常傳入FilterChain
&lt;/span>&lt;span class="cm"> *
&lt;/span>&lt;span class="cm"> * 這兩個Wrapper的特色是會在內部備份一個ByteArrayOutputStream，我們只要呼叫這兩個Wrapper的
&lt;/span>&lt;span class="cm"> * getContentAsByteArray就可以無限制地取得主體內容
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">PrintResponseRequest&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">OncePerRequestFilter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">protected&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">doFilterInternal&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">FilterChain&lt;/span> &lt;span class="n">filterChain&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">ServletException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">ContentCachingRequestWrapper&lt;/span> &lt;span class="n">requestWrapper&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ContentCachingRequestWrapper&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">ContentCachingResponseWrapper&lt;/span> &lt;span class="n">responseWrapper&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ContentCachingResponseWrapper&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">filterChain&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">doFilter&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">requestWrapper&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">responseWrapper&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">// logApi(request, response);
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">logBody&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">requestWrapper&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">responseWrapper&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">responseWrapper&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">copyBodyToResponse&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">logApi&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">ServletException&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">httpStatus&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getStatus&lt;/span>&lt;span class="o">();&lt;/span> &lt;span class="c1">//200,403,404之類的
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">httpMethod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getMethod&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">uri&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURI&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">params&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getQueryString&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">params&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">uri&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="s">&amp;#34;?&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">params&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">join&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">valueOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">httpStatus&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="n">httpMethod&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">logBody&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">ContentCachingRequestWrapper&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ContentCachingResponseWrapper&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">requestBody&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getContent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContentAsByteArray&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Request: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">requestBody&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">responseBody&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getContent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getContentAsByteArray&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Response: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">responseBody&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * @param content
&lt;/span>&lt;span class="cm"> * @return 返回JSON字串
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">private&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">getContent&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">byte&lt;/span> &lt;span class="o">[]&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="o">){&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">String&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">body&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">replaceAll&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;[\n\t]&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span> &lt;span class="c1">//去除換行\n與定位符號\t
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="interceptor">Interceptor&lt;/h2>
&lt;p>本身是AOP的一種應用，其實攔截器跟過濾器是可以互相替換的，功能其實差不多，只是&lt;strong>攔截器可以在請求到達Controller或是回應回傳出Contrller時進行攔截&lt;/strong>，攔截成功時可以實做一些自定義的業務邏輯進行修改，且Interceptor是Springboot下的一個功能&lt;code>org.springframework.web.servlet.HandlerInterceptor&lt;/code>&lt;/p>
&lt;p>可以用來&lt;/p>
&lt;ul>
&lt;li>性能監控：紀錄請求的處理時間，比如說請求處理太久（超過500毫秒）&lt;/li>
&lt;li>登入檢測&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/1qACg6a.png"
loading="lazy"
alt="image-20220912164539364"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">graph LR;
request--&amp;gt;id1
id1--&amp;gt;id2--&amp;gt;id4--&amp;gt;id3--&amp;gt;id6--&amp;gt;id5
subgraph 攔截器1
direction TB
id1[&amp;#34;preHandle()&amp;#34;]
id3[&amp;#34;postHandler()&amp;#34;]
id5[&amp;#34;afterCompletion()&amp;#34;]
end
subgraph 攔截器2
direction TB
id2[&amp;#34;preHandle()&amp;#34;]
id4[&amp;#34;postHandler()&amp;#34;]
id6[&amp;#34;afterCompletion()&amp;#34;]
end
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>要實現interceptor有兩種方式&lt;/p>
&lt;ol>
&lt;li>實作HandlerInterceptor&lt;/li>
&lt;li>繼承HandlerInterceptorAdapter&lt;/li>
&lt;/ol>
&lt;p>釋例&lt;/p>
&lt;ul>
&lt;li>自定義攔截器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">LogInterceptor&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">HandlerInterceptorAdapter&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">boolean&lt;/span> &lt;span class="nf">preHandle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">handler&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kt">long&lt;/span> &lt;span class="n">startTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;\n-------- LogInterception.preHandle --- &amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Request URL: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURL&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Start Time: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">setAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;startTime&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">startTime&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">postHandle&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">handler&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">ModelAndView&lt;/span> &lt;span class="n">modelAndView&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;\n-------- LogInterception.postHandle --- &amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Request URL: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURL&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">afterCompletion&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HttpServletRequest&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">HttpServletResponse&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">handler&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="n">ex&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;\n-------- LogInterception.afterCompletion --- &amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kt">long&lt;/span> &lt;span class="n">startTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getAttribute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;startTime&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kt">long&lt;/span> &lt;span class="n">endTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Request URL: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getRequestURL&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;End Time: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">endTime&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;Time Taken: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">endTime&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">startTime&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>註冊攔截器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Configuration&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">WebConfig&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">WebMvcConfigurer&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">addInterceptors&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">InterceptorRegistry&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addInterceptor&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">LogInterceptor&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addInterceptor&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">OldLoginInterceptor&lt;/span>&lt;span class="o">()).&lt;/span>&lt;span class="na">addPathPatterns&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/admin/oldLogin&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">addInterceptor&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">AdminInterceptor&lt;/span>&lt;span class="o">()).&lt;/span>&lt;span class="na">addPathPatterns&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/admin/*&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">excludePathPatterns&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/admin/oldLogin&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="aspectj-1">AspectJ&lt;/h2>
&lt;p>屬於一種AOP框架&lt;/p>
&lt;ul>
&lt;li>動態代理(Spring5本身已經封裝了)
&lt;ul>
&lt;li>有兩種情況的動態代理
&lt;ul>
&lt;li>
&lt;p>有介面(JDK動態代理)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">interface&lt;/span> &lt;span class="nc">UserDao&lt;/span>&lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">login&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">class&lt;/span> &lt;span class="nc">UserDaoImpl&lt;/span> &lt;span class="kd">implements&lt;/span>　&lt;span class="n">UserDao&lt;/span>&lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">login&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>創建UserDao介面實現類的代理對象，代理對象會有被代理對象的所有方法，並且增強&lt;/p>
&lt;/li>
&lt;li>
&lt;p>無介面(CGLIB動態代理)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">class&lt;/span> &lt;span class="nc">User&lt;/span>&lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">add&lt;/span> &lt;span class="o">(){&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">class&lt;/span> &lt;span class="nc">Person&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="kd">super&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="aopjdk動態代理">AOP(JDK動態代理)&lt;/h3>
&lt;p>使用JDK的動態代理，要使用Proxy類裡面的方法來創建出代理對象 &lt;code>newProxyInstance(類加載器,增強方法所在的類，這個類實現的介面,實現這個接口(InvocationHandler)&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Hoxton019030/image/main/data/202209061536485.png"
loading="lazy"
>&lt;/p>
&lt;p>編寫JDK動態代碼&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="nc">UserDao&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">add&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">update&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserDaoImpl&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">UserDao&lt;/span>&lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;add方法執行了&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="nf">update&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.example.aop&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.lang.reflect.InvocationHandler&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.lang.reflect.Method&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.lang.reflect.Proxy&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.Arrays&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * @author Hoxton
&lt;/span>&lt;span class="cm"> * @version 1.1.0
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">JDKProxy&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Class&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">interfaces&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="n">UserDao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">};&lt;/span>
&lt;span class="n">UserDaoImpl&lt;/span> &lt;span class="n">userDao&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UserDaoImpl&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">UserDao&lt;/span> &lt;span class="n">dao&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">UserDao&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">Proxy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newProxyInstance&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JDKProxy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getClassLoader&lt;/span>&lt;span class="o">(),&lt;/span> &lt;span class="n">interfaces&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">UserDaoProxy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">userDao&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="c1">//此dao已經不是原本的dao，而是新的代理類dao了
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;result = &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">//創建代理對象的代碼
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">UserDaoProxy&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">InvocationHandler&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">//1. 把創建的是誰的代理對象，把誰傳遞進來
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 有參建構子
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">private&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="nf">UserDaoProxy&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Object&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">obj&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">//增強的邏輯
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="nf">invoke&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Object&lt;/span> &lt;span class="n">proxy&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Method&lt;/span> &lt;span class="n">method&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">methodArgs&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Throwable&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">//方法之前
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;方法之前執行...&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">method&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34;傳遞的參數...&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">Arrays&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">methodArgs&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="c1">//被增強的方法執行
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">method&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">invoke&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">methodArgs&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="c1">//方法之後
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;方法之後執行...&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="aop專業術語">AOP專業術語&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>連接點&lt;/p>
&lt;p>一個類裡面中，能被增強的方法就叫連接點，下面這個類就有四個連接點&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Hoxton019030/image/main/data/202209121200728.png"
loading="lazy"
alt="image-20220912120043665"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">class&lt;/span> &lt;span class="nc">User&lt;/span>&lt;span class="o">{&lt;/span>
&lt;span class="n">add&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">update&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">select&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">delete&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>切入點&lt;/p>
&lt;p>實際被增強的方法，就叫切入點&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通知(增強)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>實際增強的邏輯部分稱為通知(增強)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通知有多種類型&lt;/p>
&lt;ol>
&lt;li>
&lt;p>前置通知&lt;/p>
&lt;p>在切入點前執行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>後置通知&lt;/p>
&lt;p>在切入點後執行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>環繞通知&lt;/p>
&lt;p>在切入點前後執行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>異常通知&lt;/p>
&lt;p>出現異常時執行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>最終通知&lt;/p>
&lt;p>執行到try&amp;hellip;catch的final時執行&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>切面&lt;/p>
&lt;p>是一個動作&lt;/p>
&lt;ol>
&lt;li>把通知應用到切入點的過程，就叫切面&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="aop準備">AOP(準備)&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Spring 框架一般都是基於AspectJ實現的AOP操作&lt;/p>
&lt;ol>
&lt;li>
&lt;p>什麼是AspectJ&lt;/p>
&lt;ul>
&lt;li>AspectJ不是Spring的組成部分，是一個獨立的AOP框架， 一般把AspectJ和Spring框架一起使用，進行AOP操作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>基於Aspect實現AOP操作&lt;/p>
&lt;ol>
&lt;li>xml配置文件實現&lt;/li>
&lt;li>基於註解方法實現(主要使用)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>再專案裡面引入AOP依賴&lt;/p>
&lt;/li>
&lt;li>
&lt;p>切入點表達式&lt;/p>
&lt;ol>
&lt;li>
&lt;p>切入點表達式的作用: 知道對哪個類的哪個方法進行增強&lt;/p>
&lt;/li>
&lt;li>
&lt;p>語法結構:&lt;/p>
&lt;p>execution( [權限修飾符] [返回類型] [類全路徑] [方法名稱] ( [參數列表] ) )&lt;/p>
&lt;ul>
&lt;li>
&lt;p>權限修飾符: public, private, *(代表不論是public, private 都選)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>返回類型: String, int&lt;/p>
&lt;/li>
&lt;li>
&lt;p>類全路徑: com.hoxton&amp;hellip;&amp;hellip;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方法名稱: 就方法名稱&lt;/p>
&lt;/li>
&lt;li>
&lt;p>參數列表: 有哪些參數&lt;/p>
&lt;p>舉例&lt;/p>
&lt;ol>
&lt;li>
&lt;p>對com.hoxton.dao.BookDao類裡面的add方法進行增強&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">execution&lt;/span>&lt;span class="o">(*&lt;/span> &lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hoxton&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">BookDao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="o">(..)&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>對com.hoxton.dao.BookDao類的所有方法進行增強&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">execution&lt;/span>&lt;span class="o">(*&lt;/span> &lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hoxton&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">dao&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">BookDao&lt;/span>&lt;span class="o">.*(..))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>對com.hoxton.dao包裡的所有類，類裡面的髓有方法進行增強&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">excution&lt;/span>&lt;span class="o">(*&lt;/span> &lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">hoxton&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">dao&lt;/span>&lt;span class="o">.*.*(..))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>within([package名].* )或( [package名]..*)&lt;/p>
&lt;p>舉例&lt;/p>
&lt;ol>
&lt;li>&lt;/li>
&lt;li>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="aop操作aspect-j--註解">AOP操作(Aspect J 註解)&lt;/h3>
&lt;ol>
&lt;li>創建類，在類裡面定義方法&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">User&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;add&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>
&lt;p>創建增強類(編寫增強邏輯)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>在增強類的裡面，創建方法，讓不同方法代表不同通知類型&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserProxy&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">before&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;before&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>進行通知的配置&lt;/p>
&lt;ol>
&lt;li>在Spring&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="log4j-2">Log4j 2&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">flowchart TD;
8[&amp;#34;ALL(全輸出不留情)&amp;#34;]---&amp;gt;7[&amp;#34;Trace(更細的除錯資訊，通常用來追蹤城市流程的日誌)&amp;#34;]---&amp;gt;6[&amp;#34;DEBUG(除錯資訊的日志)推薦★&amp;#34;]---&amp;gt;5[&amp;#34;INFO(一般資訊的日志)推薦★&amp;#34;]---&amp;gt;4[&amp;#34;WARN(可能導致錯誤的日志)&amp;#34;]---&amp;gt;3[&amp;#34;ERROR(造成應用錯誤停止的日志)&amp;#34;]---&amp;gt;2[&amp;#34;FETAL(造成應用程式停止的日志)&amp;#34;]---&amp;gt;1[&amp;#34;OFF(不輸出任何日志)&amp;#34;]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="參考">參考&lt;/h1>
&lt;p>&lt;a href="https://www.cnblogs.com/itlihao/p/14329905.html">https://www.cnblogs.com/itlihao/p/14329905.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://blog.csdn.net/fly910905/article/details/86537648">https://blog.csdn.net/fly910905/article/details/86537648&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/712557/" target="_blank" rel="noopener"
>SpringBoot攔截器(Interceptor)詳解&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.zendei.com/article/52571.html" target="_blank" rel="noopener"
>Spring Boot使用過濾器和攔截器分別實現REST介面簡易安全認證&lt;/a>&lt;/p>
&lt;blockquote>
&lt;/blockquote></description></item><item><title>Java內的排程器介紹</title><link>https://hoxtonhsu.com/p/java%E5%85%A7%E7%9A%84%E6%8E%92%E7%A8%8B%E5%99%A8%E4%BB%8B%E7%B4%B9/</link><pubDate>Thu, 06 Oct 2022 23:14:21 +0800</pubDate><guid>https://hoxtonhsu.com/p/java%E5%85%A7%E7%9A%84%E6%8E%92%E7%A8%8B%E5%99%A8%E4%BB%8B%E7%B4%B9/</guid><description>&lt;img src="https://i.imgur.com/9or5BzU.png" alt="Featured image of post Java內的排程器介紹" />&lt;h1 id="springboot-scheduling">SpringBoot-Scheduling&lt;/h1>
&lt;p>用來做定期任務的東西，有兩種&lt;/p>
&lt;ul>
&lt;li>Spring schedule：只適合處理簡單的計畫任務，不能處理分散式的任務，當任務太多時，可能出現阻塞、崩潰、延遲啟動等問題&lt;/li>
&lt;li>Quartz：更強大的一個排程器，能夠配置上百甚至上千的事務。&lt;/li>
&lt;/ul>
&lt;h1 id="spring-schedule">Spring Schedule&lt;/h1>
&lt;h2 id="步驟">步驟&lt;/h2>
&lt;ol>
&lt;li>在啟動類上加上@EnableScheduling&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@SpringBootApplication&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="nd">@EnableScheduling&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Application&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">SpringApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>在方法上加上@Scheduled&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Component&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Task&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Scheduled&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">fixedDelay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">100&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">printLocalTime&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">LocalTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/RJ1HtHT.png"
loading="lazy"
alt="image-20220914144530121"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="nd">@Scheduled&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">cron&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;1 * * * * ?&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">zone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Asia/Taipei&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">printPer5second&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;cron&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/AATFHO2.png"
loading="lazy"
alt="image-20220914145339544"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Scheduled&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">cron&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;0/1 * * * * ?&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">zone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Asia/Taipei&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">printPer5second&lt;/span>&lt;span class="o">(){&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;cron&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/Kby8DZf.png"
loading="lazy"
alt="image-20220914145730980"
>&lt;/p>
&lt;h2 id="cron表達式七子表達式">Cron表達式(七子表達式)&lt;/h2>
&lt;p>&lt;a class="link" href="https://cron.qqe2.com/" target="_blank" rel="noopener"
>表達式生成工具&lt;/a>&lt;/p>
&lt;p>Cron語源來自Chronos，是希臘神話中掌管時間的神柯羅諾斯(Chronos)。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>秒&lt;/th>
&lt;th>分&lt;/th>
&lt;th>時&lt;/th>
&lt;th>日&lt;/th>
&lt;th>月&lt;/th>
&lt;th>周&lt;/th>
&lt;th>年(可選)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>?&lt;/td>
&lt;td>?&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>秒：0-59&lt;/li>
&lt;li>分：0-59&lt;/li>
&lt;li>時 ：0-23&lt;/li>
&lt;li>日：1-31&lt;/li>
&lt;li>月：0-11或&amp;quot;JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC&amp;quot;&lt;/li>
&lt;li>周：1-7或SUN, MON, TUE, WED, THU, FRI,SAT&lt;/li>
&lt;li>年&lt;/li>
&lt;/ul>
&lt;p>想像一個時鐘&amp;hellip;&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>當每次秒針指向一秒時&lt;/th>
&lt;th>1 * * * * ?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>當每次時針指向12時&lt;/td>
&lt;td>* * 12 * * ?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>每個月 1 號中午 12 點&lt;/td>
&lt;td>0 0 12 1 * ?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1 月每天中午 12 點，每 5 秒&lt;/td>
&lt;td>0/5 0 12 * 1 ?&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">字元&lt;/th>
&lt;th style="text-align:left">意義&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;code>*&lt;/code>&lt;/td>
&lt;td style="text-align:left">表達任意值，所有值都可以匹配&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>?&lt;/code>&lt;/td>
&lt;td style="text-align:left">只用在 &lt;code>日&lt;/code> 跟 &lt;code>周&lt;/code> 的值域，有點表達 don’t care 的概念，無所謂，不關心到底是什麼值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>-&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定範圍，前後接數字: 10-12&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>,&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定離散的選項: 1,5,6,8，或者的概念&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>/&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定增量，表達 &lt;code>每&lt;/code> 的概念: 0/5 意旨從 0 開始每 5 單位&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>L&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在 &lt;code>月&lt;/code> 跟 &lt;code>周&lt;/code> 的值域。在月的話表達最後一天，在周的話前面可以加上數字 3L 表示該月最後一個星期二&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>W&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>的值域表示距離最近的該月工作日: 15W，距離 15 號最近的工作日，可能往前也可能往後&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>LW&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>的值域，表示最後一周的工作日&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>#&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>周&lt;/code>的值域，指定特定周的特定日: “4#2” 表示第二周的星期三&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>C&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>跟&lt;code>周&lt;/code>的值域，指某特定個日期的後一天: 在&lt;code>日&lt;/code>中寫 3C 指該月 3 號的後一天，在&lt;code>周&lt;/code>中寫 2C 指該周星期一的後一天&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="quartz">Quartz&lt;/h1>
&lt;p>&lt;img src="https://i.imgur.com/C8FFRz9.png"
loading="lazy"
alt="image-20220916143034403"
>&lt;/p>
&lt;p>是一個開源的任務排程器，幾乎可以整合到任何Java應用程式中。&lt;/p>
&lt;p>它可以用來&lt;/p>
&lt;ul>
&lt;li>安排每個晚上把資料庫內容轉存到檔案&lt;/li>
&lt;li>提供定時提醒服務&lt;/li>
&lt;li>族繁不及備載&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h3 id="底層數據結構--堆">底層數據結構- 堆&lt;/h3>
&lt;h4 id="介紹">介紹&lt;/h4>
&lt;p>堆是一種特殊的樹，滿足下面兩個條件，就是一個&lt;strong>堆&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>堆是一顆完全二元樹&lt;code>完整二元樹：除了最後一層以外，其他層的節點數需要達到最大(1,2,4,8. ..)&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.imgur.com/GYIKgRe.png"
loading="lazy"
alt="image-20220916103657827"
>&lt;/p>
&lt;ol start="2">
&lt;li>每個節點所儲存的值，必須要大於&lt;code>小頂堆&lt;/code>或小於&lt;code>大頂堆&lt;/code>父節點的值&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.imgur.com/t5Aeict.png"
loading="lazy"
alt="image-20220916104946559"
>&lt;/p>
&lt;blockquote>
&lt;p>小頂堆&lt;/p>
&lt;/blockquote>
&lt;p>完整二元樹的一些特性：快速定位父節點&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/F9btok2.png"
loading="lazy"
alt="image-20220916105634080"
>&lt;/p>
&lt;p>&lt;strong>在排程器的框架中，每一個節點就是一個Job，越頻繁的Job會被放置在越上層的節點&lt;/strong>&lt;/p>
&lt;h4 id="如何插入元素">如何插入元素&lt;/h4>
&lt;p>尾插法，在尾部插入一個新的元素，然後上浮，浮到符合定義&lt;/p>
&lt;ol>
&lt;li>除了最後一層以外，其他層的節點數需要達到最大(1,2,4,8. ..)，且最後一層節點都靠左排列&lt;/li>
&lt;li>每個節點所儲存的值，必須要大於&lt;code>小頂堆&lt;/code>或小於&lt;code>大頂堆&lt;/code>父節點的值&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://i.imgur.com/kGnnrnf.png"
loading="lazy"
alt="image-20220916110137933"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/YjWGVYi.png"
loading="lazy"
alt="image-20220916110150486"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/pqhvAgT.png"
loading="lazy"
alt="image-20220916110656733"
>&lt;/p>
&lt;h4 id="如何刪除元素">如何刪除元素&lt;/h4>
&lt;p>將尾部(最後一個節點)放置到堆頂，然後下沉&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/vM6IFnf.png"
loading="lazy"
alt="image-20220916111249806"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/ltoSIL1.png"
loading="lazy"
alt="image-20220916111306206"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/spOXHoC.png"
loading="lazy"
alt="image-20220916111330270"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/giEhi6Y.png"
loading="lazy"
alt="image-20220916111958376"
>&lt;/p>
&lt;h3 id="時間輪算法time-wheel">時間輪算法(Time Wheel)&lt;/h3>
&lt;p>&lt;img src="https://i.imgur.com/FGlGv1M.png"
loading="lazy"
alt="image-20220916114613849"
>&lt;/p>
&lt;p>再刪除元素的時候都需要下沉，當節點數很多時會造成性能延宕&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/djp3Uq4.png"
loading="lazy"
alt="image-20220916113838923"
>&lt;/p>
&lt;h4 id="round-型的時間輪">round 型的時間輪&lt;/h4>
&lt;p>任務上記錄一個round，遍歷到了就將round減一，為0時取出來執行&lt;/p>
&lt;h4 id="分層時間輪">分層時間輪&lt;/h4>
&lt;p>Cron表達式以及其他排程器所採用的底層架構，分成秒輪、分輪、小時輪、日輪、周輪、月輪、年輪&amp;hellip;，月輪迭代到了，就將任務取出放到天輪中執行&amp;hellip;，以此類推&lt;/p>
&lt;h2 id="cron表達式七子表達式-1">Cron表達式(七子表達式)&lt;/h2>
&lt;p>&lt;a class="link" href="https://cron.qqe2.com/" target="_blank" rel="noopener"
>表達式生成工具&lt;/a>&lt;/p>
&lt;p>Cron語源來自Chronos，是希臘神話中掌管時間的神柯羅諾斯(Chronos)。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>秒&lt;/th>
&lt;th>分&lt;/th>
&lt;th>時&lt;/th>
&lt;th>日&lt;/th>
&lt;th>月&lt;/th>
&lt;th>周&lt;/th>
&lt;th>年(可選)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>*&lt;/td>
&lt;td>?&lt;/td>
&lt;td>?&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>秒：0-59&lt;/li>
&lt;li>分：0-59&lt;/li>
&lt;li>時 ：0-23&lt;/li>
&lt;li>日：1-31&lt;/li>
&lt;li>月：0-11或&amp;quot;JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC&amp;quot;&lt;/li>
&lt;li>周：1-7或SUN, MON, TUE, WED, THU, FRI,SAT&lt;/li>
&lt;li>年&lt;/li>
&lt;/ul>
&lt;p>想像一個時鐘&amp;hellip;&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>當每次秒針指向一秒時&lt;/th>
&lt;th>1 * * * * ?&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>當每次時針指向12時&lt;/td>
&lt;td>* * 12 * * ?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>每個月 1 號中午 12 點&lt;/td>
&lt;td>0 0 12 1 * ?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1 月每天中午 12 點，每 5 秒&lt;/td>
&lt;td>0/5 0 12 * 1 ?&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">字元&lt;/th>
&lt;th style="text-align:left">意義&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;code>*&lt;/code>&lt;/td>
&lt;td style="text-align:left">表達任意值，所有值都可以匹配&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>?&lt;/code>&lt;/td>
&lt;td style="text-align:left">只用在 &lt;code>日&lt;/code> 跟 &lt;code>周&lt;/code> 的值域，有點表達 don’t care 的概念，無所謂，不關心到底是什麼值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>-&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定範圍，前後接數字: 10-12&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>,&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定離散的選項: 1,5,6,8，或者的概念&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>/&lt;/code>&lt;/td>
&lt;td style="text-align:left">指定增量，表達 &lt;code>每&lt;/code> 的概念: 0/5 意旨從 0 開始每 5 單位&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>L&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在 &lt;code>月&lt;/code> 跟 &lt;code>周&lt;/code> 的值域。在月的話表達最後一天，在周的話前面可以加上數字 3L 表示該月最後一個星期二&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>W&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>的值域表示距離最近的該月工作日: 15W，距離 15 號最近的工作日，可能往前也可能往後&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>LW&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>的值域，表示最後一周的工作日&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>#&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>周&lt;/code>的值域，指定特定周的特定日: “4#2” 表示第二周的星期三&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>C&lt;/code>&lt;/td>
&lt;td style="text-align:left">用在&lt;code>日&lt;/code>跟&lt;code>周&lt;/code>的值域，指某特定個日期的後一天: 在&lt;code>日&lt;/code>中寫 3C 指該月 3 號的後一天，在&lt;code>周&lt;/code>中寫 2C 指該周星期一的後一天&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>​&lt;/p>
&lt;h2 id="重要api及概念">重要API及概念&lt;/h2>
&lt;blockquote>
&lt;p>記得Job類一定要是&lt;strong>public class&lt;/strong>，不然Scheduler會讀不到&lt;/p>
&lt;/blockquote>
&lt;p>釋例一：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">Quartz&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">MyJob&lt;/span> &lt;span class="n">myJob&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">MyJob&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JobBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MyJob&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;job1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">Trigger&lt;/span> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TriggerBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;trigger1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">startNow&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SimpleScheduleBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">simpleSchedule&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withIntervalInSeconds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">repeatForever&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Scheduler&lt;/span> &lt;span class="n">scheduler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">StdSchedulerFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDefaultScheduler&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">scheduleJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jobDetail&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">trigger&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">SchedulerException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MyJob&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Job&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JobExecutionContext&lt;/span> &lt;span class="n">jobExecutionContext&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">JobExecutionException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;MyJob execute:&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Date&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>釋例二&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HelloJob&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">try&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">Scheduler&lt;/span> &lt;span class="n">scheduler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">StdSchedulerFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDefaultScheduler&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JobBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SayHello&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;job1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">//Job1是名字，具有唯一性，group1是這個Job屬於哪一組，同一組的Job可以共享相同的邏輯來處理Job。需要name與Job才可以組成一個JobKey
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">usingJobData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Hoxton&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">usingJobData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;age&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;20&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withDescription&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;desc-demo&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">SimpleTrigger&lt;/span> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TriggerBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">startNow&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SimpleScheduleBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">simpleSchedule&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withIntervalInSeconds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">repeatForever&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">scheduleJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">jobDetail&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="n">trigger&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">// scheduler.shutdown();
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">SchedulerException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">RuntimeException&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="nd">@Slf4j&lt;/span>
&lt;span class="nd">@NoArgsConstructor&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SayHello&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Job&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JobExecutionContext&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">JobExecutionException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJobDetail&lt;/span>&lt;span class="o">();&lt;/span>&lt;span class="c1">//從context中獲取屬性
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">JobKey&lt;/span> &lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDetail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">Class&lt;/span>&lt;span class="o">&amp;lt;?&lt;/span> &lt;span class="kd">extends&lt;/span> &lt;span class="n">Job&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">jobClass&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDetail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJobClass&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">description&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDetail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDescription&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">JobDataMap&lt;/span> &lt;span class="n">jobDataMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDetail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJobDataMap&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">String&lt;/span> &lt;span class="n">username&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDataMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getString&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">jobDataMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getIntValue&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;age&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;\nJobKey : {},\n JobClass : {},\n JobDesc : {},\n username : {},\n age : {}&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span>
&lt;span class="n">key&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">jobClass&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="o">(),&lt;/span> &lt;span class="n">description&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">age&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="scheduler">Scheduler&lt;/h3>
&lt;p>生命週期由ScheduleFactory建立開始，呼叫shutdown方法結束。&lt;/p>
&lt;p>當Schduler建立，任何關於Schduling相關的事情，都由它控制&lt;/p>
&lt;ul>
&lt;li>新增&lt;/li>
&lt;li>刪除&lt;/li>
&lt;li>列出所有Job&lt;/li>
&lt;li>暫停觸發器&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>在Start之前不會做任何事情&lt;/strong>&lt;/p>
&lt;h3 id="job">Job&lt;/h3>
&lt;p>你希望被排程器排程的任務元件介面，定義如何執行，是正在執行的作業例項，一個Job可以建立多個JobDetail，擁有不同的JobDataMap。本身implement了Job類&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">graph TD;
Job ---&amp;gt; JodDetail1 &amp;amp; JodDetail2 &amp;amp; JodDetail3 &amp;amp; JodDetail...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">SendEmail&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Job&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JobExecutionContext&lt;/span> &lt;span class="n">jobExecutionContext&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">JobExecutionException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;SendEmail&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>當Job的觸發器觸發時，排程程式的工作執行將呼叫excute()方法&lt;/li>
&lt;li>該方法接收一個&lt;code>JobExcutionContext&lt;/code>物件，為Job提供了豐富的執行時環境，比如&lt;code>schduler&lt;/code>,&lt;code>trigger&lt;/code>,&lt;code>jobDataMap&lt;/code>,&lt;code>job&lt;/code>,&lt;code>calender&lt;/code>,&lt;code>time&lt;/code>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>何謂Context(上下文)&lt;/p>
&lt;p>可以理解為環境、容器的意思會比上下文更具體一點，它提供了一個程式中全域性的資訊。&lt;/p>
&lt;/blockquote>
&lt;h3 id="jobdetail">JobDetail&lt;/h3>
&lt;p>用於定義Job的各種屬性、各種任務，還可以用來為Job儲存狀態資訊的JobDataMap，是將Job加入scheduler時，所需要創建的一個物件，它包含了各種屬性設置，以及用於存取job實例狀態訊息的JobDataMap，在創建JobDetail時，需要將欲執行的類名傳遞給JobDetail，這樣schedule就知道要執行何種類型的job。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">JobBulider&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">Job&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">bulid&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="jobdatamap">JobDataMap&lt;/h3>
&lt;p>實作Map介面，因此具有Key-Value，儲存可序列化資料，供Job在執行時使用。也可以使用&lt;code>usingJobData(key,value)&lt;/code>在建構JobDetail的時候傳入資料，使用JobDetail.getDataMap()獲取Map。可以再透過jobDataMap取出裡面的數據&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">JobDetail&lt;/span> &lt;span class="n">job&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JobBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">HelloJob&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;helloJob&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="c1">//給job命名並分組
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">usingJobData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;jobdd&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;hello job&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;span class="c1">//通過JobBuilder的usingJobData方法給JobDataMap中塞入數據
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">HelloJob&lt;/span> &lt;span class="kd">implements&lt;/span> &lt;span class="n">Job&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nd">@Override&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">execute&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">JobExecutionContext&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">JobExecutionException&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJobDetail&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">());&lt;/span>&lt;span class="c1">// JobDetail的key又他的name和group組成
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getTrigger&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getKey&lt;/span>&lt;span class="o">());&lt;/span>&lt;span class="c1">// Trigger的key又他的name和group組成
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getJobDetail&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">getJobDataMap&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;jobdd&amp;#34;&lt;/span>&lt;span class="o">));&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;hello,quartz&amp;#34;&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>會輸出&lt;/p>
&lt;p>`hello.helloJob&lt;/p>
&lt;p>hello.helloTrigger&lt;/p>
&lt;p>hello job&lt;/p>
&lt;p>hello, quartz&lt;/p>
&lt;h3 id="trigger">Trigger&lt;/h3>
&lt;p>觸發任務執行，觸發器可能具有與Job有關的JobDataMap，以便將觸發器觸發的引數傳遞給Job，Quartz本身提供了幾種觸發器&lt;code>SimpleTrigger&lt;/code>和&lt;code>CronTrigger&lt;/code>是最常用到的。&lt;/p>
&lt;h4 id="simpletriger">&lt;strong>SimpleTriger&lt;/strong>&lt;/h4>
&lt;p>用於一次性執行作業或需要在給定的時間觸發一個作業並重複執行N次，且兩次執行時間有Delay。用在具體的時間點，並已指定的間隔時間重複執行若干次，它包含了幾種屬性：&lt;/p>
&lt;ol>
&lt;li>開始時間&lt;/li>
&lt;li>結束時間&lt;/li>
&lt;li>重複次數&lt;/li>
&lt;li>重複間隔&lt;/li>
&lt;/ol>
&lt;p>釋例一：立刻觸發一次，然後停止&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">Date&lt;/span> &lt;span class="n">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Date&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">Trigger&lt;/span> &lt;span class="n">trigger1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TriggerBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">startAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>釋例二：指定時間觸發，每隔十秒執行一次，重複10次&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger3&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">startAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">myTimeToStartFiring&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// if a start time is not given (if this line were omitted), &amp;#34;now&amp;#34; is implied
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">simpleSchedule&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIntervalInSeconds&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withRepeatCount&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="c1">// note that 10 repeats will give a total of 11 firings
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">forJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">myJob&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// identify job with handle to its JobDetail itself
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>釋例三：5分鐘以後開始觸發，僅執行一次&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="n">SimpleTrigger&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="n">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger5&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">startAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">futureDate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">IntervalUnit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">MINUTE&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="c1">// use DateBuilder to create a date in the future
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">forJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">myJobKey&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// identify job with its JobKey
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>釋例四：立即觸發，每個5分鐘執行一次，直到22:00：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger7&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">simpleSchedule&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIntervalInMinutes&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">repeatForever&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">endAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">dateOf&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">22&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>釋例五：在下一小時整點觸發，每個2小時執行一次，一直重複：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger8&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1">// because group is not specified, &amp;#34;trigger8&amp;#34; will be in the default group
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">startAt&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">evenHourDate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">))&lt;/span> &lt;span class="c1">// get the next even-hour (minutes and seconds zero (&amp;#34;00:00&amp;#34;))
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">simpleSchedule&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIntervalInHours&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">repeatForever&lt;/span>&lt;span class="o">())&lt;/span>
&lt;span class="c1">// note that in this example, &amp;#39;forJob(..)&amp;#39; is not called which is valid
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// if the trigger is passed to the scheduler along with the job
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">scheduleJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">trigger&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">job&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="crontrigger">&lt;strong>CronTrigger&lt;/strong>&lt;/h4>
&lt;p>希望以日期作為觸發任務的板機，就用CronTriger，&lt;strong>實務上比較常用這個&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">CronTrigger&lt;/span> &lt;span class="n">trigger2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TriggerBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newTrigger&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger3&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">CronScheduleBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">cronSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;0/2 * * * * ?&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="kn">package&lt;/span> &lt;span class="nn">com.how2java&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.quartz.CronScheduleBuilder.cronSchedule&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.quartz.JobBuilder.newJob&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.quartz.TriggerBuilder.newTrigger&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import static&lt;/span> &lt;span class="nn">org.quartz.SimpleScheduleBuilder.simpleSchedule&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">java.util.Date&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.CronTrigger&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.DateBuilder&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.JobDetail&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.Scheduler&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.SimpleTrigger&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">org.quartz.impl.StdSchedulerFactory&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">TestQuartz&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="kd">throws&lt;/span> &lt;span class="n">Exception&lt;/span>&lt;span class="o">{&lt;/span>
&lt;span class="n">Scheduler&lt;/span> &lt;span class="n">scheduler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">StdSchedulerFactory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getDefaultScheduler&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">Date&lt;/span> &lt;span class="n">startTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DateBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">nextGivenSecondDate&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">8&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">job&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">MailJob&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;mailJob&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;mailGroup&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="n">CronTrigger&lt;/span> &lt;span class="n">trigger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newTrigger&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;trigger1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="na">withSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">cronSchedule&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;0/2 * * * * ?&amp;#34;&lt;/span>&lt;span class="o">))&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">// schedule it to run!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Date&lt;/span> &lt;span class="n">ft&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">scheduleJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">job&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="n">trigger&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;使用的Cron表达式是：&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">trigger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">getCronExpression&lt;/span>&lt;span class="o">());&lt;/span>
&lt;span class="c1">// System.out.printf(&amp;#34;%s 这个任务会在 %s 准时开始运行，累计运行%d次，间隔时间是%d毫秒%n&amp;#34;, job.getKey(), ft.toLocaleString(), trigger.getRepeatCount()+1, trigger.getRepeatInterval());
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="o">();&lt;/span>
&lt;span class="c1">//等待200秒，让前面的任务都执行完了之后，再关闭调度器
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Thread&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">200000&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="n">scheduler&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">shutdown&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="jobbulider">JobBulider&lt;/h3>
&lt;p>用來建立&lt;a class="link" href="#JobDetail" >JobDetail&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-java" data-lang="java"> &lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JobBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">某個繼承了Job的類&lt;/span>&lt;span class="o">)...&lt;/span>
&lt;span class="n">JobDetail&lt;/span> &lt;span class="n">jobDetail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JobBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">newJob&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">SayHello&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withIdentity&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;job1&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;group1&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">usingJobData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;Hoxton&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">usingJobData&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;age&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="s">&amp;#34;20&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">withDescription&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;desc-demo&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="o">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>TriggerBulider&lt;/p>
&lt;p>用於建立&lt;a class="link" href="#Trigger" >Trigger&lt;/a>&lt;/p>
&lt;h3 id="identity">Identity&lt;/h3>
&lt;p>當Job和Trgger在Quartz排程程式中註冊時，會獲得標示鍵，&lt;code>JobKey&lt;/code>和&lt;code>TriggerKey&lt;/code>置入group中，易於組織管理，其中name與group必須&lt;strong>唯一&lt;/strong>&lt;/p>
&lt;h3 id="為何要將job和trigger分開來">為何要將Job和Trigger分開來?&lt;/h3>
&lt;blockquote>
&lt;p>While developing Quartz, we decided that it made sense to create a separation between the schedule and the work to be performed on that schedule. This has (in our opinion) many benefits.&lt;/p>
&lt;p>For example, Jobs can be created and stored in the job scheduler independent of a trigger, and many triggers can be associated with the same job. Another benefit of this loose-coupling is the ability to configure jobs that remain in the scheduler after their associated triggers have expired, so that that it can be rescheduled later, without having to re-define it. It also allows you to modify or replace a trigger without having to re-define its associated job.&lt;/p>
&lt;/blockquote>
&lt;h2 id="job與jobdetail的一些說明">Job與JobDetail的一些說明&lt;/h2>
&lt;ul>
&lt;li>Job是正在執行的作業，JobDetail則是作業的定義&lt;/li>
&lt;li>一個Job可以創建多個JobDetail，擁有不同的JobDataMap&lt;/li>
&lt;/ul>
&lt;p>舉例來說，今天寫了一個定時寄送信件的Job，叫做SendEmailJob，我們希望這個Job可以寄給客戶，然後在cc給你的主管，所以需要創建兩個不同的JobDetail，比如說SendEmailToClient、SendEmailToAdministor，並透過JobDataMap綁定參數傳遞至JobDetail中，這兩個JobDetail擁有各自獨立的JobDataMap，實現起來會更靈活。&lt;/p>
&lt;h1 id="參考">參考&lt;/h1>
&lt;p>&lt;a class="link" href="http://www.quartz-scheduler.org/documentation/quartz-2.3.0/quick-start.html" target="_blank" rel="noopener"
>官方文檔&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://iter01.com/575275.html" target="_blank" rel="noopener"
>任務排程框架Quartz快速入門&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.1ju.org/quartz/index" target="_blank" rel="noopener"
>Quartz教學基礎&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.796t.com/content/1545519797.html" target="_blank" rel="noopener"
>觸發器詳細定義&lt;/a>&lt;/p></description></item></channel></rss>